(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{635:function(s,n,e){"use strict";e.r(n);var t=e(2),a=Object(t.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h2",{attrs:{id:"认清需求"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#认清需求"}},[s._v("#")]),s._v(" 认清需求")]),s._v(" "),e("p",[s._v("实战中需求是这样的：")]),s._v(" "),e("p",[s._v("web 前端 A1 与后端 C1 建立 websocket，等后端 C2 推送给 C1 一个消息后，C1 再将这个消息推回给 A1，最后 A1 拿到这个回执后渲染界面；")]),s._v(" "),e("p",[s._v("额外说明：这个回执是由内嵌在 A1 iframe 里的 web 前端 A2 的用户输入的。")]),s._v(" "),e("p",[s._v("脑图如下：")]),s._v(" "),e("p",[e("img",{attrs:{src:"https://s3.jpg.cm/2021/08/06/IAEvdh.md.png",alt:"IAEvdh.md.png"}})]),s._v(" "),e("h2",{attrs:{id:"实战代码"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实战代码"}},[s._v("#")]),s._v(" 实战代码")]),s._v(" "),e("p",[s._v("通过"),e("a",{attrs:{href:"wss://echo.websocket.org"}},[s._v("wss://echo.websocket.org")]),s._v(" 来模拟连接地址：")]),s._v(" "),e("p",[s._v("重点说明：")]),s._v(" "),e("ol",[e("li",[s._v("因为拿到 回执 callBack 后前端就主动断开了，所以断开分为：正常断开 和 异常断开；")]),s._v(" "),e("li",[s._v("异常断开要有重连机制；")]),s._v(" "),e("li",[s._v("心跳发送机制；每隔 10 s 发送一个 'ping' 到后端；")]),s._v(" "),e("li",[s._v("send 失败也要重连；")])]),s._v(" "),e("ul",[e("li",[s._v("websocket.js 实战代码（参数做了简化，可直接复制在控制台上调用测试）")])]),s._v(" "),e("p",[e("img",{attrs:{src:"https://s3.jpg.cm/2021/08/06/IAEBq2.md.png",alt:"IAEBq2.md.png"}})]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var limitConnect = 20 // 断线重连次数\nvar timeConnect = 0\n\nconst service = 'wss://echo.websocket.org'\n\n// socket初始化\nconst webSocketInit = function() {\n\n  var ws = new WebSocket(service)\n\n  let ws_close_correctly = false\n\n  ws.onopen = function() {\n    console.log('已连接TCP服务器')\n  }\n  ws.onmessage = function(msg) {\n    if (msg.data === 'callBack') { //\n      ws.close()\n      ws_close_correctly = true\n      console.log(\"拿到回执，渲染界面\")\n    }\n  }\n  ws.onclose = function() {\n    console.log(ws_close_correctly ? 'ws 正常断开' : 'ws 异常断开')\n    reconnect(service)\n  }\n\n  // 重连\n  function reconnect(service) {\n    if (ws_close_correctly) return\n\n    if (limitConnect > 0) {\n      limitConnect--\n      timeConnect++\n      console.log('第' + timeConnect + '次重连')\n      setTimeout(function() {\n         webSocketInit()\n      }, 2000)\n    } else {\n      console.log('TCP连接已超时')\n    }\n  }\n\n  //  心跳 * 发送\n\n  var timer = setInterval(function() {\n    if (!isOpen(ws)) {\n      console.log('ws 已断开，不用发 ping')\n      clearInterval(timer)\n      return false\n    }\n    if (ws.readyState === 3) {\n      console.log('发送 send 失败，重连')\n      clearInterval(timer)\n      reconnect(service)\n    }\n\n    ws.send('ping')\n  }, 1000 * 10)\n\n  function isOpen(ws) { return ws.readyState === ws.OPEN }\n}\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br"),e("span",{staticClass:"line-number"},[s._v("44")]),e("br"),e("span",{staticClass:"line-number"},[s._v("45")]),e("br"),e("span",{staticClass:"line-number"},[s._v("46")]),e("br"),e("span",{staticClass:"line-number"},[s._v("47")]),e("br"),e("span",{staticClass:"line-number"},[s._v("48")]),e("br"),e("span",{staticClass:"line-number"},[s._v("49")]),e("br"),e("span",{staticClass:"line-number"},[s._v("50")]),e("br"),e("span",{staticClass:"line-number"},[s._v("51")]),e("br"),e("span",{staticClass:"line-number"},[s._v("52")]),e("br"),e("span",{staticClass:"line-number"},[s._v("53")]),e("br"),e("span",{staticClass:"line-number"},[s._v("54")]),e("br"),e("span",{staticClass:"line-number"},[s._v("55")]),e("br"),e("span",{staticClass:"line-number"},[s._v("56")]),e("br"),e("span",{staticClass:"line-number"},[s._v("57")]),e("br"),e("span",{staticClass:"line-number"},[s._v("58")]),e("br"),e("span",{staticClass:"line-number"},[s._v("59")]),e("br"),e("span",{staticClass:"line-number"},[s._v("60")]),e("br"),e("span",{staticClass:"line-number"},[s._v("61")]),e("br"),e("span",{staticClass:"line-number"},[s._v("62")]),e("br"),e("span",{staticClass:"line-number"},[s._v("63")]),e("br")])]),e("p",[s._v("调用：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("webSocketInit()\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"有些疑问"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#有些疑问"}},[s._v("#")]),s._v(" 有些疑问")]),s._v(" "),e("ul",[e("li",[e("p",[s._v("心跳包是由前端发更好，还是后端发更好？或者说：由前端发，发了之后，后端再返回一个，类似：ping、pong、ping、pong......（必要性又有多少？）")])]),s._v(" "),e("li",[e("p",[e("a",{attrs:{href:"https://bbs.csdn.net/topics/370223614",target:"_blank",rel:"noopener noreferrer"}},[s._v("心跳包设置多久发一次比较合理？"),e("OutboundLink")],1)])]),s._v(" "),e("li",[e("p",[s._v("在本瓜这个实战场景中，消息还可能丢失！！比如：在 A2 中用户输入传递给了 C2，然后 C2 把回执给了 C1，如果此时 websocket 是中断的，等待重连后，C1 是否还能把消息准确推给 A1？C1 和 C2 之间需要有一个机制来记录，A1 是否准确收到了回执！")])]),s._v(" "),e("li",[e("p",[s._v("页面崩溃下的 websocket 断开如何处理？")])])]),s._v(" "),e("p",[s._v("这些问题是开放性的！在逐层理解的过程中，将会对 websocket 有新的认识~")]),s._v(" "),e("h2",{attrs:{id:"要点整理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#要点整理"}},[s._v("#")]),s._v(" 要点整理")]),s._v(" "),e("p",[s._v("通过这次实战，也梳理了些概念点：")]),s._v(" "),e("ol",[e("li",[s._v("WebSocket 与 HTTP 和 HTTPS 使用相同的 TCP 端口；")]),s._v(" "),e("li",[s._v("RFC 6455 中规定：WebSocket 被设计为在 HTTP 80 和 443 端口上工作，并支持 HTTP 代理和中介，从而使其与 HTTP 协议兼容；")]),s._v(" "),e("li",[s._v("socket 本质是对 TCP/IP 协议栈的封装，它提供了一个针对 TCP 或者 UDP 编程的接口，并不是另一种协议；")]),s._v(" "),e("li",[s._v("WebSocket.readyState：0 (WebSocket.CONNECTING)正在链接中、1 (WebSocket.OPEN)已经链接并且可以通讯、2 (WebSocket.CLOSING)连接正在关闭、3 (WebSocket.CLOSED)连接已关闭或者没有链接成功；")]),s._v(" "),e("li",[s._v("websocket 基本属性和方法-"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/API/WebSocket",target:"_blank",rel:"noopener noreferrer"}},[s._v("MDN"),e("OutboundLink")],1),s._v(";\n......")])]),s._v(" "),e("p",[s._v("以上，便是本次 websocket 实战分享，可以把代码拷在控制台上玩一玩儿~")]),s._v(" "),e("p",[s._v("看到这里，喜欢就点个赞吧~👍👍👍后续会有更多关于实战的分享！"),e("strong",[s._v("实践是检验真理的唯一标准！")])]),s._v(" "),e("blockquote",[e("blockquote",[e("p",[s._v("我是掘进安东尼，输出暴露输入，技术洞见生活，下次再会~")])])])])}),[],!1,null,null,null);n.default=a.exports}}]);