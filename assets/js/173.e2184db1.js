(window.webpackJsonp=window.webpackJsonp||[]).push([[173],{671:function(t,a,e){"use strict";e.r(a);var r=e(2),p=Object(r.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("p",[t._v("「这是我参与2022首次更文挑战的第28天，活动详情查看："),e("a",{attrs:{href:"https://juejin.cn/post/7052884569032392740",target:"_blank",rel:"noopener noreferrer"}},[t._v("2022首次更文挑战"),e("OutboundLink")],1),t._v("」")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("数组合并可以说是我们在操作数组中最常遇到的场景之一！")]),t._v(" "),e("p",[t._v("本篇将简要分析三种数组合并的方法，并带来它们的性能差异分析~")]),t._v(" "),e("p",[t._v("它们是：")]),t._v(" "),e("ul",[e("li",[t._v("Concat")]),t._v(" "),e("li",[t._v("Push")]),t._v(" "),e("li",[t._v("Spread Syntax")])]),t._v(" "),e("p",[t._v("闲言少叙，冲ヾ(◍°∇°◍)ﾉﾞ")]),t._v(" "),e("h2",{attrs:{id:"concat"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[t._v("#")]),t._v(" Concat")]),t._v(" "),e("p",[t._v("Concat 是 JavaScript 的标准方法：用于合并两个或多个数组。此方法不会更改现有数组，而是返回一个新数组。")]),t._v(" "),e("ul",[e("li",[t._v("Array.prototype.concat()")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/609d741fc3bd454b9a20c61181571e9b~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[t._v("如图示：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b0eb5e3e270344dbbf608dbf5c3dbad7~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[e("a",{attrs:{href:"https://javascript.plainenglish.io/efficiently-merging-arrays-in-javascript-32993788a8b2",target:"_blank",rel:"noopener noreferrer"}},[t._v("图片来源"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("array2 合并到了 array1 后面，得到了一个新的 result 数组；")]),t._v(" "),e("h2",{attrs:{id:"push"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#push"}},[t._v("#")]),t._v(" Push")]),t._v(" "),e("p",[t._v("Push 也是合并数组常用方法，可将一个或多个元素添加到数组的末尾，并返回该数组的新长度。")]),t._v(" "),e("ul",[e("li",[t._v("Array.prototype.push()")])]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/412bbaf545b043dfae4f19db174be093~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0768c92a44914602aed4c68bbb8cc2fe~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[e("a",{attrs:{href:"https://javascript.plainenglish.io/efficiently-merging-arrays-in-javascript-32993788a8b2",target:"_blank",rel:"noopener noreferrer"}},[t._v("图片来源"),e("OutboundLink")],1)]),t._v(" "),e("p",[t._v("与 concat 不同的时，push 方法会更改原数组，如图示，array1 发生了变化；")]),t._v(" "),e("p",[t._v("push 方法按照以上用循环的方式写，显然是不够“美妙的”，所以有了一个新的语法来支持优化它：那就是扩展运算符；")]),t._v(" "),e("h2",{attrs:{id:"spread-syntax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#spread-syntax"}},[t._v("#")]),t._v(" Spread Syntax")]),t._v(" "),e("p",[t._v("扩展运算符 (spread syntax) 是 ES6 提供的一种非常便捷的新语法，用来展开字符串，数组和对象；")]),t._v(" "),e("p",[t._v("合并方法如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/7bbbf08c30794205b855b40b10f00aab~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[t._v("一行就解决：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4bd088b1d46d4a62a331b4a7b3db8e88~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[e("a",{attrs:{href:"https://javascript.plainenglish.io/efficiently-merging-arrays-in-javascript-32993788a8b2",target:"_blank",rel:"noopener noreferrer"}},[t._v("图片来源"),e("OutboundLink")],1)]),t._v(" "),e("h2",{attrs:{id:"性能对比"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#性能对比"}},[t._v("#")]),t._v(" 性能对比")]),t._v(" "),e("p",[t._v("以上 3 中数组合并方法的性能测评基于第三方库 "),e("a",{attrs:{href:"https://github.com/ecofic/article-efficiently-merging-arrays-in-javascript",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/ecofic/article-efficiently-merging-arrays-in-javascript"),e("OutboundLink")],1),t._v("，可以 clone 下来，运行调试：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/841053c3eb6a49dfa687c52040072d2b~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[t._v("这里，我们尝试从 3 个维度来进行测试：（分别用1、10、100、1000、100,000、100,000、1,000,000元素数组进行100次测试）")]),t._v(" "),e("ol",[e("li",[t._v("基本类型数组；")]),t._v(" "),e("li",[t._v("对象数组；")]),t._v(" "),e("li",[t._v("基本类型和对象混合的数组；")])]),t._v(" "),e("p",[t._v("得到以下数据：")]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/44f7638a0ea246be8af05e7a58cb0c0f~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/4c1011323f41426b95cb167b6d5ad8f1~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[e("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5432ac8670a94c8ebf2bf2d7ec56f0e1~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),e("p",[t._v("绿块代表着数组合并的性能较优，红色反之较差；")]),t._v(" "),e("p",[t._v("可以很明显的看到：扩展运算法的合并方法性能较优，但是不适用于长度较大的数组，会得到 N/A 的结果；（原作者测出这个长度边界值是 63,653）")]),t._v(" "),e("p",[t._v("所以，最终给到一个结论是：")]),t._v(" "),e("p",[e("strong",[t._v("合并长度小的数组，用扩展运算符；合并长度较大的数组，用 concat！")])]),t._v(" "),e("p",[t._v("简单又实用~~")]),t._v(" "),e("hr"),t._v(" "),e("p",[t._v("OK，以上便是本篇分享~")]),t._v(" "),e("blockquote",[e("p",[t._v("我是掘金安东尼，输出暴露输入，技术洞见生活，再会~~")])])])}),[],!1,null,null,null);a.default=p.exports}}]);