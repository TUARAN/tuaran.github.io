(window.webpackJsonp=window.webpackJsonp||[]).push([[150],{648:function(n,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("「这是我参与2022首次更文挑战的第12天，活动详情查看："),a("a",{attrs:{href:"https://juejin.cn/post/7052884569032392740",target:"_blank",rel:"noopener noreferrer"}},[n._v("2022首次更文挑战"),a("OutboundLink")],1),n._v("」")]),n._v(" "),a("hr"),n._v(" "),a("p",[n._v("日拱算法，日掘一金。本篇带来双指针解“压缩字符串”~")]),n._v(" "),a("p",[n._v("题：")]),n._v(" "),a("p",[n._v("给你一个字符数组 chars ，请使用下述算法压缩：")]),n._v(" "),a("p",[n._v("从一个空字符串 s 开始。对于 chars 中的每组 连续重复字符 ：")]),n._v(" "),a("p",[n._v("如果这一组长度为 1 ，则将字符追加到 s 中。\n否则，需要向 s 追加字符，后跟这一组的长度。\n压缩后得到的字符串 s 不应该直接返回 ，需要转储到字符数组 chars 中。需要注意的是，如果组长度为 10 或 10 以上，则在 chars 数组中会被拆分为多个字符。")]),n._v(" "),a("p",[n._v("请在 修改完输入数组后 ，返回该数组的新长度。")]),n._v(" "),a("p",[n._v("你必须设计并实现一个只使用常量额外空间的算法来解决此问题。")]),n._v(" "),a("ul",[a("li",[n._v("示例 1：")])]),n._v(" "),a("p",[n._v('输入：chars = ["a","a","b","b","c","c","c"]\n输出：返回 6 ，输入数组的前 6 个字符应该是：["a","2","b","2","c","3"]\n解释：\n"aa" 被 "a2" 替代。"bb" 被 "b2" 替代。"ccc" 被 "c3" 替代。')]),n._v(" "),a("ul",[a("li",[n._v("示例 2：")])]),n._v(" "),a("p",[n._v('输入：chars = ["a"]\n输出：返回 1 ，输入数组的前 1 个字符应该是：["a"]\n解释：\n没有任何字符串被替代。')]),n._v(" "),a("ul",[a("li",[n._v("示例 3：")])]),n._v(" "),a("p",[n._v('输入：chars = ["a","b","b","b","b","b","b","b","b","b","b","b","b"]\n输出：返回 4 ，输入数组的前 4 个字符应该是：["a","b","1","2"]。\n解释：\n由于字符 "a" 不重复，所以不会被压缩。"bbbbbbbbbbbb" 被 “b12” 替代。\n注意每个数字在数组中都有它自己的位置。')]),n._v(" "),a("p",[n._v("解题思路：")]),n._v(" "),a("p",[n._v("为了实现原地压缩，我们可以使用双指针分别标志我们在字符串中读和写的位置。每次当读指针 read 移动到某一段连续相同子串的最右侧，我们就在写指针 write 处依次写入该子串对应的字符和子串长度即可。")]),n._v(" "),a("p",[n._v("在实际代码中，当读指针 read 位于字符串的末尾，或读指针 read 指向的字符不同于下一个字符时，我们就认为读指针 read 位于某一段连续相同子串的最右侧。")]),n._v(" "),a("p",[n._v("该子串对应的字符即为读指针 read 指向的字符串。我们使用变量 left 记录该子串的最左侧的位置，这样子串长度即为 read−left+1。")]),n._v(" "),a("p",[n._v("为了达到 O(1) 空间复杂度，"),a("strong",[n._v("我们需要自行实现将数字转化为字符串写入到原字符串的功能。这里我们采用短除法将子串长度倒序写入原字符串中，然后再将其反转即可。")])]),n._v(" "),a("p",[n._v("JavaScript 实现：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var compress = function(chars) {\n    const n = chars.length;\n    let write = 0, left = 0;\n    for (let read = 0; read < n; read++) {\n        if (read === n - 1 || chars[read] !== chars[read + 1]) {\n            chars[write++] = chars[read];\n            let num = read - left + 1;\n            if (num > 1) {\n                const anchor = write;\n                while (num > 0) {\n                    chars[write++] = '' + num % 10;\n                    num = Math.floor(num / 10);\n                }\n                reverse(chars, anchor, write - 1);\n            }\n            left = read + 1;\n        }\n    }\n    return write;\n};\n\nconst reverse = (chars, left, right) => {\n    while (left < right) {\n        const temp = chars[left];\n        chars[left] = chars[right];\n        chars[right] = temp;\n        left++;\n        right--;\n    }\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br")])]),a("hr"),n._v(" "),a("blockquote",[a("p",[n._v("我是掘金安东尼，输出暴露输入，技术洞见生活，再会~")])])])}),[],!1,null,null,null);s.default=e.exports}}]);