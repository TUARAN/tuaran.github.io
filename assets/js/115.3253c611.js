(window.webpackJsonp=window.webpackJsonp||[]).push([[115],{613:function(s,a,n){"use strict";n.r(a);var e=n(2),r=Object(e.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("承接上一篇"),n("a",{attrs:{href:"https://juejin.cn/post/6968259661304692750",target:"_blank",rel:"noopener noreferrer"}},[s._v("《XDM，JS如何函数式编程？看这就够了！（一）》"),n("OutboundLink")],1),s._v("，我们知道了函数式编程的几个基本概念。")]),s._v(" "),n("p",[s._v("这里作"),n("strong",[s._v("简要回顾")]),s._v("：")]),s._v(" "),n("blockquote",[n("ol",[n("li",[s._v("函数式编程目的是为了数据流更加明显，从而代码更具可读性；")]),s._v(" "),n("li",[s._v("函数需要一个或多个输入（理想情况下只需一个！）和一个输出，输入输出是显式的代码将更好阅读；")]),s._v(" "),n("li",[s._v("闭包是高阶函数的基础；")]),s._v(" "),n("li",[s._v("警惕匿名函数；")]),s._v(" "),n("li",[s._v("弃用 this 指向；")])])]),s._v(" "),n("p",[s._v("本篇将着重介绍第 2 点中"),n("strong",[s._v("函数的输入")]),s._v("，它是 JS 轻量函数式编程的基础之基础，重要之重要！！！")]),s._v(" "),n("h2",{attrs:{id:"偏函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#偏函数"}},[s._v("#")]),s._v(" 偏函数")]),s._v(" "),n("h3",{attrs:{id:"传参现状"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#传参现状"}},[s._v("#")]),s._v(" 传参现状")]),s._v(" "),n("p",[s._v("我们经常会写出这样的代码：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function ajax(url,data,callback) {\n    // ..\n}\n\nfunction getPerson(data,cb) {\n    ajax( "http://some.api/person", data, cb );\n}\n\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[n("code",[s._v("ajax")]),s._v(" 函数有三个入参，在 "),n("code",[s._v("getPerson")]),s._v(" 函数里调用，其中 url 已确定，data 和 cb 两个参数则等待传入。（因为很多时候参数都不是在当前能确定的，需要等待其它函数的操作后确定了再继续传入）")]),s._v(" "),n("p",[n("strong",[s._v("但是我们的原则是：入参最理想的情况下只需一个！")])]),s._v(" "),n("p",[s._v("怎样优化，可以实现这一点呢？")]),s._v(" "),n("p",[s._v("我们或许可以在外层再套一个函数来进一步确定传参，比如：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function getCurrentUser(cb) {\n    \n    ...// 通过某些操作拿到 CURRENT_USER_ID\n\n    getPerson( { user: CURRENT_USER_ID }, cb );\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br")])]),n("p",[s._v("这样，data 参数也已经确定，cb 参数仍等待传入；函数 "),n("code",[s._v("getCurrentUser")]),s._v(" 就只有一个入参了！")]),s._v(" "),n("p",[s._v("数据的传递路线是：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("ajax(url,data,callback) => getPerson(data,cb) => getCurrentUser(cb)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("这样函数参数个数逐渐减少的过程就是"),n("strong",[s._v("偏应用")]),s._v("。")]),s._v(" "),n("p",[s._v("也可以说："),n("code",[s._v("getCurrentUser(cb)")]),s._v(" 是 "),n("code",[s._v("getOrder(data,cb)")]),s._v(" 的偏函数，"),n("code",[s._v("getOrder(data,cb)")]),s._v(" 是 "),n("code",[s._v("ajax(url,data,cb)")]),s._v(" 函数的"),n("strong",[s._v("偏函数")]),s._v("。")]),s._v(" "),n("p",[s._v("设想下：")]),s._v(" "),n("p",[s._v("如果一个函数是这样的：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function receiveMultiParam(a,b,c,......,x,y,z){\n    // ..\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("我们难道还要像上面那样手动指定外层函数进行逐层嵌套吗？")]),s._v(" "),n("p",[s._v("显示我们不会这么做！")]),s._v(" "),n("h3",{attrs:{id:"封装-partial"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#封装-partial"}},[s._v("#")]),s._v(" 封装 partial")]),s._v(" "),n("p",[s._v("我们只需要封装一个 "),n("code",[s._v("partial(..)")]),s._v(" 函数：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function partial(fn,...presetArgs) {\n    return function partiallyApplied(...laterArgs){\n        return fn( ...presetArgs, ...laterArgs );\n    };\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("它的基础逻辑是：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var partial =\n    (fn, ...presetArgs) =>\n        (...laterArgs) =>\n            fn( ...presetArgs, ...laterArgs );\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("把函数作为入参！还记得我们之前所说：")]),s._v(" "),n("blockquote",[n("p",[s._v("一个函数如果可以接受或返回一个甚至多个函数，它被叫做高阶函数。")])]),s._v(" "),n("p",[s._v("我们借用 "),n("code",[s._v("partial()")]),s._v(" 来实现上述举例：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var getPerson = partial( ajax, "http://some.api/person" );\n\nvar getCurrentUser = partial( getPerson, { user: CURRENT_USER_ID } ); // 版本 1\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("以下函数内部分析非常重要：")]),s._v(" "),n("h3",{attrs:{id:"运行机制"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#运行机制"}},[s._v("#")]),s._v(" 运行机制")]),s._v(" "),n("p",[n("code",[s._v("getPerson()")]),s._v(" 的内部运行机制是：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var getPerson = function partiallyApplied(...laterArgs) {\n    return ajax( "http://some.api/person", ...laterArgs );\n};\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[n("code",[s._v("getCurrentUser()")]),s._v(" 的内部运行机制是：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var getCurrentUser = function outerPartiallyApplied(...outerLaterArgs) {\n    var getPerson = function innerPartiallyApplied(...innerLaterArgs){\n        return ajax( "http://some.api/person", ...innerLaterArgs );\n    };\n\n    return getPerson( { user: CURRENT_USER_ID }, ...outerLaterArgs );\n}\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("数据进行了传递：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("getCurrentUser(outerLaterArgs) => getPerson(innerLaterArgs) => ajax(...params)\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("p",[s._v("我们通过这样一层额外的函数包装层，实现了更加强大的数据传递，")]),s._v(" "),n("p",[s._v("我们将需要减少参数输入的函数传入 "),n("code",[s._v("partial()")]),s._v("中作为第一个参数，剩下的是 "),n("code",[s._v("presetArgs")]),s._v("，当前已知几个，就可以写几个。还有不确定的入参 "),n("code",[s._v("laterArgs")]),s._v("，可以在确定后继续追加。")]),s._v(" "),n("p",[s._v("像这样进行额外的高阶函数包装层，是函数式编程的精髓所在！")]),s._v(" "),n("p",[n("strong",[s._v("“随着本系列的继续深入，我们将会把许多函数互相包装起来。记住，这就是函数式编程！” —— 《JavaScript 轻量级函数式编程》")])]),s._v(" "),n("p",[s._v("实际上，实现 "),n("code",[s._v("getCurrentUser()")]),s._v(" 还可以这样写：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('// 版本 2\nvar getCurrentUser = partial(\n    ajax,\n    "http://some.api/person",\n    { user: CURRENT_USER_ID }\n);\n\n// 内部实现机制\n\nvar getCurrentUser = function partiallyApplied(...laterArgs) {\n    return ajax(\n        "http://some.api/person",\n        { user: CURRENT_USER_ID },\n        ...laterArgs\n    );\n};\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br")])]),n("p",[s._v("但是版本 1 因为重用了已经定义好的函数，所以它在表达上更清晰一些。它被认为更加贴合函数式编程精神！")]),s._v(" "),n("h3",{attrs:{id:"拓展-partial"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#拓展-partial"}},[s._v("#")]),s._v(" 拓展 partial")]),s._v(" "),n("p",[s._v("我们再看看 "),n("code",[s._v("partial()")]),s._v(" 函数还可它用：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function partial(fn,...presetArgs) {\n    return function partiallyApplied(...laterArgs){\n        return fn( ...presetArgs, ...laterArgs );\n    };\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("比如：将数组 [1,2,3,4,5] 每项都加 3，通常我们会这么做：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function add(x,y) {\n    return x + y\n\n[1,2,3,4,5].map( function adder(val){\n    return add( 3, val );\n} );\n\n// [4,5,6,7,8]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("借助 "),n("code",[s._v("partial()")]),s._v("：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("[1,2,3,4,5].map( partial( add, 3 ) );\n\n// [4,5,6,7,8]\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("add(..) 不能直接传入 map(..) 函数里，通过偏应用进行处理后则能传入；")]),s._v(" "),n("p",[s._v("实际上，"),n("code",[s._v("partial()")]),s._v(" 函数还可以有很多变体：")]),s._v(" "),n("p",[s._v("回想我们之前调用 Ajax 函数的方式：ajax( url, data, cb )。如果要偏应用 cb 而稍后再指定 data 和 url 参数，我们应该怎么做呢？")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('function reverseArgs(fn) {\n    return function argsReversed(...args){\n        return fn( ...args.reverse() );\n    };\n}\n\nfunction partialRight( fn, ...presetArgs ) {\n    return reverseArgs(\n        partial( reverseArgs( fn ), ...presetArgs.reverse() )\n    );\n}\n\nvar cacheResult = partialRight( ajax, function onResult(obj){\n    cache[obj.id] = obj;\n});\n\n// 处理后:\ncacheResult( "http://some.api/person", { user: CURRENT_USER_ID } );\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br")])]),n("h3",{attrs:{id:"柯里化"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#柯里化"}},[s._v("#")]),s._v(" 柯里化")]),s._v(" "),n("p",[s._v("函数柯里化实际上是一种特殊的偏函数。")]),s._v(" "),n("p",[s._v("我们用 curry(..) 函数来实现此前的 ajax(..) 例子，它会是这样的：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v('var curriedAjax = curry( ajax );\n\nvar personFetcher = curriedAjax( "http://some.api/person" );\n\nvar getCurrentUser = personFetcher( { user: CURRENT_USER_ID } );\n\ngetCurrentUser( function foundUser(user){ /* .. */ } );\n')])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("blockquote",[n("p",[s._v("柯里化函数：接收单一实参（实参个数：1）并返回另一个接收下一个实参的函数。")])]),s._v(" "),n("p",[s._v("它将一个函数从可调用的 f(a, b, c) 转换为可调用的 f(a)(b)(c)。")]),s._v(" "),n("p",[s._v("实现：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function curry(fn,arity = fn.length) {\n    return (function nextCurried(prevArgs){\n        return function curried(nextArg){\n            var args = prevArgs.concat( [nextArg] );\n\n            if (args.length >= arity) {\n                return fn( ...args );\n            }\n            else {\n                return nextCurried( args );\n            }\n        };\n    })( [] );\n}\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h2",{attrs:{id:"阶段小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#阶段小结"}},[s._v("#")]),s._v(" 阶段小结")]),s._v(" "),n("p",[s._v("我们为什么要如此着重去谈“偏函数”（partial(sum,1,2)(3)）或“柯里化”（sum(1)(2)(3)）呢？")]),s._v(" "),n("p",[s._v("第一，是显而易见的，偏函数或柯里化，可以将“指定分离实参”的时机和地方独立开来；")]),s._v(" "),n("p",[s._v("第二，更有重要意义的是，当函数只有一个形参时，我们能够比较容易地组合它们。这种单元函数，便于进行后续的组合函数；")]),s._v(" "),n("p",[s._v("对于函数进行包装，使其成为一个高阶函数是函数式编程的精髓！")]),s._v(" "),n("p",[s._v("至此，有了“偏函数”这个武器，我们将逐渐拉开 JS 轻量级函数式编程的面纱 ~")]),s._v(" "),n("p",[s._v("我是掘金安东尼，公众号【掘金安东尼】，点赞👍关注👀，持续追踪！")])])}),[],!1,null,null,null);a.default=r.exports}}]);