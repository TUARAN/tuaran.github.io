(window.webpackJsonp=window.webpackJsonp||[]).push([[168],{670:function(n,s,e){"use strict";e.r(s);var a=e(2),r=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("「这是我参与2022首次更文挑战的第24天，活动详情查看："),e("a",{attrs:{href:"https://juejin.cn/post/7052884569032392740",target:"_blank",rel:"noopener noreferrer"}},[n._v("2022首次更文挑战"),e("OutboundLink")],1),n._v("」")]),n._v(" "),e("hr"),n._v(" "),e("p",[n._v("本篇带来 FP 函数式编程思想在 JS【循环】中的应用。")]),n._v(" "),e("p",[n._v("闲言少叙，冲 (づ￣3￣)づ╭～")]),n._v(" "),e("p",[n._v("通常，写一个循环：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("for (let i=9; i<=22; i++) {\n\n    // do something with i\n\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("p",[n._v("或者：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("let i = 9;\nwhile (i <= 22) {\n    // do something with i\n    i++;\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("p",[n._v("这样写有什么问题吗？")]),n._v(" "),e("p",[n._v("说有，也是有的 QAQ")]),n._v(" "),e("ul",[e("li",[e("p",[n._v("容易产生边际问题 —— 也叫做 "),e("a",{attrs:{href:"https://en.wikipedia.org/wiki/Off-by-one_error",target:"_blank",rel:"noopener noreferrer"}},[n._v("“off-by-one” Bug"),e("OutboundLink")],1),n._v("，差一錯誤。比如漏写 "),e("code",[n._v("<")]),n._v(" 号；")])]),n._v(" "),e("li",[e("p",[n._v("如果索引 i 发生变化，循环就会造成错误（那为什么说 i 容易发生变化呢？因为对于循环来说，比如 while 结构，索引 i 是外部变量，外部变量的修改不受循环内部所控制；）")])]),n._v(" "),e("li",[e("p",[n._v("代码太长了，循环结构有可能比操作的功能代码都长；")])])]),n._v(" "),e("p",[n._v("所以，我们尝试用 FP 函数式编程思路对循环做下改造~")]),n._v(" "),e("p",[n._v("改造后的期望类似这样：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("range(9, 22).forEach(i => {\n    /* do something with i */\n})\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[n._v("range 函数实现：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const range = (from, to) => {\n    const arr = [];\n    do {\n    arr.push(from);\n    from++;\n    } while (to >= from);\n    return arr;\n};\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br")])]),e("p",[n._v("range(9,22) 展开就是 [9, 10, 11, … 22]，如果，想要反转数组，比如：range(12,4) 展开是 [12,11,10...4]")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const range = (from, to, step = Math.sign(to - from)) => {\n    const arr = [];\n    do {\n    arr.push(from);\n    from += step;\n    } while ((step > 0 && to >= from) || (step < 0 && to <= from));\n    return arr;\n};\n\nrange(12,4)\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br")])]),e("p",[n._v("这样，我们就做了一层简单的封装！")]),n._v(" "),e("p",[n._v("还有一个问题 —— 目前这样写，循环不受控制。即我们不能随意停止循环或者跳出循环；")]),n._v(" "),e("p",[n._v("为了解决这个问题，尝试采用 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some",target:"_blank",rel:"noopener noreferrer"}},[n._v(".some(fn)"),e("OutboundLink")],1),n._v(" 来代替 .forEach(fn)；")]),n._v(" "),e("ul",[e("li",[e("code",[n._v("some()")]),n._v(" 方法测试数组中是不是至少有1个元素通过了被提供的函数测试。它返回的是一个Boolean类型的值。")])]),n._v(" "),e("p",[n._v("e.g.")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function isBiggerThan10(element, index, array) {\n  return element > 10;\n}\n\n[2, 5, 8, 1, 4].some(isBiggerThan10);  // false\n[12, 5, 8, 1, 4].some(isBiggerThan10); // true\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br")])]),e("p",[n._v("只要 Fn 函数返回 false ，循环将继续;当它返回 true 时，循环将结束。")]),n._v(" "),e("p",[n._v("同时借助 "),e("a",{attrs:{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",target:"_blank",rel:"noopener noreferrer"}},[n._v("generators"),e("OutboundLink")],1),n._v("，每次调用，它会产生一个返回值；")]),n._v(" "),e("p",[n._v("range() 函数演变如下：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function* range(from, to, step = Math.sign(to - from)) {\n    do {\n        yield from;\n        from += step;\n    } while ((step > 0 && to >= from) || (step < 0 && to <= from));\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("for (const i of range(9, 22)) { i => {\n    ...\n    ...\n    if (someCondition) continue;\n    ...\n    if (somethingElse) break;\n    ...\n    ...\n    }\n}\n\n// 或者赋值一个数组\n\nconst arrayFrom9To22 = [...range(9, 22)];\n// this produces [9, 10, 11, ... 22]\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br")])]),e("p",[n._v("通过这样的方式，甚至可以赋值一个数组 range(9,999999999999) 内存不会爆掉，因为它通过 generators 生成，是惰性的；"),e("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Iterators_and_Generators",target:"_blank",rel:"noopener noreferrer"}},[n._v("MDN-迭代器"),e("OutboundLink")],1),n._v(" 有说明：")]),n._v(" "),e("blockquote",[e("p",[n._v("Javascript中最常见的迭代器是Array迭代器，它只是按顺序返回关联数组中的每个值。 虽然很容易想象所有迭代器都可以表示为数组，但事实并非如此。 数组必须完整分配，但迭代器仅在必要时使用，因此可以表示无限大小的序列，例如0和无穷大之间的整数范围。")])]),n._v(" "),e("p",[n._v("小结：通过 FP 函数式编程思维对“循环”进行了简单封装，使得代码的可读性和可扩展性都增强了一些，针不戳 👍")]),n._v(" "),e("ul",[e("li",[n._v("本篇主体译自："),e("a",{attrs:{href:"https://medium.com/bitsrc/functional-ranges-for-loops-generating-better-loops-3d7b4c9d953",target:"_blank",rel:"noopener noreferrer"}},[n._v("functional-ranges-for-loops-generating-better-loops"),e("OutboundLink")],1),n._v(" "),e("hr")])]),n._v(" "),e("p",[n._v("OK，以上便是本篇分享~")]),n._v(" "),e("blockquote",[e("p",[n._v("我是掘金安东尼，输出暴露输入，技术洞见生活，再会~~")])])])}),[],!1,null,null,null);s.default=r.exports}}]);