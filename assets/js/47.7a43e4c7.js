(window.webpackJsonp=window.webpackJsonp||[]).push([[47],{550:function(s,n,a){"use strict";a.r(n);var e=a(2),r=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"爬虫上手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#爬虫上手"}},[s._v("#")]),s._v(" 爬虫上手")]),s._v(" "),a("p",[s._v("爬虫作用之强大毋庸置疑，无论是用Python写，java写，还是node.js是写，总之殊途同归：爬它！")]),s._v(" "),a("h2",{attrs:{id:"环境安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#环境安装"}},[s._v("#")]),s._v(" 环境安装")]),s._v(" "),a("p",[s._v("如果有其他计算机语言的基础，可以直接上手边做边看。懂的都懂，一通百通。")]),s._v(" "),a("ol",[a("li",[s._v("安装 Python 环境")])]),s._v(" "),a("p",[s._v("可选 Python 2.7/Python 3+，也可同时安装。")]),s._v(" "),a("p",[s._v("官方建议直接学Python3，因为 Python2 只维护到 2020 年，即将成为历史。")]),s._v(" "),a("p",[s._v("不过网上的很多 demo 还是 Python2，且 Python3 "),a("strong",[s._v("不兼容")]),s._v(" Python2, "),a("strong",[s._v("初学的话请都安装吧!")])]),s._v(" "),a("ul",[a("li",[s._v("ps:")])]),s._v(" "),a("p",[s._v("使用Python 2，不要使用Python 2.7以前的版本")]),s._v(" "),a("p",[s._v("使用Python 3，不要使用Python 3.4以前的版本")]),s._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[s._v("系统环境变量配置")])]),s._v(" "),a("p",[a("a",{attrs:{href:"https://blog.csdn.net/weixin_39986952/article/details/84794537",target:"_blank",rel:"noopener noreferrer"}},[s._v("Windows下python2和python3的共存设置"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"pip-install"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pip-install"}},[s._v("#")]),s._v(" pip install")]),s._v(" "),a("p",[s._v("pip 相当于js的npm，缺少什么包，直接安装什么包即可：pip install xxx")]),s._v(" "),a("ul",[a("li",[s._v("ps:")])]),s._v(" "),a("p",[s._v("Python2 和 Python3 同时安装的情况下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v(" python2 -m pip install\n \n python3 -m pip install\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"demo-运行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#demo-运行"}},[s._v("#")]),s._v(" demo 运行")]),s._v(" "),a("p",[s._v("来源："),a("a",{attrs:{href:"https://github.com/kong36088/BaiduImageSpider",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://github.com/kong36088/BaiduImageSpider"),a("OutboundLink")],1)]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#!/usr/bin/env python\n# -*- coding:utf-8 -*-\n\nimport os\nimport re\nimport urllib\nimport json\nimport socket\nimport urllib.request\nimport urllib.parse\nimport urllib.error\n# 设置超时\nimport time\n\ntimeout = 5\nsocket.setdefaulttimeout(timeout)\n\n\nclass Crawler:\n    # 睡眠时长\n    __time_sleep = 0.1\n    __amount = 0\n    __start_amount = 0\n    __counter = 0\n    headers = {'User-Agent': 'Mozilla/5.0 (Windows NT 6.1; WOW64; rv:23.0) Gecko/20100101 Firefox/23.0'}\n\n    # 获取图片url内容等\n    # t 下载图片时间间隔\n    def __init__(self, t=0.1):\n        self.time_sleep = t\n\n    # 获取后缀名\n    def get_suffix(self, name):\n        m = re.search(r'\\.[^\\.]*$', name)\n        if m.group(0) and len(m.group(0)) <= 5:\n            return m.group(0)\n        else:\n            return '.jpeg'\n\n    # 获取referrer，用于生成referrer\n    def get_referrer(self, url):\n        par = urllib.parse.urlparse(url)\n        if par.scheme:\n            return par.scheme + '://' + par.netloc\n        else:\n            return par.netloc\n\n        # 保存图片\n    def save_image(self, rsp_data, word):\n        if not os.path.exists(\"./\" + word):\n            os.mkdir(\"./\" + word)\n        # 判断名字是否重复，获取图片长度\n        self.__counter = len(os.listdir('./' + word)) + 1\n        for image_info in rsp_data['imgs']:\n\n            try:\n                time.sleep(self.time_sleep)\n                suffix = self.get_suffix(image_info['objURL'])\n                # 指定UA和referrer，减少403\n                refer = self.get_referrer(image_info['objURL'])\n                opener = urllib.request.build_opener()\n                opener.addheaders = [\n                    ('User-agent', 'Mozilla/5.0 (Windows NT 10.0; WOW64; rv:55.0) Gecko/20100101 Firefox/55.0'),\n                    ('Referer', refer)\n                ]\n                urllib.request.install_opener(opener)\n                # 保存图片\n                urllib.request.urlretrieve(image_info['objURL'], './' + word + '/' + str(self.__counter) + str(suffix))\n            except urllib.error.HTTPError as urllib_err:\n                print(urllib_err)\n                continue\n            except Exception as err:\n                time.sleep(1)\n                print(err)\n                print(\"产生未知错误，放弃保存\")\n                continue\n            else:\n                print(\"小黄图+1,已有\" + str(self.__counter) + \"张小黄图\")\n                self.__counter += 1\n        return\n\n    # 开始获取\n    def get_images(self, word='美女'):\n        search = urllib.parse.quote(word)\n        # pn int 图片数\n        pn = self.__start_amount\n        while pn < self.__amount:\n\n            url = 'http://image.baidu.com/search/avatarjson?tn=resultjsonavatarnew&ie=utf-8&word=' + search + '&cg=girl&pn=' + str(\n                pn) + '&rn=60&itg=0&z=0&fr=&width=&height=&lm=-1&ic=0&s=0&st=-1&gsm=1e0000001e'\n            # 设置header防ban\n            try:\n                time.sleep(self.time_sleep)\n                req = urllib.request.Request(url=url, headers=self.headers)\n                page = urllib.request.urlopen(req)\n                rsp = page.read().decode('unicode_escape')\n            except UnicodeDecodeError as e:\n                print(e)\n                print('-----UnicodeDecodeErrorurl:', url)\n            except urllib.error.URLError as e:\n                print(e)\n                print(\"-----urlErrorurl:\", url)\n            except socket.timeout as e:\n                print(e)\n                print(\"-----socket timout:\", url)\n            else:\n                # 解析json\n                rsp_data = json.loads(rsp)\n                self.save_image(rsp_data, word)\n                # 读取下一页\n                print(\"下载下一页\")\n                pn += 60\n            finally:\n                page.close()\n        print(\"下载任务结束\")\n        return\n\n    def start(self, word, spider_page_num=1, start_page=1):\n        \"\"\"\n        爬虫入口\n        :param word: 抓取的关键词\n        :param spider_page_num: 需要抓取数据页数 总抓取图片数量为 页数x60\n        :param start_page:起始页数\n        :return:\n        \"\"\"\n        self.__start_amount = (start_page - 1) * 60\n        self.__amount = spider_page_num * 60 + self.__start_amount\n        self.get_images(word)\n\n\nif __name__ == '__main__':\n    crawler = Crawler(0.05)  # 抓取延迟为 0.05\n\n    # crawler.start('美女', 10, 2)  # 抓取关键词为 “美女”，总数为 1 页（即总共 1*60=60 张），开始页码为 2\n    crawler.start('二次元 美女', 10, 1)  # 抓取关键词为 “二次元 美女”，总数为 10 页（即总共 10*60=600 张），起始抓取的页码为 1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br"),a("span",{staticClass:"line-number"},[s._v("95")]),a("br"),a("span",{staticClass:"line-number"},[s._v("96")]),a("br"),a("span",{staticClass:"line-number"},[s._v("97")]),a("br"),a("span",{staticClass:"line-number"},[s._v("98")]),a("br"),a("span",{staticClass:"line-number"},[s._v("99")]),a("br"),a("span",{staticClass:"line-number"},[s._v("100")]),a("br"),a("span",{staticClass:"line-number"},[s._v("101")]),a("br"),a("span",{staticClass:"line-number"},[s._v("102")]),a("br"),a("span",{staticClass:"line-number"},[s._v("103")]),a("br"),a("span",{staticClass:"line-number"},[s._v("104")]),a("br"),a("span",{staticClass:"line-number"},[s._v("105")]),a("br"),a("span",{staticClass:"line-number"},[s._v("106")]),a("br"),a("span",{staticClass:"line-number"},[s._v("107")]),a("br"),a("span",{staticClass:"line-number"},[s._v("108")]),a("br"),a("span",{staticClass:"line-number"},[s._v("109")]),a("br"),a("span",{staticClass:"line-number"},[s._v("110")]),a("br"),a("span",{staticClass:"line-number"},[s._v("111")]),a("br"),a("span",{staticClass:"line-number"},[s._v("112")]),a("br"),a("span",{staticClass:"line-number"},[s._v("113")]),a("br"),a("span",{staticClass:"line-number"},[s._v("114")]),a("br"),a("span",{staticClass:"line-number"},[s._v("115")]),a("br"),a("span",{staticClass:"line-number"},[s._v("116")]),a("br"),a("span",{staticClass:"line-number"},[s._v("117")]),a("br"),a("span",{staticClass:"line-number"},[s._v("118")]),a("br"),a("span",{staticClass:"line-number"},[s._v("119")]),a("br"),a("span",{staticClass:"line-number"},[s._v("120")]),a("br"),a("span",{staticClass:"line-number"},[s._v("121")]),a("br"),a("span",{staticClass:"line-number"},[s._v("122")]),a("br"),a("span",{staticClass:"line-number"},[s._v("123")]),a("br"),a("span",{staticClass:"line-number"},[s._v("124")]),a("br"),a("span",{staticClass:"line-number"},[s._v("125")]),a("br"),a("span",{staticClass:"line-number"},[s._v("126")]),a("br"),a("span",{staticClass:"line-number"},[s._v("127")]),a("br"),a("span",{staticClass:"line-number"},[s._v("128")]),a("br"),a("span",{staticClass:"line-number"},[s._v("129")]),a("br"),a("span",{staticClass:"line-number"},[s._v("130")]),a("br"),a("span",{staticClass:"line-number"},[s._v("131")]),a("br"),a("span",{staticClass:"line-number"},[s._v("132")]),a("br"),a("span",{staticClass:"line-number"},[s._v("133")]),a("br"),a("span",{staticClass:"line-number"},[s._v("134")]),a("br"),a("span",{staticClass:"line-number"},[s._v("135")]),a("br")])]),a("p",[s._v("如果能正常运行，下载到图片，那么恭喜，这就算简单入门了。")]),s._v(" "),a("h2",{attrs:{id:"代码要点"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#代码要点"}},[s._v("#")]),s._v(" 代码要点")]),s._v(" "),a("ol",[a("li",[s._v("使用 class 语句来创建一个新类，class 之后为类的名称并以冒号结尾:")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("class ClassName:\n   '类的帮助信息'   #类文档字符串\n   class_suite  #类体  由类成员，方法，数据属性组成。\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ol",{attrs:{start:"2"}},[a("li",[s._v("def 定义的即是方法")])]),s._v(" "),a("p",[s._v("第一种方法__init__()方法是一种特殊的方法，被称为类的构造函数或初始化方法，当创建了这个类的实例时就会调用该方法")]),s._v(" "),a("p",[a("strong",[s._v("self")]),s._v(" 代表类的实例，self 在定义类的方法时是必须有的，虽然在调用时不必传入相应的参数。")]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("调用")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("crawler = Crawler(0.05)//创建实例对象\n\ncrawler.start('二次元 美女', 10, 1)//调用某个方法\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("h2",{attrs:{id:"python的面向对象"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#python的面向对象"}},[s._v("#")]),s._v(" Python的面向对象")]),s._v(" "),a("ul",[a("li",[s._v("面向对象核心：")])]),s._v(" "),a("blockquote",[a("p",[s._v("一切事物皆对象（tips: javaScript 中除了两个特殊值undefined 和 null.）"),a("br"),s._v("\n对象具有封装和继承特性（javaScript语言是通过一种叫做原型（prototype）的方式来实现面向对象编程的）"),a("br"),s._v("\n对象与对象之间使用消息通信，各自存在信息隐藏。")])]),s._v(" "),a("p",[s._v("不必全记住，先有个印象，记忆注定是个反复的过程。")]),s._v(" "),a("h3",{attrs:{id:"类class"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类class"}},[s._v("#")]),s._v(" 类Class")]),s._v(" "),a("p",[s._v("类(Class): 用来描述具有相同的属性和方法的对象的集合。它定义了该集合中每个对象所共有的属性和方法。对象是类的实例。")]),s._v(" "),a("p",[a("strong",[s._v("dict")]),s._v(" : 类的属性（包含一个字典，由类的数据属性组成）")]),s._v(" "),a("p",[a("strong",[s._v("doc")]),s._v(" :类的文档字符串")]),s._v(" "),a("p",[a("strong",[s._v("name")]),s._v(": 类名")]),s._v(" "),a("p",[a("strong",[s._v("module")]),s._v(": 类定义所在的模块（类的全名是'"),a("strong",[s._v("main")]),s._v(".className'，如果类位于一个导入模块mymod中，那么className."),a("strong",[s._v("module")]),s._v(" 等于 mymod）")]),s._v(" "),a("p",[a("strong",[s._v("bases")]),s._v(" : 类的所有父类构成元素（包含了一个由所有父类组成的元组）")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nclass Employee:\n   '所有员工的基类'\n   empCount = 0\n \n   def __init__(self, name, salary):\n      self.name = name\n      self.salary = salary\n      Employee.empCount += 1\n   \n   def displayCount(self):\n     print \"Total Employee %d\" % Employee.empCount\n \n   def displayEmployee(self):\n      print \"Name : \", self.name,  \", Salary: \", self.salary\n \nprint \"Employee.__doc__:\", Employee.__doc__\nprint \"Employee.__name__:\", Employee.__name__\nprint \"Employee.__module__:\", Employee.__module__\nprint \"Employee.__bases__:\", Employee.__bases__\nprint \"Employee.__dict__:\", Employee.__dict__\n\n输出：\n\nEmployee.__doc__: 所有员工的基类\nEmployee.__name__: Employee\nEmployee.__module__: __main__\nEmployee.__bases__: ()\nEmployee.__dict__: {'__module__': '__main__', 'displayCount': <function displayCount at 0x10a939c80>, 'empCount': 0, 'displayEmployee': <function displayEmployee at 0x10a93caa0>, '__doc__': '\\xe6\\x89\\x80\\xe6\\x9c\\x89\\xe5\\x91\\x98\\xe5\\xb7\\xa5\\xe7\\x9a\\x84\\xe5\\x9f\\xba\\xe7\\xb1\\xbb', '__init__': <function __init__ at 0x10a939578>}\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("p",[s._v("析构函数 "),a("strong",[s._v("del")]),s._v(" ，__del__在对象销毁的时候被调用，当对象不再被使用时，__del__方法运行：")]),s._v(" "),a("h3",{attrs:{id:"类继承与方法重写"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类继承与方法重写"}},[s._v("#")]),s._v(" 类继承与方法重写")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("#!/usr/bin/python\n# -*- coding: UTF-8 -*-\n \nclass Parent:        # 定义父类\n   def myMethod(self):\n      print '调用父类方法'\n \nclass Child(Parent): # 定义子类\n   def myMethod(self):\n      print '调用子类方法'\n \nc = Child()          # 子类实例\nc.myMethod()         # 子类调用重写方法\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])]),a("h3",{attrs:{id:"类属性与方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#类属性与方法"}},[s._v("#")]),s._v(" 类属性与方法")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("类的私有属性\n__private_attrs：两个下划线开头，声明该属性为私有，不能在类的外部被使用或直接访问。在类内部的方法中使用时 self.__private_attrs。")])]),s._v(" "),a("li",[a("p",[s._v("类的方法\n在类的内部，使用 def 关键字可以为类定义一个方法，与一般函数定义不同，类方法必须包含参数 self,且为第一个参数")])]),s._v(" "),a("li",[a("p",[s._v("类的私有方法\n__private_method：两个下划线开头，声明该方法为私有方法，不能在类的外部调用。在类的内部调用 self.__private_methods")])])]),s._v(" "),a("p",[s._v("附：")]),s._v(" "),a("p",[s._v("单下划线、双下划线、头尾双下划线说明：")]),s._v(" "),a("p",[a("strong",[s._v("foo")]),s._v(": 定义的是特殊方法，一般是系统定义名字 ，类似 "),a("strong",[s._v("init")]),s._v("() 之类的。")]),s._v(" "),a("p",[s._v("_foo: 以单下划线开头的表示的是 protected 类型的变量，即保护类型只能允许其本身与子类进行访问，不能用于 from module import *")]),s._v(" "),a("p",[s._v("__foo: 双下划线的表示的是私有类型(private)的变量, 只能是允许这个类本身进行访问了。")])])}),[],!1,null,null,null);n.default=r.exports}}]);