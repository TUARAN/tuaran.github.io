(window.webpackJsonp=window.webpackJsonp||[]).push([[171],{665:function(n,s,a){"use strict";a.r(s);var t=a(2),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("「这是我参与2022首次更文挑战的第26天，活动详情查看："),a("a",{attrs:{href:"https://juejin.cn/post/7052884569032392740",target:"_blank",rel:"noopener noreferrer"}},[n._v("2022首次更文挑战"),a("OutboundLink")],1),n._v("」")]),n._v(" "),a("hr"),n._v(" "),a("p",[n._v("本篇带来【剑指offer】的两道初级算法题：冲~~")]),n._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/16e806b2e0b1428fa098c8b1fc2f8fa1~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),n._v(" "),a("ul",[a("li",[n._v("用两个栈实现队列")])]),n._v(" "),a("p",[n._v("用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 appendTail 和 deleteHead ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，deleteHead 操作返回 -1 )")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('示例 1：\n\n输入：\n["CQueue","appendTail","deleteHead","deleteHead"]\n[[],[3],[],[]]\n输出：[null,null,3,-1]\n\n示例 2：\n\n输入：\n["CQueue","deleteHead","appendTail","appendTail","deleteHead","deleteHead"]\n[[],[],[5],[2],[],[]]\n输出：[null,-1,null,null,5,2]\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br")])]),a("p",[a("strong",[n._v("解题思路：")])]),n._v(" "),a("p",[n._v("这道题主要是明白"),a("strong",[n._v("栈是后进先出，队列是先进先出")]),n._v("，那我们不妨设立一个入队栈和一个出队栈")]),n._v(" "),a("p",[n._v("入队直接压入入队栈，出队先检查出队栈是否为空，为空的话需要先把入队栈倒入出队栈，在进行出队操作，否则直接出队即可；")]),n._v(" "),a("p",[a("strong",[n._v("JavaScript 实现")]),n._v(" 如下：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var CQueue = function() {\n    this.stackA = [];\n    this.stackB = [];\n};\n\n/**\n * @param {number} value\n * @return {void}\n */\n\nCQueue.prototype.appendTail = function(value) {\n    this.stackA.push(value);\n};\n\n/**\n * @return {number}\n */\n\nCQueue.prototype.deleteHead = function() {\n    if (this.stackB.length) {\n        return this.stackB.pop();\n    } else {\n        while (this.stackA.length) {\n            this.stackB.push(this.stackA.pop());\n        }\n        if (!this.stackB.length) {\n            return -1;\n        } else {\n            return this.stackB.pop();\n        }\n    }\n};\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br")])]),a("ul",[a("li",[n._v("包含min函数的栈")])]),n._v(" "),a("p",[n._v("定义栈的数据结构，请在该类型中实现一个能够得到栈的最小元素的 min 函数在该栈中，调用 min、push 及 pop 的时间复杂度都是 O(1)。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("示例:\n\nMinStack minStack = new MinStack();\nminStack.push(-2);\nminStack.push(0);\nminStack.push(-3);\nminStack.min();   --\x3e 返回 -3.\nminStack.pop();\nminStack.top();      --\x3e 返回 0.\nminStack.min();   --\x3e 返回 -2.\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("p",[a("strong",[n._v("解题思路：")])]),n._v(" "),a("p",[n._v("审题：")]),n._v(" "),a("ol",[a("li",[a("p",[n._v("push(x) —— 将元素 x 推入栈中。")])]),n._v(" "),a("li",[a("p",[n._v("pop() —— 删除栈顶的元素。")])]),n._v(" "),a("li",[a("p",[n._v("top() —— 获取栈顶元素。")])]),n._v(" "),a("li",[a("p",[n._v("getMin() —— 检索栈中的最小元素。")])]),n._v(" "),a("li",[a("p",[n._v("像常规apipush和pop这些操作，对栈进行了操作，直接输出null；")])]),n._v(" "),a("li",[a("p",[n._v("top和min需要我们自己按照题目要求来排序栈，并输出元素")])])]),n._v(" "),a("p",[a("strong",[n._v("JavaScript 实现")]),n._v(" 如下：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("/**\n * initialize your data structure here.\n */\nvar MinStack = function() {\n    this.stack = []\n};\n\n/** \n * @param {number} x\n * @return {void}\n */\nMinStack.prototype.push = function(x) {\n    this.stack.push(x)\n};\n\n/**\n * @return {void}\n */\nMinStack.prototype.pop = function() {\n  return  this.stack.pop()\n};\n\n/**\n * @return {number}\n */\nMinStack.prototype.top = function() {\n  return  this.stack[this.stack.length - 1]\n};\n\n/**\n * @return {number}\n */\nMinStack.prototype.min = function() {\n    let array = JSON.parse(JSON.stringify(this.stack))\n     array =  array.sort((a,b)=>a - b)\n    // console.log(\"array:\", array,',stack:', this.stack)\n\n    return array[0]\n};\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br"),a("span",{staticClass:"line-number"},[n._v("34")]),a("br"),a("span",{staticClass:"line-number"},[n._v("35")]),a("br"),a("span",{staticClass:"line-number"},[n._v("36")]),a("br"),a("span",{staticClass:"line-number"},[n._v("37")]),a("br"),a("span",{staticClass:"line-number"},[n._v("38")]),a("br"),a("span",{staticClass:"line-number"},[n._v("39")]),a("br")])]),a("p",[n._v("OK，以上便是本篇分享~")]),n._v(" "),a("blockquote",[a("p",[n._v("我是掘金安东尼，输出暴露输入，技术洞见生活，再会~~")])])])}),[],!1,null,null,null);s.default=e.exports}}]);