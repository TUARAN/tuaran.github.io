(window.webpackJsonp=window.webpackJsonp||[]).push([[184],{679:function(s,e,n){"use strict";n.r(e);var a=n(2),r=Object(a.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("一起养成写作习惯！这是我参与「掘金日新计划 · 4 月更文挑战」的第1天，"),n("a",{attrs:{href:"https://juejin.cn/post/7080800226365145118",title:"https://juejin.cn/post/7080800226365145118",target:"_blank",rel:"noopener noreferrer"}},[s._v("点击查看活动详情"),n("OutboundLink")],1),s._v("。")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("前不久写了 3 篇关于 RxJS 的入门级文章：")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.cn/post/7070312956713500703",target:"_blank",rel:"noopener noreferrer"}},[s._v("你就是函数响应式编程（FRP）啊？!【附 RxJS 实战】"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://juejin.cn/post/7072898729388277797",target:"_blank",rel:"noopener noreferrer"}},[s._v("为什么说：被观察者是 push 数据，迭代者是 pull 数据？"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://juejin.cn/post/7074726064966582309",target:"_blank",rel:"noopener noreferrer"}},[s._v("探秘 RxJS Observable 为什么要长成这个样子？！"),n("OutboundLink")],1)])]),s._v(" "),n("p",[s._v("在几个月之前，也有两篇关于 RxJS 的探秘：")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://juejin.cn/post/7029093184332365855",target:"_blank",rel:"noopener noreferrer"}},[s._v("Js 异步处理演进，Callback=>Promise=>Observer"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://juejin.cn/post/7029465648174465055",title:"继续解惑，异步处理 —— RxJS Observable",target:"_blank",rel:"noopener noreferrer"}},[s._v("继续解惑，异步处理 —— RxJS Observable"),n("OutboundLink")],1)])]),s._v(" "),n("p",[s._v("RxJS 有很多神奇的东西，包括链式调用、惰性输出值、隔离数据和操作、响应式编程等等；")]),s._v(" "),n("p",[s._v("它是函数式编程中 monad 的一种实际应用；它是 promise 的进化形态；它是理解 JS 异步、处理异步的宝剑......")]),s._v(" "),n("p",[s._v("所以，借着更文的契机，日日新、月月新，学习 RxJS 接着冲~")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/fb5e31ebac6843bfb0e779568942eca0~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),s._v(" "),n("p",[s._v("本篇带来：observables 操作符 —— 创建实例，是基础之基础、重要之重要；")]),s._v(" "),n("p",[s._v("操作符为复杂的异步任务提供了一种优雅的声明式解决方案，创建实例则是方案的起步！")]),s._v(" "),n("h3",{attrs:{id:"create"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#create"}},[s._v("#")]),s._v(" "),n("code",[s._v("create")])]),s._v(" "),n("p",[n("code",[s._v("create")]),s._v(" 肯定不陌生了，使用给定的订阅函数来创建 observable ；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// RxJS v6+\nimport { Observable } from 'rxjs';\n/*\n  创建在订阅函数中发出 'Hello' 和 'World' 的 observable 。\n*/\nconst hello = Observable.create(function(observer) {\n  observer.next('Hello');\n  observer.next('World');\n});\n\n// 输出: 'Hello'...'World'\nconst subscribe = hello.subscribe(val => console.log(val));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"empty"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#empty"}},[s._v("#")]),s._v(" "),n("code",[s._v("empty")])]),s._v(" "),n("p",[n("code",[s._v("empty")]),s._v(" 会给我们一个 "),n("strong",[s._v("空")]),s._v(" 的 observable，如果我们订阅这个 observable ，它会立即发送 complete 的讯息；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var source = Rx.Observable.empty();\n\nsource.subscribe({\n    next: function(value) {\n        console.log(value)\n    },\n    complete: function() {\n        console.log('complete!');\n    },\n    error: function(error) {\n        console.log(error)\n    }\n});\n// complete!\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"from"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[s._v("#")]),s._v(" "),n("code",[s._v("from")])]),s._v(" "),n("p",[s._v("用 "),n("code",[s._v("from")]),s._v(" 来接收任何可列举的参数（JS 数组）；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// RxJS v6+\nimport { from } from 'rxjs';\n\n// 将数组作为值的序列发出\nconst arraySource = from([1, 2, 3, 4, 5]);\n// 输出: 1,2,3,4,5\nconst subscribe = arraySource.subscribe(val => console.log(val));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"of"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#of"}},[s._v("#")]),s._v(" "),n("code",[s._v("of")])]),s._v(" "),n("p",[s._v("与 "),n("code",[s._v("from")]),s._v(" 相似的 "),n("code",[s._v("of")]),s._v("，也是用于操作一个 list，按顺序发出任意数量的值；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// RxJS v6+\nimport { of } from 'rxjs';\n\n// 依次发出提供的任意数量的值\nconst source = of(1, 2, 3, 4, 5);\n// 输出: 1,2,3,4,5\nconst subscribe = source.subscribe(val => console.log(val));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("h3",{attrs:{id:"fromevent"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#fromevent"}},[s._v("#")]),s._v(" "),n("code",[s._v("fromEvent")])]),s._v(" "),n("p",[n("code",[s._v("fromEvent")]),s._v(" 将事件转换成 observable 序列；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// RxJS v6+\nimport { fromEvent } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n// 创建发出点击事件的 observable\nconst source = fromEvent(document, 'click');\n// 映射成给定的事件时间戳\nconst example = source.pipe(map(event => `Event time: ${event.timeStamp}`));\n// 输出 (示例中的数字以运行时为准): 'Event time: 7276.390000000001'\nconst subscribe = example.subscribe(val => console.log(val));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("h3",{attrs:{id:"frompromise"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#frompromise"}},[s._v("#")]),s._v(" "),n("code",[s._v("fromPromise")])]),s._v(" "),n("p",[n("code",[s._v("fromPromise")]),s._v(" 创建由 promise 转换而来的 observable，并发出 promise 的结果；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var source = Rx.Observable\n  .fromPromise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('Hello RxJS!');\n    },3000)\n  })\n\n// 等同于\nvar source = Rx.Observable\n  .from(new Promise((resolve, reject) => {\n    setTimeout(() => {\n      resolve('Hello RxJS!');\n    },3000)\n  }))\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br")])]),n("h3",{attrs:{id:"interval"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#interval"}},[s._v("#")]),s._v(" "),n("code",[s._v("interval")])]),s._v(" "),n("p",[s._v("显然，"),n("code",[s._v("interval")]),s._v(" 操作和时间有关，它基于给定时间间隔发出数字序列；")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// RxJS v6+\nimport { interval } from 'rxjs';\n\n// 每1秒发出数字序列中的值\nconst source = interval(1000);\n// 数字: 0,1,2,3,4,5....\nconst subscribe = source.subscribe(val => console.log(val));\n\n// import { interval } from 'rxjs';\n// const source = interval(1000);\n// 等同于\n// var source = Rx.Observable.interval(1000);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br")])]),n("h3",{attrs:{id:"timer"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#timer"}},[s._v("#")]),s._v(" "),n("code",[s._v("timer")])]),s._v(" "),n("p",[n("code",[s._v("timer")]),s._v(" 是 "),n("code",[s._v("interval")]),s._v(" 的升级，用于给定持续时间后，再按照指定间隔时间依次发出数字。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("// RxJS v6+\nimport { timer } from 'rxjs';\n\n/*\n  timer 接收第二个参数，它决定了发出序列值的频率，在本例中我们在1秒发出第一个值，\n  然后每2秒发出序列值\n*/\nconst source = timer(1000, 2000);\n// 输出: 0,1,2,3,4,5......\nconst subscribe = source.subscribe(val => console.log(val));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br")])]),n("p",[s._v("OK，以上便是对核心的创建实例的 Observable 操作符的介绍，温故知新、日日新("),n("em",[s._v("^__^")]),s._v(")")]),s._v(" "),n("hr"),s._v(" "),n("blockquote",[n("p",[s._v("我是掘金安东尼，输出暴露输入，技术洞见生活，再会~ 👍👍👍")])])])}),[],!1,null,null,null);e.default=r.exports}}]);