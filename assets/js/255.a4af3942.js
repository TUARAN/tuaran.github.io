(window.webpackJsonp=window.webpackJsonp||[]).push([[255],{752:function(s,n,a){"use strict";a.r(n);var t=a(2),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("携手创作，共同成长！这是我参与「掘金日新计划 · 8 月更文挑战」的第30天，"),a("a",{attrs:{href:"https://juejin.cn/post/7123120819437322247",title:"https://juejin.cn/post/7123120819437322247",target:"_blank",rel:"noopener noreferrer"}},[s._v("点击查看活动详情"),a("OutboundLink")],1)]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("日拱算法，接着冲~~")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b4f1e5ba1361449caeccde0cf46c65f8~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),s._v(" "),a("h2",{attrs:{id:"题目"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题目"}},[s._v("#")]),s._v(" 题目：")]),s._v(" "),a("blockquote",[a("p",[s._v("给定一个数组 nums 和滑动窗口的大小 k，请找出所有滑动窗口里的最大值。")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("示例:\n\n输入: nums = [1,3,-1,-3,5,3,6,7], 和 k = 3\n输出: [3,3,5,5,6,7] \n解释: \n\n  滑动窗口的位置                最大值\n---------------               -----\n[1  3  -1] -3  5  3  6  7       3\n 1 [3  -1  -3] 5  3  6  7       3\n 1  3 [-1  -3  5] 3  6  7       5\n 1  3  -1 [-3  5  3] 6  7       5\n 1  3  -1  -3 [5  3  6] 7       6\n 1  3  -1  -3  5 [3  6  7]      7\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[s._v("题目来源："),a("a",{attrs:{href:"https://leetcode.cn/problems/hua-dong-chuang-kou-de-zui-da-zhi-lcof/",target:"_blank",rel:"noopener noreferrer"}},[s._v("剑指 Offer 59 - I. 滑动窗口的最大值"),a("OutboundLink")],1)]),s._v(" "),a("h2",{attrs:{id:"题解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#题解"}},[s._v("#")]),s._v(" 题解：")]),s._v(" "),a("h3",{attrs:{id:"第一反应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第一反应"}},[s._v("#")]),s._v(" 第一反应")]),s._v(" "),a("p",[s._v("有时候搞不太懂力扣对于难度等级的判定，此题为“困难”？")]),s._v(" "),a("p",[s._v("用长度为 k 的数组去遍历 nums 就可以了，每次拿到它的最大值，然后push进结果数组中，再返回不就行了？")]),s._v(" "),a("p",[s._v("分步解析：")]),s._v(" "),a("p",[s._v("1.找到窗口从头滑到尾需要滑动的次数为： nums.length - k + 1；")]),s._v(" "),a("p",[s._v("2.初始化队列；")]),s._v(" "),a("p",[s._v("3.每次滑动的时候，找到当前窗口的最大值保存到 res 数组，然后执行删除队列头元素、在队列尾添加下一元素的操作；")]),s._v(" "),a("p",[a("strong",[s._v("JavaScript 实现：")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var maxSlidingWindow = function(nums, k) {\n    if (nums.length == 0 || k > nums.length) return []\n    var index = k\n    var len = nums.length - k + 1\n    var stack = [], res = []\n    for (var j = 0; j < k; j++) {\n        stack.push(nums[j])\n    }\n    for (i = 0; i < len; i++) {\n        if (i !== 0) {\n            stack.shift()\n            stack.push(nums[index])\n            index++\n        }\n        res.push(Math.max.apply(null, stack))\n    }\n    return res\n};\n\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("p",[s._v("提交看看，结果报错“超出时间限制” QAQ")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/50aa1a92fad3446781468a1e0e29f065~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),s._v(" "),a("p",[s._v("噢噢，再回看算法，for 循环里面要对数组一整个 Math.max，时间复杂度肯定爆表了，O(n*n)，不超时才怪。")]),s._v(" "),a("h3",{attrs:{id:"第二反应"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#第二反应"}},[s._v("#")]),s._v(" 第二反应")]),s._v(" "),a("p",[s._v("正解：转换思路 "),a("strong",[s._v("采用单调数列")])]),s._v(" "),a("p",[s._v("依次将数组的下标push到窗口中，超出窗口的shift掉，窗口是个单调递减队列，队头元素就是当前窗口的最大值；")]),s._v(" "),a("p",[s._v("步骤拆解：")]),s._v(" "),a("p",[s._v("1、每当读入的数大于队尾，则循环删除队尾小于读入元素的数字，保证队列的递减单调性")]),s._v(" "),a("p",[s._v("2、如果单调的队首（极大值），等于窗口左边界的上一位，则说明极大值已经超出窗口，移除单调递减队列的队首")]),s._v(" "),a("p",[s._v("3、每次窗口滑动的最大值为，单调递减队列的队首")]),s._v(" "),a("p",[s._v("4、循环以上步骤，直到窗口的右边界到队尾")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0a94e3d0564e46248f0279b185e1d067~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),s._v(" "),a("p",[s._v("JS 实现：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var maxSlidingWindow = function(nums, k) {\n     const res = []; //保存滑动窗口的最大值\n    const q = []; //滑动窗口队列\n\n    for (let i = 0; i < nums.length; i++) {\n        //1.在队尾添加元素num[i]\n        var last = q.length - 1; //队列的最后一个元素的索引\n        while (last >= 0 && nums[i] > q[last]) { //2.循环求解序列中的最大值\n            //2.求队列中的最大值：如果新入队列的元素，比队尾元素大，队尾被更新成新入队列的元素,保证队头为队列中的最大元素\n            q.pop(); //队尾移除，\n            last = q.length - 1; //队列更新长度\n        }\n        q.push(nums[i]); //入队列\n\n        // 当窗口i + 1 - k >= 0时，窗口满了有三个数了\n        const j = i + 1 - k;     //窗口向右滑动过程中最后一个元素的索引。\n        if (j >= 0) {\n            res.push(q[0]); //保存每一次k个窗口的最大值\n            if (nums[j] === q[0]) { //3.向有滑动过程中，如果序列中的最大元素即退出窗口，则移除队列头部元素\n                q.shift(); // \n            }\n        }\n    }\n    return res;\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("p",[a("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/a89e2ec80e674cb8a42a5d372be493ac~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("小结：除了以上两种解法，还有其它思路，不得不说这题还是很有学问的。在处理滑动窗口问题中，经常会遇到要构造一个单调队列，得着重记笔记记笔记。(ಥ﹏ಥ)")]),s._v(" "),a("blockquote",[a("p",[s._v("OK，以上便是本篇分享。点赞关注评论，为好文助力👍")]),s._v(" "),a("p",[s._v("我是掘金安东尼 🤠 100 万人气前端技术博主 💥 INFP 写作人格坚持 1000 日更文 ✍ 关注我，安东尼陪你一起度过漫长编程岁月 🌏")])])])}),[],!1,null,null,null);n.default=e.exports}}]);