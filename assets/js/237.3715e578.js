(window.webpackJsonp=window.webpackJsonp||[]).push([[237],{731:function(s,n,a){"use strict";a.r(n);var e=a(2),r=Object(e.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("p",[s._v("携手创作，共同成长！这是我参与「掘金日新计划 · 8 月更文挑战」的第14天，"),a("a",{attrs:{href:"https://juejin.cn/post/7123120819437322247",title:"https://juejin.cn/post/7123120819437322247",target:"_blank",rel:"noopener noreferrer"}},[s._v("点击查看活动详情"),a("OutboundLink")],1)]),s._v(" "),a("hr"),s._v(" "),a("p",[s._v("新系列《这些前端新技术你很难再忽视了》，包括：SolidJS、Svelte、Tauri、Bun、Schema等。每一个都引领前端技术演变趋势，很有必要了解。")]),s._v(" "),a("p",[s._v("咱们将采用 5W1H 分析法，即 What（何事）、Why（何因）、Where（何地）、When（何时）、何人（Who）、How（何法）6 个维度来解析这些“新玩意儿”。")]),s._v(" "),a("p",[s._v("本篇带来 —— Monorepo")]),s._v(" "),a("p",[s._v("闲话少说，冲了~")]),s._v(" "),a("ul",[a("li",[s._v("点赞收藏关注，今晚一夜暴富 👍👍👍")])]),s._v(" "),a("h2",{attrs:{id:"🤔what"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🤔what"}},[s._v("#")]),s._v(" 🤔What")]),s._v(" "),a("blockquote",[a("p",[s._v("什么是 Monorepo？")])]),s._v(" "),a("p",[s._v("答：Monorepo可以理解为一种基于仓库的代码管理策略，它提出将多个代码工程“独立”的放在一个仓库里的管理模式。每个代码工程在逻辑上是可以独立运行开发以及维护管理的。Monorepo 在实际场景中的运用可以非常宽泛，甚至有企业将它所有业务和不同方向语言的代码放在同一个仓库中管理。")]),s._v(" "),a("h2",{attrs:{id:"🧐why"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🧐why"}},[s._v("#")]),s._v(" 🧐Why")]),s._v(" "),a("blockquote",[a("p",[s._v("为什么是 Monorepo？")])]),s._v(" "),a("p",[s._v("答：")]),s._v(" "),a("p",[s._v("Monorepo：只有一个仓库，并且把项目拆分多个独立的代码工程进行管理，而代码工程之间可以通过相应的工具简单的进行代码共享。而传统仓库管理模式则是通过建立多个仓库，每个仓库包含拆分好的代码工程，而仓库间的调用共享则是通过 NPM 或者其他代码引用的方式进行。")]),s._v(" "),a("p",[s._v("🌰🌰🌰 举个例子：")]),s._v(" "),a("p",[s._v("通常我们多个项目的结构如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// Repository - project1\n\n├── node_modules/\n├── package.json\n├── src/\n│   ├── views/\n│   ├── router/\n|   ├── ...\n├── README.md\n\n\n\n// Repository - project2\n\n├── node_modules/\n├── package.json\n├── src/\n│   ├── views/\n│   ├── router/\n|   ├── ...\n├── README.md\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("p",[s._v("如果有公共用到的东西，会通过 npm 发包更新后，两个项目再安装更新，实现公用。这样发包很麻烦。")]),s._v(" "),a("p",[s._v("可能有 jym 问了：")]),s._v(" "),a("p",[s._v("我直接都放到一个项目下不行吗？")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("├── package.json\n├── src/\n│   ├── views/\n|   |   ├── project1/\n|   |   ├── project2/\n│   ├── router/\n|   |   ├── project1/\n|   |   ├── project2/\n|   ├── ...\n│   └── lib/\n└── README.md\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("p",[s._v("当然可以，但是更多时候两个项目杂糅在一起，代码容易造成混乱，并且项目要一同部署，没有做到解耦。")]),s._v(" "),a("p",[s._v("那 Monorepo 会是怎样的展现？示例如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("// Repository - monorepo\n\n├── node_modules/\n├── package.json\n├── packages/\n│   ├── pacakge1/\n|   |   ├── src/\n|   |   ├── README.md\n|   |   ├── node_modules/\n|   |   ├── pacakge.json\n│   ├── package2/\n|   |   ├── src/\n|   |   ├── README.md\n|   |   ├── node_modules/\n|   |   ├── pacakge.json\n│   └── lib/\n|   |   ├── src/\n|   |   ├── README.md\n|   |   ├── node_modules/\n|   |   ├── pacakge.json\n├── README.md\n├── pnpm-workspace.yaml\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("p",[s._v("代码共享只需要在 package.json 添加包名，然后再到项目中各自引用即可，无需再发 npm 包。")]),s._v(" "),a("p",[s._v("Monorepo 和 pnpm 结合使用，pnpm 由于 symlink 和 hard link 机制，既极大的缩小了安装包的体积，同时也解决了幽灵依赖的问题，前一篇文章提到过，有兴趣可以去看一看。")]),s._v(" "),a("p",[a("strong",[s._v("未来包管理 = Monorepo + pnpm")])]),s._v(" "),a("h2",{attrs:{id:"🤫where"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🤫where"}},[s._v("#")]),s._v(" 🤫Where")]),s._v(" "),a("blockquote",[a("p",[s._v("有没有权威一点的学习地址？")])]),s._v(" "),a("p",[s._v("答：")]),s._v(" "),a("p",[s._v("英文：https://danluu.com/monorepo/")]),s._v(" "),a("p",[s._v("中文："),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/77577415",target:"_blank",rel:"noopener noreferrer"}},[s._v("刘留-知乎专栏"),a("OutboundLink")],1),s._v(" 尤雨溪也关注了~")]),s._v(" "),a("h2",{attrs:{id:"🙄when"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#🙄when"}},[s._v("#")]),s._v(" 🙄When")]),s._v(" "),a("blockquote",[a("p",[s._v("Monorepo 什么时候诞生？")])]),s._v(" "),a("p",[s._v("答：Monorepo 概念提出虽然已经有很长的历史，但随着技术的更新迭代，以及各项工具链的完善，最近几年它逐渐开始成为一个热门的话题。")]),s._v(" "),a("p",[s._v("其实很多技术都是这样，很久前就被提出来了，但是真正被广泛使用，又是另外一回事，或许将来某一个时候赖于某个环境的变化、或者技术生态的发展等等，意外就又爆火了，如果没有，则慢慢走向湮灭了。")]),s._v(" "),a("h2",{attrs:{id:"😄who"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#😄who"}},[s._v("#")]),s._v(" 😄Who")]),s._v(" "),a("blockquote",[a("p",[s._v("都有谁在用？")])]),s._v(" "),a("p",[s._v("答：很多大型的互联网公司都在采取这样的代码管理策略，比如 Google、Facebook、Uber、MicroSoft 等。也有很多著名的前端开源库选择用这种方式来构建和管理自己的代码，比如Vue、React、Vite、Babel、Element-plus等。")]),s._v(" "),a("h2",{attrs:{id:"😁how"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#😁how"}},[s._v("#")]),s._v(" 😁How")]),s._v(" "),a("blockquote",[a("p",[s._v("怎么使用？")])]),s._v(" "),a("p",[s._v("答：目前有挺多方式可以搭建 monorepo")]),s._v(" "),a("ul",[a("li",[s._v("yarn workspaces：Yarn提供的monorepo的依赖管理机制")]),s._v(" "),a("li",[s._v("lerna：一个开源的管理工具，用于管理包含多个软件包（package）的JavaScript 项目")])]),s._v(" "),a("p",[s._v("更多可见 "),a("a",{attrs:{href:"https://www.lernajs.cn/",target:"_blank",rel:"noopener noreferrer"}},[s._v("lernajs 官网"),a("OutboundLink")],1)]),s._v(" "),a("p",[a("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/70060691c6f4432b93ba5b355f53d8d5~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a("hr"),a("p"),s._v(" "),a("p",[s._v("小结：本文对 Monorepo 有了一个基础的了解，Monorepo 和 pnpm 搭配，能发挥更大的潜力。")]),s._v(" "),a("blockquote",[a("p",[s._v("OK，以上便是本篇分享。点赞关注评论，为好文助力👍")]),s._v(" "),a("p",[s._v("我是掘金安东尼 🤠 100 万人气前端技术博主 💥 INFP 写作人格坚持 1000 日更文 ✍ 关注我，安东尼陪你一起度过漫长编程岁月 🌏")])])])}),[],!1,null,null,null);n.default=r.exports}}]);