(window.webpackJsonp=window.webpackJsonp||[]).push([[107],{604:function(a,e,s){"use strict";s.r(e);var t=s(2),r=Object(t.a)({},(function(){var a=this,e=a.$createElement,s=a._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("Haskell 的库函数")]),a._v(" "),s("h3",{attrs:{id:"id"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#id"}},[a._v("#")]),a._v(" id")]),a._v(" "),s("p",[a._v("给定一个任何的值，都返回这个给定的值；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('Prelude> id "myId"\n"myId"\n\nPrelude> :t id\nid :: a -> a\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"const"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#const"}},[a._v("#")]),a._v(" const")]),a._v(" "),s("p",[a._v("给定两个元素，只返回第一个；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> const 3 4\n3\n\nPrelude> :t const\nconst :: a -> b -> a\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"flip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#flip"}},[a._v("#")]),a._v(" flip")]),a._v(" "),s("p",[a._v("将返回翻转；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> flip const 3 4\n4\n\nPrelude> :t flip\nflip :: (a -> b -> c) -> b -> a -> c\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"error"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#error"}},[a._v("#")]),a._v(" error")]),a._v(" "),s("p",[a._v("抛一个异常；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('Prelude> error "something error"\n*** Exception: something error\n\nPrelude> :t error\nerror :: [Char] -> a\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"undefined"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#undefined"}},[a._v("#")]),a._v(" undefined")]),a._v(" "),s("p",[a._v("暂时定义没有实现的函数，不让编译器报错；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> ac = undefined\nPrelude> bc = ac+1\n\nPrelude> :t undefined\nundefined :: a\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"min-max"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#min-max"}},[a._v("#")]),a._v(" min/max")]),a._v(" "),s("p",[a._v("比较大小；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> min 5 6\n5\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:""}},[s("a",{staticClass:"header-anchor",attrs:{href:"#"}},[a._v("#")]),a._v(" !!")]),a._v(" "),s("p",[a._v("取列表中第 n+1 个数；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> [1,2,3] !!2\n3\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"reverse"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#reverse"}},[a._v("#")]),a._v(" reverse")]),a._v(" "),s("p",[a._v("将列表元素倒叙；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> reverse[1,2,3]\n[3,2,1]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"head-last"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#head-last"}},[a._v("#")]),a._v(" head/last")]),a._v(" "),s("p",[a._v("取列表第一个元素或最后一个元素；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> head \"Hello\"\n'H'\nPrelude> last \"Hello\"\n'o'\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("h3",{attrs:{id:"init-tail"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#init-tail"}},[a._v("#")]),a._v(" init/tail")]),a._v(" "),s("p",[a._v("将列表最后一个元素或第一个元素去掉；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> init [1..10]\n[1,2,3,4,5,6,7,8,9]\n\nPrelude> tail [1..10]\n[2,3,4,5,6,7,8,9,10]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#map"}},[a._v("#")]),a._v(" map")]),a._v(" "),s("p",[a._v("映射，得到一个新的列表；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> map (+1) [1,2,3,4]\n[2,3,4,5]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("还可以借助 λ匿名函数实现更复杂的映射：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> map (\\x->x^2+1)[1,2,3,4]\n[2,5,10,17]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"filter"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#filter"}},[a._v("#")]),a._v(" filter")]),a._v(" "),s("p",[a._v("过滤函数；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> filter (>=7) [9,6,4,2,10,3,15]\n[9,10,15]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("由过滤函数衍生的两个判断奇数（odd）偶数（even）的函数：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> odd 4\nFalse\n\nPrelude> even 4\nTrue\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"take-drop"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#take-drop"}},[a._v("#")]),a._v(" take/drop")]),a._v(" "),s("p",[a._v("take 函数可以从头连续地取得一个列表的几个元素；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> take 3 [1,2,3,4,5]\n[1,2,3]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("drop 与 take 相反，将列表中的前几个元素舍弃；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> drop 3 [1,2,3,4,5]\n[4,5]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"span-break"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#span-break"}},[a._v("#")]),a._v(" span/break")]),a._v(" "),s("p",[a._v("span 函数可以根据一个条件，从左至右，当遇到第一个不符合条件的元素时停止，将一个列表分成由两个列表组成的元组；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> span odd [1,3,5,6,9]\n([1,3,5],[6,9])\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("break 函数则与 span 函数相反，它会根据一个条件，从左至右，当遇到符合条件的时候停止；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> break odd [1,3,5,6,9]\n([],[1,3,5,6,9])\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("###　takeWhile／dropWhile")]),a._v(" "),s("p",[a._v("之前的　take　和　drop　函数是通过给定一个整数来取得或者去掉列表中的前几个元素，而　takeWhile　和　dropWhile　则需要一个条件来判断，条件不成立的时候停止取出或者去除；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> takeWhile (>5) [6,7,8,2,3,4]\n[6,7,8]\n\nPrelude> dropWhile (>5) [6,7,8,2,3,4]\n[2,3,4]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"splitat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#splitat"}},[a._v("#")]),a._v(" splitAt")]),a._v(" "),s("p",[a._v("这个函数可以将一个列表在任何的位置分开；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v('Prelude> splitAt 5 "HelloWorld!"\n("Hello","World!")\n')])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"repeat-replicate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#repeat-replicate"}},[a._v("#")]),a._v(" repeat/replicate")]),a._v(" "),s("p",[a._v("重复函数repeat可以将一个元素在列表里重复无数次；")]),a._v(" "),s("p",[a._v("replicate 是复制函数，可以将一个元素复制给定的次数；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> repeat True\n[True,True,True,True,......\n\nPrelude> replicate 5 True\n[True,True,True,True,True]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("p",[a._v("实际上，我们可以用 take 和 repeat 函数实现 replicate 函数：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> replicate1 n a = take n (repeat a)\nPrelude> replicate1 5 False\n[False,False,False,False,False]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("h3",{attrs:{id:"any-all"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#any-all"}},[a._v("#")]),a._v(" any/all")]),a._v(" "),s("p",[a._v("查询一个列表中是否存在符合给定条件的元素；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> any even [1,3,5]\nFalse\n\nPrelude> all odd [1,3,5]\nTrue\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"and-or"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#and-or"}},[a._v("#")]),a._v(" and/or")]),a._v(" "),s("p",[a._v("and 会把一个列表中所有的布尔值用 && 连接起来；")]),a._v(" "),s("p",[a._v("or 则会把所有布尔值用 || 连接起来；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> and [True,True,False]\nFalse\n\nPrelude> or [True,True,False]\nTrue\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br")])]),s("h3",{attrs:{id:"elem-notelem"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#elem-notelem"}},[a._v("#")]),a._v(" elem/notElem")]),a._v(" "),s("p",[a._v("elem 函数可以判断一个列表中是否存在某一元素；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> elem 1 [4,5,1]\nTrue\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("notElem 是 elem 的否定；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> notElem 1 [4,5,1]\nFalse\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"iterate"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#iterate"}},[a._v("#")]),a._v(" iterate")]),a._v(" "),s("p",[a._v("迭代函数；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> iterate (*2) 1\n[1,2,4,8,16,32,64,128,256,512,1024,2048......\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"until"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#until"}},[a._v("#")]),a._v(" until")]),a._v(" "),s("p",[a._v("函数 until 可以迭代地来生成数据直到满足给定的条件为止；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> until(>500)(*2)1\n512\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"zip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#zip"}},[a._v("#")]),a._v(" zip")]),a._v(" "),s("p",[a._v("zip函数可以将两个列表结合成一个元组的列表；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> zip [True,False,True,False] [2,4,5,6,7]\n[(True,2),(False,4),(True,5),(False,6)]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"unzip"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#unzip"}},[a._v("#")]),a._v(" unzip")]),a._v(" "),s("p",[a._v("unzip 与 zip 逆向，是把一个二元元素列表分成两个列表元素的函数；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> unzip [(True,2),(False,4),(True,5),(False,6)]\n([True,False,True,False],[2,4,5,6])\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"concat"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concat"}},[a._v("#")]),a._v(" concat")]),a._v(" "),s("p",[a._v("concat 函数可以将一个列表中的列表相连；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> concat [[1,2],[3,4]]\n[1,2,3,4]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"concatmap"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#concatmap"}},[a._v("#")]),a._v(" concatMap")]),a._v(" "),s("p",[a._v("map 函数将 [a] 计算为 [[b]] 类型的结果，再使用 concat 函数来得到类型为 [b] 的结果；")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("Prelude> map (replicate 3) [1,2,3]\n[[1,1,1],[2,2,2],[3,3,3]]\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])])])}),[],!1,null,null,null);e.default=r.exports}}]);