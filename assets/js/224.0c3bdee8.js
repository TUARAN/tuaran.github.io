(window.webpackJsonp=window.webpackJsonp||[]).push([[224],{721:function(a,s,n){"use strict";n.r(s);var e=n(2),r=Object(e.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("p",[a._v("持续创作，加速成长！这是我参与「掘金日新计划 · 6 月更文挑战」的第 30 天，"),n("a",{attrs:{href:"https://juejin.cn/post/7099702781094674468",title:"https://juejin.cn/post/7099702781094674468",target:"_blank",rel:"noopener noreferrer"}},[a._v("点击查看活动详情"),n("OutboundLink")],1)]),a._v(" "),n("h2",{attrs:{id:"小序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小序"}},[a._v("#")]),a._v(" 小序")]),a._v(" "),n("p",[a._v("在 6 月更文中零零散散讲了 JS 的对象创建和对象继承，有工友对此还是表示疑惑，要注意：这是两个不同但又相关的东西，千万别搞混了！")]),a._v(" "),n("p",[a._v("这些文章是：")]),a._v(" "),n("ul",[n("li",[n("strong",[n("a",{attrs:{href:"https://juejin.cn/post/7107410940018032671",target:"_blank",rel:"noopener noreferrer"}},[a._v("蓦然回首，“工厂、构造、原型”设计模式，正在灯火阑珊处"),n("OutboundLink")],1)])]),a._v(" "),n("li",[n("strong",[n("a",{attrs:{href:"https://juejin.cn/post/7107779239281164301",target:"_blank",rel:"noopener noreferrer"}},[a._v("JS精粹，原型链继承和构造函数继承的 “毛病”"),n("OutboundLink")],1)])]),a._v(" "),n("li",[n("strong",[n("a",{attrs:{href:"https://juejin.cn/post/7108585678341931039",target:"_blank",rel:"noopener noreferrer"}},[a._v("“工厂、构造、原型” 设计模式与 JS 继承"),n("OutboundLink")],1)])]),a._v(" "),n("li",[n("strong",[n("a",{attrs:{href:"https://juejin.cn/post/7108908481679196168",target:"_blank",rel:"noopener noreferrer"}},[a._v("JS 高级程序设计 4：class 继承的重点"),n("OutboundLink")],1)])]),a._v(" "),n("li",[n("strong",[n("a",{attrs:{href:"https://juejin.cn/post/7112807628115279909",target:"_blank",rel:"noopener noreferrer"}},[a._v("JS class 并不只是简单的语法糖！"),n("OutboundLink")],1)])])]),a._v(" "),n("h2",{attrs:{id:"对象创建"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象创建"}},[a._v("#")]),a._v(" 对象创建")]),a._v(" "),n("p",[a._v("不难发现，每一篇都离不开工厂、构造、原型这 3 种设计模式中的至少其一！")]),a._v(" "),n("p",[a._v("让人不禁想问：JS 为什么非要用到这种 3 种设计模式了呢？？")]),a._v(" "),n("p",[a._v("正本溯源，"),n("strong",[a._v("先从对象创建讲起：")])]),a._v(" "),n("p",[a._v("我们本来习惯这样声明对象（不用任何设计模式）")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('let car= {\n        price:100,\n        color:"white",\n        run:()=>{console.log("run fast")}\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("当有两个或多个这样的对象需要声明时，是不可能一直复制写下去的：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('let car1 = {\n        price:100,\n        color:"white",\n        run:()=>{console.log("run fast")}\n}\n\nlet car2 = {\n        price:200,\n        color:"balck",\n        run:()=>{console.log("run slow")}\n}\n\nlet car3 = {\n        price:300,\n        color:"red",\n        run:()=>{console.log("broken")}\n}\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br")])]),n("p",[a._v("这样写：")]),a._v(" "),n("ol",[n("li",[a._v("写起来麻烦，重复的代码量大；")]),a._v(" "),n("li",[a._v("不利于修改，比如当 car 对象要增删改一个属性，需要多处进行增删改；")])]),a._v(" "),n("h2",{attrs:{id:"工厂函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工厂函数"}},[a._v("#")]),a._v(" 工厂函数")]),a._v(" "),n("p",[a._v("肯定是要封装啦，第一个反应，可以 "),n("strong",[a._v("借助函数")]),a._v(" 来帮助我们批量创建对象~")]),a._v(" "),n("p",[a._v("于是乎：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('function makeCar(price,color,performance){\n        let obj = {}\n        obj.price = price\n        obj.color= color\n        obj.run = ()=>{console.log(performance)}\n        return obj\n}\n\nlet car1= makeCar("100","white","run fast")\nlet car2= makeCar("200","black","run slow")\nlet car3= makeCar("300","red","broken")\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br")])]),n("p",[n("strong",[a._v("这就是工厂设计模式在 JS 创建对象时应用的由来~")])]),a._v(" "),n("p",[a._v("到这里，对于【对象创建】来说，应该够用了吧？是，在不考虑扩展的情况下，基本够用了。")]),a._v(" "),n("p",[a._v("但这个时候来个新需求，需要创建 car4、car5、car6 对象，它们要在原有基础上再新增一个 "),n("code",[a._v("brand")]),a._v(" 属性，会怎么写？")]),a._v(" "),n("p",[a._v("第一反应，直接修改 "),n("code",[a._v("makeCar")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('function makeCar(price,color,performance,brand){\n        let obj = {}\n        obj.price = price\n        obj.color= color\n        obj.run = ()=>{console.log(performance)}\n        obj.brand = brand\n        return obj\n}\n\nlet car4= makeCar("400","white","run fast","benz")\nlet car5= makeCar("500","black","run slow","audi")\nlet car6= makeCar("600","red","broken","tsl")\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br")])]),n("p",[a._v("这样写，不行，会影响原有的 car1、car2、car3 对象；")]),a._v(" "),n("p",[a._v("那再重新写一个 "),n("code",[a._v("makeCarChild")]),a._v(" 工厂函数行不行？")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('function makeCarChild (price,color,performance,brand){\n        let obj = {}\n        obj.price = price\n        obj.color= color\n        obj.run = ()=>{console.log(performance)}\n        obj.brand = brand\n        return obj\n}\n\nlet car4= makeCarChild("400","white","run fast","benz")\nlet car5= makeCarChild("500","black","run slow","audi")\nlet car6= makeCarChild("600","red","broken","tsl")\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br")])]),n("p",[a._v("行是行，就是太麻烦，全量复制之前的属性，建立 N 个相像的工厂，显得太蠢了。。。")]),a._v(" "),n("p",[n("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6da269bcd9ff484c81d0af594cfed8ac~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),n("h2",{attrs:{id:"构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[a._v("#")]),a._v(" 构造函数")]),a._v(" "),n("p",[a._v("于是乎，"),n("strong",[a._v("在工厂设计模式上，发展出了：构造函数设计模式")]),a._v("，来解决以上复用（也就是继承）的问题。")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('function MakeCar(price,color,performance){\n        this.price = price\n        this.color= color\n        this.run = ()=>{console.log(performance)}\n}\n\nfunction MakeCarChild(brand,...args){\n        MakeCar.call(this,...args)\n        this.brand = brand\n}\n\nlet car4= new MakeCarChild("benz","400","white","run fast")\nlet car5= new MakeCarChild("audi","500","black","run slow")\nlet car6= new MakeCarChild("tsl","600","red","broken")\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br")])]),n("p",[a._v("构造函数区别于工厂函数：")]),a._v(" "),n("ul",[n("li",[a._v("函数名首字母通常大写；")]),a._v(" "),n("li",[a._v("创建对象的时候要用到 new 关键字（new 的过程这里不再赘述了，之前文章有）；")]),a._v(" "),n("li",[a._v("函数没有 return，而是通过 this 绑定来实现寻找属性的；")])]),a._v(" "),n("p",[a._v("到此为止，工厂函数的复用也解决了。")]),a._v(" "),n("h2",{attrs:{id:"构造-原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造-原型"}},[a._v("#")]),a._v(" 构造+原型")]),a._v(" "),n("p",[a._v("新的问题在于，"),n("strong",[a._v("我们不能通过查找原型链从 MakeCarChild 找到 MakeCar")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("car4.__proto__===MakeCarChild.prototype // true\n\nMakeCarChild.prototype.__proto__ === MakeCar.prototype // false\nMakeCarChild.__proto__ === MakeCar.prototype // false\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br")])]),n("p",[a._v("无论在原型链上怎么找，都无法从 "),n("code",[a._v("MakeCarChild")]),a._v(" 找到 "),n("code",[a._v("MakeCar")])]),a._v(" "),n("p",[a._v("这就意味着：子类不能继承父类原型上的属性")]),a._v(" "),n("blockquote",[n("p",[a._v("这里提个思考问题：为什么“要从原型链查找到”很重要？为什么“子类要继承父类原型上的属性”？就靠 this 绑定来找不行吗？")])]),a._v(" "),n("p",[n("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/9acca482a4a641638a5413c815b96239~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),n("p",[a._v("于是乎，构造函数设计模式 + 原型设计模式 的 【"),n("strong",[a._v("组合继承")]),a._v("】应运而生")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('function MakeCar(price,color,performance){\n        this.price = price\n        this.color= color\n        this.run = ()=>{console.log(performance)}\n}\n\nfunction MakeCarChild(brand,...args){\n        MakeCar.call(this,...args)\n        this.brand = brand\n}\n\nMakeCarChild.prototype = new MakeCar() // 原型继承父类的构造器\n\nMakeCarChild.prototype.constructor = MakeCarChild // 重置 constructor \n\nlet car4= new MakeCarChild("benz","400","white","run fast")\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br")])]),n("p",[a._v("现在再找原型，就找的到啦：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("car4.__proto__ === MakeCarChild.prototype // true\nMakeCarChild.prototype.__proto__ === MakeCar.prototype // true\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])]),n("p",[a._v("其实，能到这里，就已经很很优秀了，该有的都有了，写法也不算是很复杂。")]),a._v(" "),n("h2",{attrs:{id:"工厂-构造-原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工厂-构造-原型"}},[a._v("#")]),a._v(" 工厂+构造+原型")]),a._v(" "),n("p",[a._v("但，总有人在追求极致。")]),a._v(" "),n("p",[n("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/986b606547f24a1e92c7d6608e3949d3~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),n("p",[a._v("上述的组合继承，父类构造函数被调用了两次，一次是 call 的过程，一次是原型继承  new 的过程，如果每次实例化，都重复调用，肯定是不可取的，怎样避免？")]),a._v(" "),n("p",[n("strong",[a._v("工厂 + 构造 + 原型 = 寄生组合继承")]),a._v(" 应运而生")]),a._v(" "),n("p",[a._v("核心是，通过工厂函数新建一个中间商 F( )，复制了一份父类的原型对象，再赋给子类的原型；")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('function object(o) { // 工厂函数\n  function F() {}\n  F.prototype = o;\n  return new F(); // new 一个空的函数，所占内存很小\n}\n\nfunction inherit(child, parent) { // 原型继承\n  var prototype = object(parent.prototype)\n  prototype.constructor = child\n  child.prototype = prototype\n}\n\n\nfunction MakeCar(price,color,performance){\n        this.price = price\n        this.color= color\n        this.run = ()=>{console.log(performance)}\n}\n\nfunction MakeCarChild(brand,...args){  // 构造函数\n        MakeCar.call(this,...args)\n        this.brand = brand\n}\n\ninherit(MakeCarChild,MakeCar)\n\nlet car4= new MakeCarChild("benz","400","white","run fast")\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br"),n("span",{staticClass:"line-number"},[a._v("24")]),n("br"),n("span",{staticClass:"line-number"},[a._v("25")]),n("br"),n("span",{staticClass:"line-number"},[a._v("26")]),n("br"),n("span",{staticClass:"line-number"},[a._v("27")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("car4.__proto__ === MakeCarChild.prototype // true\n\nMakeCarChild.prototype.__proto__ === MakeCar.prototype // true\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("h2",{attrs:{id:"es6-class"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#es6-class"}},[a._v("#")]),a._v(" ES6 class")]),a._v(" "),n("p",[a._v("再到后来，ES6 的 class 作为寄生组合继承的语法糖：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v('class MakeCar {\n\tconstructor(price,color,performance){\n\t\t\tthis.price = price\n\t\t\tthis.color= color\n\t\t\tthis.performance=performance\n\t}\n\trun(){\n\t\tconsole.log(console.log(this.performance))\n\t}\n}\n\nclass MakeCarChild extends MakeCar{\n    constructor(brand,...args){\n        super(brand,...args);\n        this.brand= brand;\n    }\n}\n\nlet car4= new MakeCarChild("benz","400","white","run fast")\n')])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br")])]),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("car4.__proto__ === MakeCarChild.prototype // true\n\nMakeCarChild.prototype.__proto__ === MakeCar.prototype // true\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("p",[a._v("有兴趣的工友，可以看下 ES6 解析成 ES5 的代码："),n("strong",[a._v("原型与原型链 - ES6 Class的底层实现原理 #22")])]),a._v(" "),n("h2",{attrs:{id:"对象与函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#对象与函数"}},[a._v("#")]),a._v(" 对象与函数")]),a._v(" "),n("p",[a._v("最后本瓜想再谈谈关于 JS 对象和函数的关系：")]),a._v(" "),n("p",[n("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/63ba2c5c4b5646649992c4f6daae55d2~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),n("p",[a._v("即使是这样声明一个对象，"),n("code",[a._v("let obj = {}")]),a._v(" ，它一样是由构造函数 "),n("code",[a._v("Object")]),a._v(" 构造而来的：")]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("let obj = {} \n\nobj.__proto__ === Object.prototype // true\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("blockquote",[n("p",[n("strong",[a._v("在 JS 中，万物皆对象，对象都是有函数构造而来，函数本身也是对象。")])])]),a._v(" "),n("p",[a._v("对应代码中的意思：")]),a._v(" "),n("ol",[n("li",[a._v("所有的构造函数的隐式原型都等于 Function 的显示原型，函数都是由 Function 构造而来，Object 构造函数也不例外；")]),a._v(" "),n("li",[a._v("所有构造函数的显示原型的隐式原型，都等于 Object 的显示原型，Function 也不例外；")])]),a._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("// 1.\nObject.__proto__ === Function.prototype // true\n\n// 2. \nFunction.prototype.__proto__ === Object.prototype // true\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("这个设计真的就一个大无语，大纠结，大麻烦。。。")]),a._v(" "),n("p",[n("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/0b457903941445c3aa914cdbee275ce6~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),n("p",[a._v("只能先按之前提过的歪理解记着先：Function 就是上帝，上帝创造了万物；Object 就是万物。万物由上帝创造（对象由函数构造而来），上帝本身也属于一种物质（函数本身却也是对象）；")]),a._v(" "),n("p",[a._v("对于本篇来说，继承，其实都是父子构造函数在继承，然后再由构造函数实例化对象，以此来实现对象的继承。")]),a._v(" "),n("p",[a._v("到底是谁在继承？函数？对象？都是吧~~")]),a._v(" "),n("hr"),a._v(" "),n("h2",{attrs:{id:"小结"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[a._v("#")]),a._v(" 小结")]),a._v(" "),n("p",[a._v("本篇由创建对象说起，讲了工厂函数，它可以做一层最基本的封装；")]),a._v(" "),n("p",[a._v("再到，对工厂的拓展，演进为构造函数；")]),a._v(" "),n("p",[a._v("再基于原型特点，构造+原型，得出组合继承；")]),a._v(" "),n("p",[a._v("再追求极致，讲到寄生组合；")]),a._v(" "),n("p",[a._v("再讲到简化书写的 Es6 class ；")]),a._v(" "),n("p",[a._v("以及最后对对象与函数的思考。")]),a._v(" "),n("p",[a._v("就先到这吧~~")]),a._v(" "),n("blockquote",[n("p",[a._v("OK，以上便是本篇分享。点赞关注评论，为好文助力👍")]),a._v(" "),n("p",[a._v("我是掘金安东尼 🤠 100 万人气前端技术博主 💥 INFP 写作人格坚持 1000 日更文 ✍ 关注我，安东尼陪你一起度过漫长编程岁月 🌏")])])])}),[],!1,null,null,null);s.default=r.exports}}]);