(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{622:function(s,n,a){"use strict";a.r(n);var t=a(2),e=Object(t.a)({},(function(){var s=this,n=s.$createElement,a=s._self._c||n;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"引言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#引言"}},[s._v("#")]),s._v(" 引言")]),s._v(" "),a("p",[s._v("继前六篇洗礼之后：")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6968259661304692750",target:"_blank",rel:"noopener noreferrer"}},[s._v("《XDM，JS如何函数式编程？看这就够了！（一）》"),a("OutboundLink")],1),s._v(" 关键词："),a("strong",[s._v("－代码可读－")])]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6969016132741103624",target:"_blank",rel:"noopener noreferrer"}},[s._v("《XDM，JS如何函数式编程？看这就够了！（二）》"),a("OutboundLink")],1),s._v(" 关键词："),a("strong",[s._v("－偏函数、柯里化－")])]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6971260867300032525",target:"_blank",rel:"noopener noreferrer"}},[s._v("《XDM，JS如何函数式编程？看这就够了！（三）》"),a("OutboundLink")],1),s._v(" 关键词："),a("strong",[s._v("－函数组装－")])]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6974301728426426399",target:"_blank",rel:"noopener noreferrer"}},[s._v("《XDM，JS如何函数式编程？看这就够了！（四）》"),a("OutboundLink")],1),s._v(" 关键词："),a("strong",[s._v("－副作用、纯函数－")])]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6975072912483041294",target:"_blank",rel:"noopener noreferrer"}},[s._v("《XDM，JS如何函数式编程？看这就够了！（五）》"),a("OutboundLink")],1),s._v(" 关键词："),a("strong",[s._v("－数组应用－")])]),s._v(" "),a("li",[a("a",{attrs:{href:"https://juejin.cn/post/6976550771122765837",target:"_blank",rel:"noopener noreferrer"}},[s._v("《XDM，JS如何函数式编程？看这就够了！（六）》"),a("OutboundLink")],1),s._v(" 关键词："),a("strong",[s._v("－异步－")])])]),s._v(" "),a("p",[s._v("我们可以得出这样的结论：")]),s._v(" "),a("blockquote",[a("p",[s._v("函数式编程所代表的【"),a("strong",[s._v("声明式代码风格")]),s._v("】是高于【"),a("strong",[s._v("命令式代码风格")]),s._v("】的！它给了代码可读性数值更多增长的空间！")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s3.jpg.cm/2021/06/25/Iq8feC.md.png",alt:"Iq8feC.md.png"}})]),s._v(" "),a("p",[a("sup",[a("strong",[s._v("图 1.1")])])]),s._v(" "),a("p",[s._v("也可以这样解释：声明式代码风格是基于命令式代码风格，"),a("strong",[s._v("声明式说白了就是对命令式的上层封装！")])]),s._v(" "),a("p",[s._v("命令式关注："),a("strong",[s._v("做什么")]),s._v("，申明式关注："),a("strong",[s._v("是什么")]),s._v("。")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s3.jpg.cm/2021/06/25/Iq8ZzS.md.png",alt:"Iq8ZzS.md.png"}})]),s._v(" "),a("p",[a("sup",[a("strong",[s._v("图 1.2")])])]),s._v(" "),a("p",[s._v("如果我们的代码夹杂着命令式风格和声明式风格，即处在 图1.2 红线和绿线的交叉点上的话，那我们代码的可读性或许就处在 图 1.1 虚线和实线的交叉点上，可读性非常低。所以，我们在 JS 函数式编程的路上要更加一往无前！别到最后不伦不类，沦为笑柄 Orz")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("第七篇作为系列阶段性的【完结篇】，一切将从实战出发！一切为了实战！")])]),s._v(" "),a("p",[s._v("FP will never be slaves.（函数式编程永不为奴）")])]),s._v(" "),a("p",[a("img",{attrs:{src:"https://s3.jpg.cm/2021/06/25/IqAvNQ.md.png",alt:"IqAvNQ.md.png"}})]),s._v(" "),a("h2",{attrs:{id:"武器准备"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#武器准备"}},[s._v("#")]),s._v(" 武器准备")]),s._v(" "),a("p",[s._v("我们在前篇陆续介绍了很多【高级函数】用于实践 JS 函数式编程。")]),s._v(" "),a("p",[s._v("作者将其整理到了这个文件："),a("a",{attrs:{href:"https://github.com/getify/Functional-Light-JS/blob/master/ch11-code/fp-helpers.js",target:"_blank",rel:"noopener noreferrer"}},[s._v("fp-helpers.js"),a("OutboundLink")],1)]),s._v(" "),a("p",[s._v("随便列举几个，都是前面提过的，熟悉的面孔：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("function partial(fn,...presetArgs) { // 偏函数\n\treturn function partiallyApplied(...laterArgs){\n\t\treturn fn( ...presetArgs, ...laterArgs );\n\t};\n}\n\nfunction curry(fn,arity = fn.length) { // 柯里化\n\treturn (function nextCurried(prevArgs){\n\t\treturn function curried(nextArg){\n\t\t\tvar args = [ ...prevArgs, nextArg ];\n\n\t\t\tif (args.length >= arity) {\n\t\t\t\treturn fn( ...args );\n\t\t\t}\n\t\t\telse {\n\t\t\t\treturn nextCurried( args );\n\t\t\t}\n\t\t};\n\t})( [] );\n}\n\nfunction compose(...fns) { // 函数组装\n    return fns.reduceRight( function reducer(fn1,fn2){\n        return function composed(...args){\n            return fn2( fn1( ...args ) );\n        };\n    } );\n}\n\nvar pipe = reverseArgs(compose); // 函数组装：参数反转，从左到右\n\nfunction reverseArgs(fn) {\n\treturn function argsReversed(...args){\n\t\treturn fn( ...args.reverse() );\n\t};\n}\n\nfunction zip(arr1,arr2) { // 交替选择入参\n\tvar zipped = [];\n\tarr1 = [...arr1];\n\tarr2 = [...arr2];\n\n\twhile (arr1.length > 0 && arr2.length > 0) {\n\t\tzipped.push( [ arr1.shift(), arr2.shift() ] );\n\t}\n\n\treturn zipped;\n}\n\n.....\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])]),a("p",[s._v("我们将借用这些高级函数彻底 "),a("strong",[s._v("升级")]),s._v(" 我们从【命令式编程风格】到【函数式编程风格】！")]),s._v(" "),a("h2",{attrs:{id:"实践场景"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#实践场景"}},[s._v("#")]),s._v(" 实践场景")]),s._v(" "),a("p",[s._v("我们用原生模拟一个股票信息操作场景：")]),s._v(" "),a("p",[s._v("DOM 结构：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('<ul id="stock-ticker">\n    <li class="stock" data-stock-id="AAPL">\n        <span class="stock-name">苹果股价</span>\n        <span class="stock-price">$121.95</span>\n        <span class="stock-change">+0.01</span>\n    </li>\n    <li class="stock" data-stock-id="MSFT">\n        <span class="stock-name">微软股价</span>\n        <span class="stock-price">$65.78</span>\n        <span class="stock-change">+1.51</span>\n    </li>\n    <li class="stock" data-stock-id="GOOG">\n        <span class="stock-name">谷歌股价</span>\n        <span class="stock-price">$821.31</span>\n        <span class="stock-change">-8.84</span>\n    </li>\n</ul>\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h3",{attrs:{id:"格式化数据"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化数据"}},[s._v("#")]),s._v(" 格式化数据")]),s._v(" "),a("p",[s._v("一些基本的辅助函数：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function addStockName(stock) { // 新增股票\n    return setProp( "name", stock, stock.id );\n}\nfunction formatSign(val) { // 格式化股价（$）\n    if (Number(val) > 0) {\n        return `+${val}`;\n    }\n    return val;\n}\nfunction formatCurrency(val) { // 格式化股价（$$）\n    return `$${val}`;\n}\nfunction transformObservable(mapperFn,obsv){ // 返回 observable 监听（通过 RxJS，第六篇提过）\n    return obsv.map( mapperFn );\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("p",[s._v("我们 mock 从服务器获取的数据是这样的：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('stock = { id: "AAPL", price: 121.7, change: 0.01 }\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("在把 price 的值显示到 DOM 上之前，需要用 "),a("code",[s._v("formatCurrency(..)")]),s._v(' 函数格式化一下（比如变成 "$121.70"），同时需要用 '),a("code",[s._v("formatChange(..)")]),s._v(' 函数格式化 change 的值（比如变成 "+0.01"）。但是我们不希望修改消息对象中的 '),a("em",[s._v("price")]),s._v(" 和 "),a("em",[s._v("change")]),s._v("。故写一个辅助函数如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function formatStockNumbers(stock) {\n    var updateTuples = [\n        [ "price", formatPrice( stock.price ) ],\n        [ "change", formatChange( stock.change ) ]\n    ];\n\n    return reduce( function formatter(stock,[propName,val]){\n        return setProp( propName, stock, val );\n    } )\n    ( stock )\n    ( updateTuples );\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("我们创建了 "),a("em",[s._v("updateTuples")]),s._v(" 元组来保存 "),a("em",[s._v("price")]),s._v(" 和 "),a("em",[s._v("change")]),s._v(" 的信息，包括属性名称和格式化好的值。把 "),a("em",[s._v("stock")]),s._v(" 对象作为 "),a("em",[s._v("initialValue")]),s._v("，对元组进行 "),a("code",[s._v("reduce(..)")]),s._v("操作（参考第 5 篇）。把元组中的信息解构成 "),a("em",[s._v("propName")]),s._v(" 和 "),a("em",[s._v("val")]),s._v("，然后返回了 "),a("code",[s._v("setProp(..)")]),s._v(" 调用的结果，这个结果是一个被复制了的新的对象，其中的属性被修改过了。（可理解为深拷贝的进阶版）")]),s._v(" "),a("p",[s._v("我们基于以上再定义几个辅助函数：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var formatDecimal = unboundMethod( "toFixed" )( 2 );\nvar formatPrice = pipe( formatDecimal, formatCurrency );\nvar formatChange = pipe( formatDecimal, formatSign );\nvar processNewStock = pipe( addStockName, formatStockNumbers );\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ol",[a("li",[a("code",[s._v("formatDecimal(..)")]),s._v(" 函数接收一个数字作为参数（如 2.1）并且调用数字的 toFixed( 2 ) 方法。")]),s._v(" "),a("li",[a("code",[s._v("unboundMethod(..)")]),s._v(" 函数用来创建一个独立的延迟绑定函数。")]),s._v(" "),a("li",[a("code",[s._v("formatPrice(..)，formatChange(..) 和 processNewStock(..)")]),s._v(" 都用到了 "),a("code",[s._v("pipe(..)")]),s._v("来从左到右地组合运算。")])]),s._v(" "),a("h3",{attrs:{id:"操作-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作-dom"}},[s._v("#")]),s._v(" 操作 DOM")]),s._v(" "),a("p",[s._v("下一步，定义一些操作 DOM 的辅助函数：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('function isTextNode(node) {\n    return node && node.nodeType == 3;\n}\nfunction getElemAttr(elem,prop) {\n    return elem.getAttribute( prop );\n}\nfunction setElemAttr(elem,prop,val) {\n    // 副作用！！\n    return elem.setAttribute( prop, val );\n}\nfunction matchingStockId(id) {\n    return function isStock(node){\n        return getStockId( node ) == id;\n    };\n}\nfunction isStockInfoChildElem(elem) {\n    return /\\bstock-/i.test( getClassName( elem ) );\n}\nfunction appendDOMChild(parentNode,childNode) {\n    // 副作用！！\n    parentNode.appendChild( childNode );\n    return parentNode;\n}\nfunction setDOMContent(elem,html) {\n    // 副作用！！\n    elem.innerHTML = html;\n    return elem;\n}\n\nvar createElement = document.createElement.bind( document );\n\nvar getElemAttrByName = curry( reverseArgs( getElemAttr ), 2 );\nvar getStockId = getElemAttrByName( "data-stock-id" );\nvar getClassName = getElemAttrByName( "class" );\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("p",[s._v("这些函数不言自明，从函数命名上就可看出其含义。")]),s._v(" "),a("p",[s._v("以上标出了操作 DOM 元素时的副作用。因为不能简单地用克隆的 DOM 对象去替换，所以勉强接受了一些副作用的产生。但如果在 DOM 渲染中产生一个错误，这样做，我们可以轻松地搜索这些代码注释来缩小可能的错误代码。")]),s._v(" "),a("h3",{attrs:{id:"查找特定-dom"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查找特定-dom"}},[s._v("#")]),s._v(" 查找特定 DOM")]),s._v(" "),a("p",[s._v("现在，我们用 "),a("code",[s._v("getDOMChildren(..)")]),s._v(" 实用函数来定义股票行情工具中查找特定 DOM 元素的工具函数：")]),s._v(" "),a("p",[a("code",[s._v("getDOMChildren(..)")]),s._v(" 用 "),a("code",[s._v("listify(..)")]),s._v(" 来保证我们得到的是一个数组（即使里面只有一个元素）。"),a("code",[s._v("flatMap(..)")]),s._v("，这个函数把一个包含数组的数组扁平化，变成一个浅数组。"),a("code",[s._v("Array.from(..)")]),s._v(" 把这个数组变成一个真实的数组（而不是一个 NodeList）。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var getDOMChildren = pipe(\n    listify,\n    flatMap(\n        pipe(\n            curry( prop )( "childNodes" ),\n            Array.from\n        )\n    )\n);\n\nfunction getStockElem(tickerElem,stockId) {\n    return pipe(\n        getDOMChildren,\n        filterOut( isTextNode ),\n        filterIn( matchingStockId( stockId ) )\n    )\n    ( tickerElem );\n}\nfunction getStockInfoChildElems(stockElem) {\n    return pipe(\n        getDOMChildren,\n        filterOut( isTextNode ),\n        filterIn( isStockInfoChildElem )\n    )\n    ( stockElem );\n}\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("p",[a("code",[s._v("getStockElem(..)")]),s._v(" 和 "),a("code",[s._v("getStockInfoChildElems(..)")]),s._v(" 两个实用函数都会过滤掉文字节点，保证返回一个符合股票代码的 DOM 元素数组。")]),s._v(" "),a("h2",{attrs:{id:"主函数"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主函数"}},[s._v("#")]),s._v(" 主函数")]),s._v(" "),a("p",[s._v("我们用 "),a("strong",[s._v("stockTickerUI 对象")]),s._v(" 来保存三个修改界面的主要方法，如下：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var stockTickerUI = {\n\n    updateStockElems(stockInfoChildElemList,data) { // 渲染股票数据到 DOM 元素上\n        // ..\n    },\n\n    updateStock(tickerElem,data) { // 更新股票数据\n        // ..\n    },\n\n    addStock(tickerElem,data) { // 添加新股票\n        // ..\n    }\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("h3",{attrs:{id:"updatestockelems"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updatestockelems"}},[s._v("#")]),s._v(" updateStockElems")]),s._v(" "),a("p",[a("code",[s._v("updateStockElems(..)")]),s._v(" 内部实现：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var stockTickerUI = {\n\n    updateStockElems(stockInfoChildElemList,data) {\n\n        // **释义1**\n        var getDataVal = curry( reverseArgs( prop ), 2 )( data ); \n\n        // **释义2**\n        var extractInfoChildElemVal = pipe(\n            getClassName,\n            stripPrefix( /\\bstock-/i ),\n            getDataVal\n        );\n\n        // **释义3**\n        var orderedDataVals =\n            map( extractInfoChildElemVal )( stockInfoChildElemList );\n\n        // **释义4**\n        var elemsValsTuples =\n            filterOut( function updateValueMissing([infoChildElem,val]){\n                return val === undefined;\n            } )\n            ( zip( stockInfoChildElemList, orderedDataVals ) );\n\n        // **释义5**\n        compose( each, spreadArgs )\n        ( setDOMContent )\n        ( elemsValsTuples );\n    },\n\n    // ..\n\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("p",[s._v("释义：")]),s._v(" "),a("ol",[a("li",[a("code",[s._v("getDataVal(..)")]),s._v("：首先把 prop 函数的参数反转，柯里化后，把 data 消息对象绑定上去，得到了 getDataVal(..) 函数；")]),s._v(" "),a("li",[a("code",[s._v("extractInfoChildElemVal(..)")]),s._v('：接受一个 DOM 元素作为参数，拿到 class 属性的值，然后把 "stock-" 前缀去掉，然后用这个属性值（"name"，"price" 或 "change"），通过 getDataVal(..) 函数，在 data 中找到对应的数据；')]),s._v(" "),a("li",[a("code",[s._v("orderedDataVals(..)")]),s._v("：这么做的目的是按照 stockInfoChildElemList 中的 <span> 元素的顺序从 data 中拿到数据。我们对 stockInfoChildElemList 数组调用 extractInfoChildElem 映射函数，来拿到这些数据；")]),s._v(" "),a("li",[a("code",[s._v("elemsValsTuples(..)")]),s._v("：我们用来过滤掉数据对象中值为空的元组，筛选后的结果是一个元组数组（zip压缩："),a("code",[s._v('[ <span>, ".." ]')]),s._v("）；")]),s._v(" "),a("li",[s._v("最后调用，我们更新 DOM 中的 "),a("span",[s._v(" 元素：")])])]),s._v(" "),a("h3",{attrs:{id:"updatestock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#updatestock"}},[s._v("#")]),s._v(" updateStock")]),s._v(" "),a("p",[a("code",[s._v("updateStock(..)")]),s._v("，是三个函数里面最简单的：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("var stockTickerUI = {\n\n    // ..\n\n    updateStock(tickerElem,data) {\n        var getStockElemFromId = curry( getStockElem )( tickerElem );\n        var stockInfoChildElemList = pipe(\n            getStockElemFromId,\n            getStockInfoChildElems\n        )\n        ( data.id );\n\n        return stockTickerUI.updateStockElems(\n            stockInfoChildElemList,\n            data\n        );\n    },\n\n    // ..\n\n};\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])]),a("ol",[a("li",[s._v("柯里化之前的辅助函数 "),a("code",[s._v("getStockElem(..)")]),s._v("，传给它 tickerElem，得到了 "),a("code",[s._v("getStockElemFromId(..)")]),s._v(" 函数，这个函数接受 data.id 作为参数。")]),s._v(" "),a("li",[s._v("把 <li> 元素（其实是数组形式的）传入 "),a("code",[s._v("getStockInfoChildElems(..)")]),s._v("，我们得到了三个 "),a("span",[s._v(" 子元素，用来展示股票信息，我们把它们保存在 "),a("code",[s._v("stockInfoChildElemList")]),s._v(" 变量中。")])]),s._v(" "),a("li",[s._v("然后把数组和股票信息 data 对象一起传给 "),a("code",[s._v("stockTickerUI.updateStockElems(..)")]),s._v("，来更新 "),a("span",[s._v(" 中的数据。")])])]),s._v(" "),a("h3",{attrs:{id:"addstock"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#addstock"}},[s._v("#")]),s._v(" addStock")]),s._v(" "),a("p",[a("code",[s._v("addStock(..)")]),s._v("，会根据新的股票信息生成一个空的 DOM 结构，然后调用 "),a("code",[s._v("stockTickerUI.updateStockElems(..)")]),s._v(" 方法来更新其中的内容。")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('var stockTickerUI = {\n\n    // ..\n\n    addStock(tickerElem,data) {\n\n        // **释义1**\n        var [stockElem, ...infoChildElems] = map(\n            createElement\n        )\n        ( [ "li", "span", "span", "span" ] );\n\n        // **释义2**\n        var attrValTuples = [\n            [ ["class","stock"], ["data-stock-id",data.id] ],\n            [ ["class","stock-name"] ],\n            [ ["class","stock-price"] ],\n            [ ["class","stock-change"] ]\n        ];\n\n        // **释义3**\n        var elemsAttrsTuples =\n            zip( [stockElem, ...infoChildElems], attrValTuples );\n\n        // **释义4**\n        // 副作用！！\n        each( function setElemAttrs([elem,attrValTupleList]){\n            each(\n                spreadArgs( partial( setElemAttr, elem ) )\n            )\n            ( attrValTupleList );\n        } )\n        ( elemsAttrsTuples );\n\n        // **释义5**\n        // 副作用！！\n        stockTickerUI.updateStockElems( infoChildElems, data );\n        reduce( appendDOMChild )( stockElem )( infoChildElems );\n        tickerElem.appendChild( stockElem );\n    }\n\n};\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br")])]),a("p",[s._v("释义：")]),s._v(" "),a("ol",[a("li",[s._v("我们先创建 <li> 父元素和三个 <span> 子元素，把它们分别赋值给了 "),a("em",[s._v("stockElem")]),s._v(" 和 "),a("em",[s._v("infoChildElems")]),s._v(" 数组；")]),s._v(" "),a("li",[s._v("为了设置 DOM 元素的对应属性，我们声明了一个元组数组组成的数组。按照顺序，每个元组数组对应上面四个 DOM 元素中的一个。每个元组数组中的元组由对应元素的属性和值组成：")]),s._v(" "),a("li",[s._v("我们把四个 DOM 元素和 "),a("em",[s._v("attrValTuples")]),s._v(" 数组 "),a("code",[s._v("zip(..)")]),s._v(" 起来；")]),s._v(" "),a("li",[s._v("把属性和值设置到每个 DOM 元素上；")]),s._v(" "),a("li",[s._v("调用；")])]),s._v(" "),a("p",[s._v("实现结果是：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('[\n    [ <li>, [ ["class","stock"], ["data-stock-id",data.id] ] ],\n    [ <span>, [ ["class","stock-name"] ] ],\n    ..\n]\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[s._v("到此为止，我们有了 <span> 元素数组，每个元素上都有了该有的属性，但是还没有 innerHTML 的内容。这里，我们要用 "),a("code",[s._v("stockTickerUI.updateStockElems(..)")]),s._v(" 函数，把 data 设置到 <span> 上去，和股票信息更新事件的处理一样。")]),s._v(" "),a("h3",{attrs:{id:"小结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[s._v("#")]),s._v(" 小结")]),s._v(" "),a("p",[s._v("以上，我们模拟了股票数据操作场景下是如何进行函数式编程的！可能读起来有些晦涩，但是老话说的好："),a("strong",[s._v("书读百遍，其意自现。")]),s._v(" 看多了，看久了，也自然能感知一二！")]),s._v(" "),a("p",[s._v("如果你一直以来惯用命令式编程，可以设想下，在命令式编程中，它们会怎么去实现的？")]),s._v(" "),a("p",[s._v("其实，还有一个很重要的点，上面没写，即实现 "),a("strong",[s._v("observable")]),s._v(" 订阅功能，把事件传递给主函数。")]),s._v(" "),a("p",[s._v("所以，这里的范例更推荐去往项目"),a("a",{attrs:{href:"https://github.com/getify/Functional-Light-JS/tree/master/ch11-code",target:"_blank",rel:"noopener noreferrer"}},[s._v("【ch11-code】 "),a("OutboundLink")],1),s._v("整体阅读！")]),s._v(" "),a("p",[s._v("此篇示例更多的是把前篇概念联系起来，提供更真实的例子来学习。")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("在你豁然开朗以前一定要持续不断地练习！！")])])]),s._v(" "),a("h2",{attrs:{id:"函数库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#函数库"}},[s._v("#")]),s._v(" 函数库")]),s._v(" "),a("p",[s._v("至此，你应该已经明白：上面提到的辅助函数（高级函数）的确很厉害，"),a("strong",[s._v("但是我自己写不出来，怎么办呢？")])]),s._v(" "),a("p",[s._v("没关系，使用武器的人不需要知道武器是怎么生产出来的！")]),s._v(" "),a("p",[s._v("没错，"),a("strong",[s._v("我们先要学会使用这些函数式编程中强大的第三方武器库！")])]),s._v(" "),a("p",[s._v("然后再去谈，善用武器的人都应该知道武器原理 Balabala~")]),s._v(" "),a("p",[s._v("它们是：\n"),a("ul",[a("li",[a("a",{attrs:{href:"http://ramdajs.com",target:"_blank"}},[s._v("Ramda")]),s._v("：通用函数式编程实用函数")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/sanctuary-js/sanctuary",target:"_blank"}},[s._v("Sanctuary")]),s._v("：函数式编程类型 Ramda 伴侣")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/lodash/lodash/wiki/FP-Guide",target:"_blank"}},[s._v("lodash/fp")]),s._v("：通用函数式编程实用函数")]),s._v(" "),a("li",[a("a",{attrs:{href:"http://functionaljs.com/",target:"_blank"}},[s._v("functional.js")]),s._v("：通用函数式编程实用函数")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/facebook/immutable-js",target:"_blank"}},[s._v("Immutable")]),s._v("：不可变数据结构")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/swannodette/mori",target:"_blank"}},[s._v("Mori")]),s._v("：（受到 ClojureScript 启发）不可变数据结构")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/rtfeldman/seamless-immutable",target:"_blank"}},[s._v("Seamless-Immutable")]),s._v("：不可变数据助手")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/cognitect-labs/transducers-js",target:"_blank"}},[s._v("tranducers-js")]),s._v("：数据转换器")]),s._v(" "),a("li",[a("a",{attrs:{href:"https://github.com/cwmyers/monet.js",target:"_blank"}},[s._v("monet.js")]),s._v("：Monad 类型")])])]),s._v(" "),a("p",[s._v("更多关于 "),a("a",{attrs:{href:"https://zhuanlan.zhihu.com/p/56810671",target:"_blank",rel:"noopener noreferrer"}},[s._v("Monad"),a("OutboundLink")],1),s._v("，挖个坑，后面填。")]),s._v(" "),a("h2",{attrs:{id:"总结"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[s._v("#")]),s._v(" 总结")]),s._v(" "),a("p",[s._v("本阶段关于函数式编程已经说了这么多了~最后的最后，来点形而上学，高屋建瓴。")]),s._v(" "),a("blockquote",[a("p",[s._v("我不需要再为各位开发者想出更多崇高的理由来激励大家前行。感谢大家一起参与学习 JavaScript 中的函数式编程。期望你我充满希望！—— cognitect-lab")])]),s._v(" "),a("p",[a("strong",[s._v("当你在绝望和沮丧的低谷时，别停下来。前面等待你的是一种更好的思维方式！")])]),s._v(" "),a("p",[s._v("可以预见的是，本瓜后期还会多次针对 JS 的函数式编程进行更多探究和分享！")]),s._v(" "),a("p",[s._v("感谢阅读！")]),s._v(" "),a("p",[a("a",{attrs:{href:"https://imagelol.com/image/IWwVGS",target:"_blank",rel:"noopener noreferrer"}},[a("img",{attrs:{src:"https://s3.jpg.cm/2021/06/29/IWwVGS.md.png",alt:"IWwVGS.md.png"}}),a("OutboundLink")],1)]),s._v(" "),a("blockquote",[a("p",[s._v("掘金安东尼，输出暴露输入，技术洞见生活！再会~")])])])}),[],!1,null,null,null);n.default=e.exports}}]);