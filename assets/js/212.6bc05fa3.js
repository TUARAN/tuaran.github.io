(window.webpackJsonp=window.webpackJsonp||[]).push([[212],{706:function(a,s,t){"use strict";t.r(s);var e=t(2),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("持续创作，加速成长！这是我参与「掘金日新计划 · 6 月更文挑战」的第8天，"),t("a",{attrs:{href:"https://juejin.cn/post/7099702781094674468",title:"https://juejin.cn/post/7099702781094674468",target:"_blank",rel:"noopener noreferrer"}},[a._v("点击查看活动详情"),t("OutboundLink")],1)]),a._v(" "),t("hr"),a._v(" "),t("p",[a._v("什么是偏函数？")]),a._v(" "),t("p",[a._v("首先我们知道，这是一个函数：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("function ajax(url, data, callback) {\n  // ..\n}\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[a._v("这是另外一个函数：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("function ajaxTest1(data, callback) {\n  ajax('http://www.test.com/test1', data, callback);\n}\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br")])]),t("p",[t("code",[a._v("ajaxTest1")]),a._v(" 函数相比 "),t("code",[a._v("ajax")]),a._v(" 函数，少传了一个参数，它的 url 被固定到了 "),t("code",[a._v("ajaxTest1")]),a._v(" 的函数体内；")]),a._v(" "),t("p",[a._v("同理，我们还可以写出 "),t("code",[a._v("ajaxTest2、ajaxTest3、……、ajaxTestN")])]),a._v(" "),t("p",[a._v("如果我们直接写：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("function ajaxTest2(data, callback) {\n  ajax('http://www.test.com/test2', data, callback);\n}\n\nfunction ajaxTest3(data, callback) {\n  ajax('http://www.test.com/test3', data, callback);\n}\n\n......\n\nfunction ajaxTestN(data, callback) {\n  ajax('http://www.test.com/testN', data, callback);\n}\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br"),t("span",{staticClass:"line-number"},[a._v("7")]),t("br"),t("span",{staticClass:"line-number"},[a._v("8")]),t("br"),t("span",{staticClass:"line-number"},[a._v("9")]),t("br"),t("span",{staticClass:"line-number"},[a._v("10")]),t("br"),t("span",{staticClass:"line-number"},[a._v("11")]),t("br"),t("span",{staticClass:"line-number"},[a._v("12")]),t("br"),t("span",{staticClass:"line-number"},[a._v("13")]),t("br")])]),t("p",[a._v("这样有问题吗？")]),a._v(" "),t("p",[a._v("从“能用就行”的角度看，是可以的；如果是从“设计模式”的角度看，就不太 ok 了！")]),a._v(" "),t("p",[a._v("因为这样写，都没有复用到 ajax 函数呀 😂")]),a._v(" "),t("p",[a._v("基于这种背景，偏函数应用应用而生！")]),a._v(" "),t("p",[a._v("它做了什么？—— 用一个函数封装 ajax 函数，使得封装后的函数 "),t("strong",[a._v("能够先绑定部分参数，")]),a._v(" 这个封装后的函数就是偏函数；")]),a._v(" "),t("p",[a._v("比方说：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("let ajaxTest2 = partial(ajax,'http://www.test.com/test2')\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("我们用 "),t("code",[a._v("partial")]),a._v(" 函数封装了 "),t("code",[a._v("ajax")]),a._v(" 函数，然后先绑定了 url 为 'http://www.test.com/test2'\n，封装后的 "),t("code",[a._v("ajaxTest2")]),a._v(" 就是偏函数，是函数 "),t("code",[a._v("ajax")]),a._v(" 的偏函数；")]),a._v(" "),t("p",[a._v("调用方式不变：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("ajaxTest2(data,callback)\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("这样做的好处就是，我们复用了 ajax，并且封装后的偏函数，需要的传参更少了，这一点十分关键；老观众都知道：在函数式编程中我们提倡：函数的输入和输出，都尽量保持只有 1 个是最佳的。")]),a._v(" "),t("p",[a._v("那么，现在的问题就来了，"),t("code",[a._v("partial")]),a._v(" 这个用于封装的函数怎么实现的呢？？")]),a._v(" "),t("p",[a._v("和前面提到过的柯里化很像，"),t("code",[a._v("partial")]),a._v(" 的目的就是收集参数，然后传给回调函数，它是这样的：")]),a._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("function partial(fn, ...presetArgs) { // presetArgs 是需要先被绑定下来的参数\n  return function partiallyApplied(...laterArgs) { //  ...laterArgs 是后续参数\n        let allArgs =presetArgs.concat(laterArgs) // 收集到一起\n        return fn.apply(this, allArgs) // 传给回调函数 fn\n  }\n}\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("这就是基础的偏函数理解。")]),a._v(" "),t("p",[a._v("实际上，针对不同的削减参数的需求，偏函数有不同的写法；但是原理是不变的：")]),a._v(" "),t("p",[a._v("对原始函数二次封装，固定部分参数，返回回调函数，只需要传入更少的参数~~")]),a._v(" "),t("blockquote",[t("p",[a._v("OK，以上便是本篇分享。点赞关注评论，为好文助力👍")]),a._v(" "),t("p",[a._v("我是掘金安东尼 🤠 100 万阅读量人气前端技术博主 💥 INFP 写作人格坚持 1000 日更文 ✍ 陪你一起度过漫长岁月 🌏")])])])}),[],!1,null,null,null);s.default=n.exports}}]);