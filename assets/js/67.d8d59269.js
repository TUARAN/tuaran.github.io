(window.webpackJsonp=window.webpackJsonp||[]).push([[67],{565:function(s,n,e){"use strict";e.r(n);var a=e(2),t=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("本篇译自："),e("a",{attrs:{href:"https://levelup.gitconnected.com/top-5-javascript-es12-features-you-should-start-using-now-b16a8b5353b1",target:"_blank",rel:"noopener noreferrer"}},[s._v("levelup.gitconnected.com/top-5-javascript-es12-features-you-should-start-using-now"),e("OutboundLink")],1)]),s._v(" "),e("blockquote",[e("p",[s._v("什么叫“微卷不亏”？意思就是学习知识点，稍微卷一卷，也不会很累，也不会被其他人卷死，就稍微卷一卷，永远不亏，甚至小赚一波，唉，很舒服~~")])]),s._v(" "),e("p",[e("strong",[s._v("ES12 是今年 6 月 22 日发布的，你已经用起来了吗？")])]),s._v(" "),e("p",[e("strong",[s._v("留下 4 分钟，本篇带你快速过一遍 ES12 的 5 个要点！！")])]),s._v(" "),e("h2",{attrs:{id:"_1-数字分隔符"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-数字分隔符"}},[s._v("#")]),s._v(" 1. 数字分隔符")]),s._v(" "),e("p",[s._v("数字分隔符是数字之间添加的下划线，这使得数字更可读；当代码解析时，下划线会被自动去除；")]),s._v(" "),e("p",[s._v("举栗🌰")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 十进制数字，按照千位进行划分\nlet n1 = 1_000_000_000;\nconsole.log(n1); // This will print: 1000000000\n\n// 十进制数字，按照千位进行划分，带小数点\nlet n2 = 1_000_000_000.150_200\nconsole.log(n2); // This will print: 1000000000.1502\n\n// 十六进制数字，按照字节分组\nlet n3 = 0x95_65_98_FA_A9\nconsole.log(n3); // This will print: 641654651561\n\n// 大文字，按千位划分\nlet n4 = 155_326_458_156_248_168_514n\nconsole.log(n4); // This will print: 155326458156248168514n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br")])]),e("h2",{attrs:{id:"_2-replaceall"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-replaceall"}},[s._v("#")]),s._v(" 2. replaceAll")]),s._v(" "),e("p",[s._v("我们之前是 "),e("code",[s._v('"abca".repalce(/a/g,"a1")')]),s._v(" 这样写正则的方式实现替换全部，现在直接用 "),e("code",[s._v("replaceAll()")]),s._v(" 就可以了~")]),s._v(" "),e("p",[s._v("举栗🌰")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 声明一个字符串\nconst orgStr = 'JavaScript, often abbreviated as JS, is a programming language that conforms to the ECMAScript specification. JavaScript is high-level, often just-in-time compiled and multi-paradigm.';\n\n// 用 replace 替换第一个选中元素\nlet newStr = orgStr.replace('JavaScript', 'TypeScript');\nconsole.log(newStr);\n\n// 用 replaceAll 替换所有选中元素\nlet newStr2 = orgStr.replaceAll('JavaScript', 'TypeScript');\nconsole.log(newStr2);\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("h2",{attrs:{id:"_3-promise-any"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-promise-any"}},[s._v("#")]),s._v(" 3. Promise.any()")]),s._v(" "),e("p",[e("code",[s._v("Promise.any()")]),s._v(" 和 "),e("code",[s._v("Promise.all()")]),s._v(" 相对：")]),s._v(" "),e("p",[s._v("前者是执行的 Promise 数组中，只要有其中一个 Promise "),e("code",[s._v("resolve")]),s._v("（或全部 "),e("code",[s._v("reject")]),s._v("） 则会进入 "),e("code",[s._v(".then")]),s._v("（或 "),e("code",[s._v(".catch")]),s._v("）；")]),s._v(" "),e("p",[s._v("而后者是全部 Promise "),e("code",[s._v("resolve")]),s._v("（或有一个 "),e("code",[s._v("reject")]),s._v("），才会进入 "),e("code",[s._v(".then")]),s._v("（或 "),e("code",[s._v(".catch")]),s._v("）。")]),s._v(" "),e("p",[s._v("举栗🌰：任一 Promise resolve 即返回")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// 创建 promise1\nconst promise1 = new Promise((resolve, reject) => {\n    // 2 秒后 resolve\n    setTimeout(() => resolve("The first promise has been resolved."), 2000);\n});\n\n// 创建 promise2\nconst promise2 = new Promise((resolve, reject) => {\n    // 1 秒后 resolve\n    setTimeout(() => resolve("The second promise has been resolved."), 1000);\n});\n\n// 创建 promise3\nconst promise3 = new Promise((resolve, reject) => {\n    // 3 秒后 resolve\n    setTimeout(() => resolve("The third promise has been resolved."), 3000);\n});\n\n(async function () {\n    const data = await Promise.any([promise1, promise2, promise3]);\n    // 第一个 resolve 后，立即返回给 data\n    console.log(data);\n    // 打印信息: The second promise has been resolved.\n})();\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("p",[s._v("举栗🌰：全部 Promise reject 即返回")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// 创建 promise1\nconst promise1 = new Promise((resolve, reject) => {\n    // After 1 second reject the first promise.\n    setTimeout(() => reject("The first promise has been rejected."), 1000);\n});\n\n// 创建 promise2\nconst promise2 = new Promise((resolve, reject) => {\n    // After 500 miliseconds reject the second promise.\n    setTimeout(() => reject("The second promise has been rejected."), 500);\n});\n\n// 立即执行\n(async function () {\n    try {\n        const data = await Promise.any([promise1, promise2]);\n        console.log(data);\n    } catch (error) {\n        // 全部 Promise reject 则返回；\n        console.log("Error: ", error);\n        // 打印信息：Error:  AggregateError: All promises were rejected\n    }\n})();\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("h2",{attrs:{id:"_4-三个逻辑赋值"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-三个逻辑赋值"}},[s._v("#")]),s._v(" 4. 三个逻辑赋值")]),s._v(" "),e("p",[s._v("ES12 引入了 3 个新的逻辑赋值运算符：")]),s._v(" "),e("ul",[e("li",[e("code",[s._v("||=")]),s._v(" 逻辑或赋值，等同于："),e("code",[s._v("a || (a = b)")])]),s._v(" "),e("li",[e("code",[s._v("&&=")]),s._v(" 逻辑与赋值，等同于："),e("code",[s._v("a && (a = b)")])]),s._v(" "),e("li",[e("code",[s._v("??=")]),s._v(" 逻辑合并赋值，等同于："),e("code",[s._v("a ?? (a = b)")])])]),s._v(" "),e("p",[s._v("举栗🌰："),e("code",[s._v("||=")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 当 ||= 左侧的值是 false，则更改赋值为等号后的值\nlet myPlaylist = {songsCount: 0, songs:[]};\nmyPlaylist.songsCount ||= 100;\nconsole.log(myPlaylist); // This will print: {songsCount: 100, songs: Array(0)}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("举栗🌰："),e("code",[s._v("&&=")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 当 &&= 左侧的值是 true，则更改赋值为等号后的值\nlet myFiles = {filesCount: 100, files:[]};\nmyFiles.filesCount &&= 5;\nconsole.log(myFiles); // This will print: {filesCount: 5, files: Array(0)}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("举栗🌰："),e("code",[s._v("??=")])]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// 当 ??= 左侧的值是 null or undefined，则更改赋值为等号后的值\nlet userDetails = {firstname: 'Katina', age: 24}\nuserDetails.lastname ??= 'Dawson';\nconsole.log(userDetails); // This will print: {firstname: 'Katina', age: 24, lastname: 'Dawson'}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("h2",{attrs:{id:"_5-私有类方法-属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-私有类方法-属性"}},[s._v("#")]),s._v(" 5. 私有类方法/属性")]),s._v(" "),e("p",[s._v("Class 默认情况下类方法和属性都是公共的，在 ES12 中可以用 "),e("code",[s._v("#")]),s._v(" 加一个前缀符号创建私有的方法和属性；")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// 创建 User 类\nclass User {\n    constructor() {}\n\n    // 加 # 井号设为私有方法\n    #generateAPIKey() {\n        return "d8cf946093107898cb64963ab34be6b7e22662179a8ea48ca5603f8216748767";\n    }\n\n    getAPIKey() {\n        // 调用私有方法\n        return this.#generateAPIKey();\n    }\n}\n\nconst user = new User();\nconst userAPIKey = user.getAPIKey();\nconsole.log(userAPIKey); // This will print: d8cf946093107898cb64963ab34be6b7e22662179a8ea48ca5603f8216748767\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br")])]),e("p",[s._v("同时，类里面也可以设置私有的 "),e("code",[s._v("Getter")]),s._v(" 和 "),e("code",[s._v("Setter")]),s._v("；")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('// 创建 Str 类\nclass Str {\n    // 设置私有属性\n    #uniqueStr;\n\n    constructor() {}\n\n    // 私有 Setter\n    set #generateUniqueStringByCustomLength(length = 24) {\n        const characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";\n        let randomStr = "";\n\n        for (let i = 0; i < length; i++) {\n            const randomNum = Math.floor(Math.random() * characters.length);\n            randomStr += characters[randomNum];\n        }\n\n        this.#uniqueStr = randomStr;\n    }\n\n    // 公共 Setter\n    set setRandomString(length) {\n        this.#generateUniqueStringByCustomLength = length;\n    }\n\n    // 私有 Getter\n    get #fetchUniqueString() {\n        return this.#uniqueStr;\n    }\n\n    // 公共 Getter\n    get getRandomString() {\n        return this.#fetchUniqueString;\n    }\n}\n\nconst str = new Str();\n// 调用公共 Setter，然后访问私有 Setter\nstr.setRandomString = 20;\n\n// 调用公共 Getter，然后访问私有 Getter\nconst uniqueStr = str.getRandomString;\nconsole.log(uniqueStr); // 每次在 Setter 之后执行 Getter ，将打印一个随机字符串\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br"),e("span",{staticClass:"line-number"},[s._v("26")]),e("br"),e("span",{staticClass:"line-number"},[s._v("27")]),e("br"),e("span",{staticClass:"line-number"},[s._v("28")]),e("br"),e("span",{staticClass:"line-number"},[s._v("29")]),e("br"),e("span",{staticClass:"line-number"},[s._v("30")]),e("br"),e("span",{staticClass:"line-number"},[s._v("31")]),e("br"),e("span",{staticClass:"line-number"},[s._v("32")]),e("br"),e("span",{staticClass:"line-number"},[s._v("33")]),e("br"),e("span",{staticClass:"line-number"},[s._v("34")]),e("br"),e("span",{staticClass:"line-number"},[s._v("35")]),e("br"),e("span",{staticClass:"line-number"},[s._v("36")]),e("br"),e("span",{staticClass:"line-number"},[s._v("37")]),e("br"),e("span",{staticClass:"line-number"},[s._v("38")]),e("br"),e("span",{staticClass:"line-number"},[s._v("39")]),e("br"),e("span",{staticClass:"line-number"},[s._v("40")]),e("br"),e("span",{staticClass:"line-number"},[s._v("41")]),e("br"),e("span",{staticClass:"line-number"},[s._v("42")]),e("br"),e("span",{staticClass:"line-number"},[s._v("43")]),e("br")])]),e("hr"),s._v(" "),e("p",[s._v("OK，以上便是本篇分享，周末愉快O(∩_∩)O，我是掘金安东尼，公众号同名，日拱一卒、日掘一金，再会~~")])])}),[],!1,null,null,null);n.default=t.exports}}]);