(window.webpackJsonp=window.webpackJsonp||[]).push([[204],{718:function(n,s,a){"use strict";a.r(s);var r=a(2),e=Object(r.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("持续创作，加速成长！这是我参与「掘金日新计划 · 6 月更文挑战」的第7天，"),a("a",{attrs:{href:"https://juejin.cn/post/7099702781094674468",title:"https://juejin.cn/post/7099702781094674468",target:"_blank",rel:"noopener noreferrer"}},[n._v("点击查看活动详情"),a("OutboundLink")],1)]),n._v(" "),a("hr"),n._v(" "),a("p",[n._v("在前面一篇文章《"),a("strong",[a("a",{attrs:{href:"https://juejin.cn/post/7101094150518341639",target:"_blank",rel:"noopener noreferrer"}},[n._v("为什么我要说：柯里化 == 闭包+递归？"),a("OutboundLink")],1)]),n._v(" 》中，我们提到：")]),n._v(" "),a("p",[n._v("柯里化可以通过闭包+递归实现")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("let arr = []\nfunction addCurry() {\n   let arg = Array.prototype.slice.call(arguments); // 收集参数\n   arr = arr.concat(arg);\n    if (arg.length === 0) { // 如果参数为空，则判断递归结束\n        return arr.reduce((a,b)=>{return a+b}) // 求和\n    } else {\n        return addCurry;\n    }\n}\n\naddCurry(1)(2)(3)() // 6\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("p",[n._v("这样写，没什么毛病，通过："),a("code",[n._v("Array.prototype.slice.call(arguments)")]),n._v(" 收集了参数，推到 "),a("code",[n._v("arr")]),n._v(" 数组里；当存在参数时，递归调用，当没有参数的时候，再用 "),a("code",[n._v("reduce()")]),n._v(" 求和，返回；")]),n._v(" "),a("p",[n._v("但是这样写，会有外部变量 arr，arr 不清理的话，会被一直保存，导致连续调用出错：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("addCurry(1)(2)(3)() // 6\naddCurry(1)() // 7\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br")])]),a("p",[n._v("所以，需要改写成这样：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function addCurry() {\n    let arr = [...arguments]\n    let fn = function () {\n        if(arguments.length === 0) {\n\t    return arr.reduce((a, b) => a + b)\n        } else {\n            arr.push(...arguments)\n            return fn\n        }\n    }\n    return fn\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br")])]),a("p",[n._v("把 arr 再加一层封装到函数里，每次调用，都会重新声明，原值会被清理；")]),n._v(" "),a("p",[n._v("之前相加的思路仍然不变；")]),n._v(" "),a("p",[n._v("但这样做，还有一个问题：总是需要用空括号 () 为结尾，来判断结束调用；")]),n._v(" "),a("p",[n._v("能不能去掉这个，直接如下这样就能求值：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("addCurry(1)(2)(3)\n\n//或\n\naddCurry(1)(2,3)\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("答案是可以的，原理是用到 "),a("code",[n._v("toString")]),n._v(" ，当用 Function 的值做计算的时候，会调用 toString 做隐式转换；")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("let fn = function(){}\n\nfn.toString = () => 1\n\nfn == 1 // true\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("所以，我们的代码更新为：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("function addCurry() {\n\n    let arr = [...arguments]\n\n    // 利用闭包的特性收集所有参数值\n    var fn = function() {\n        arr.push(...arguments);\n        return fn;\n    };\n\n    // 利用 toString 隐式转换\n    fn.toString = function () {\n        return arr.reduce(function (a, b) {\n            return a + b;\n        });\n    }\n    return fn;\n}\n\naddCurry(1)(2)(3) == 6 // true\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br")])]),a("p",[n._v("这里一定要注意，直接打印 addCurry(1)(2)(3) 是不能拿值的，只有当它做隐式转化的时候，才能计算得正确得值。")]),n._v(" "),a("p",[a("strong",[n._v("小结：")])]),n._v(" "),a("p",[n._v("其实不管是用空括号 () 作“开始执行reduce相加”的判断依据，还是用 toString 的隐式转换做依据，总是要有一个标准，来告诉柯里化函数：你可以执行了！")]),n._v(" "),a("p",[n._v("柯里化精髓是参数收集，是延迟执行！")]),n._v(" "),a("p",[n._v("延迟就是 JS 函数闭包的精髓设计！！")]),n._v(" "),a("blockquote",[a("p",[n._v("OK，以上便是本篇分享。点赞关注评论，为好文助力👍")]),n._v(" "),a("p",[n._v("我是掘金安东尼 🤠 100 万阅读量人气前端技术博主 💥 INFP 写作人格坚持 1000 日更文 ✍ 陪你一起度过漫长岁月 🌏")])])])}),[],!1,null,null,null);s.default=e.exports}}]);