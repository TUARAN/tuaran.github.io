(window.webpackJsonp=window.webpackJsonp||[]).push([[250],{744:function(a,t,s){"use strict";s.r(t);var e=s(2),n=Object(e.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("p",[a._v("携手创作，共同成长！这是我参与「掘金日新计划 · 8 月更文挑战」的第26天，"),s("a",{attrs:{href:"https://juejin.cn/post/7123120819437322247",title:"https://juejin.cn/post/7123120819437322247",target:"_blank",rel:"noopener noreferrer"}},[a._v("点击查看活动详情"),s("OutboundLink")],1)]),a._v(" "),s("hr"),a._v(" "),s("h2",{attrs:{id:"编译器同样重要"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译器同样重要"}},[a._v("#")]),a._v(" 编译器同样重要")]),a._v(" "),s("p",[a._v("如果说计算机网络、操作系统、数据结构这些是编程必学基础，我能理解，现在连编译器原理都是必备基础了吗？是的，我们太习惯于从高级语言学起了，反而忘了C、C++、Java 这些高级语言是如何一层一层解析直至被计算机读懂的。正本清源，我们对编译器的认知，应该提到和操作系统、数据库、浏览器、编程语言、算法这些编程基础技能同一水平。")]),a._v(" "),s("p",[a._v("计算机很笨，只能认识 0 和 1，而人呢，脑子的存储能力又非常有限，很难记住大量无规律的东西。在这两者之间就需要一个“翻译官”，让人与计算机能“沟通”，它的名字是“语言处理器”。语言处理器由三部分组成，分别是：编译器、汇编器、解释器。其中编译器是离高级语言最近的一个部分。")]),a._v(" "),s("blockquote",[s("p",[a._v("编译器是处理完整程序并将源代码转换为可由计算机处理器执行的机器代码的程序。")])]),a._v(" "),s("p",[a._v("说白了，编译器本质上就是一个程序，它可以阅读以某一种语言（通常是源语言）编写的程序，并把该程序翻译成为一个等价的、用另一种语言（目标语言）编写的程序。编译器还有一个很重要的任务就是报告他在翻译的过程中发现的源程序中的错误。")]),a._v(" "),s("p",[a._v("对于很多程序员而言，编译器就是一个黑匣子，当你打开这个黑匣子的时候，会发现它由两部分组成，分别是："),s("strong",[a._v("前端（分析）部分和后端（综合）部分")]),a._v("。")]),a._v(" "),s("p",[a._v("前端部分的工作主要包括：词法分析、语法分析、语义检查、生成中间代码。这个过程相对于后端，相对简单一点，之所以简单的原因是它所有操作都有了成型的理论支撑。")]),a._v(" "),s("p",[a._v("后端部分的主要工作内容：对中间代码优化，生成目标机器语言，以及对目标语言优化。")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/77c7f409494b4b5b942ff6d4b2964222~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),s("p",[a._v("（图片来源："),s("a",{attrs:{href:"https://max.book118.com/html/2018/0906/5140224010001313.shtm",target:"_blank",rel:"noopener noreferrer"}},[a._v("Introduction to deep learning"),s("OutboundLink")],1),a._v("）")]),a._v(" "),s("h2",{attrs:{id:"编译器前端"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编译器前端"}},[a._v("#")]),a._v(" 编译器前端")]),a._v(" "),s("p",[a._v("下面简要说明一下编译器前端部分的几个处理环节。")]),a._v(" "),s("h3",{attrs:{id:"_1-词法分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-词法分析"}},[a._v("#")]),a._v(" （1）词法分析")]),a._v(" "),s("p",[a._v("词法分析是由编译器中的词法分析器来执行的。这通常也被称为Lexer（词法分析器）或者说scanner（扫描器）。")]),a._v(" "),s("p",[a._v("程序源码将作为一个文本流来输入到词法分析器中。词法分析器将源程序的各个单词（比如 begin、end、if、for、while 等）转换成词法单元流并输出到语法分析器中。")]),a._v(" "),s("p",[a._v("编译时词法分析器同时会创建一个符号表，符号表在编译过程的所有阶段都会被频繁的访问和修改。符号表包含了程序员在源代码中使用的名称的信息，例如变量和函数名。")]),a._v(" "),s("h3",{attrs:{id:"_2-语法分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-语法分析"}},[a._v("#")]),a._v(" （2）语法分析")]),a._v(" "),s("p",[a._v("语法分析则是由语法分析器来执行，通常也叫parser（语法分析器）。语法分析器从词法分析器输出的 token 序列中识别出各类短语，从而构造语法分析树(syntax tree)，并判断源程序在结构上是否正确。")]),a._v(" "),s("p",[a._v("比方说源代码："),s("code",[a._v("position = initial + rate * 60")]),a._v(" 构建出来的语法分析树是这样的：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5ada1c7e9bf04c1fb83366a44b958d56~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),a._v(" "),s("h3",{attrs:{id:"_3-语义检查"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_3-语义检查"}},[a._v("#")]),a._v(" （3）语义检查")]),a._v(" "),s("p",[a._v("语义分析使用语法树和符号表中的信息来检查源程序是否和语言定义的语义一致。它同时也收集标识符的属性信息，并把这些信息存放在语法树或符号表中，以便在后面中间代码生成过程中使用。")]),a._v(" "),s("p",[a._v("语义分析的一个重要部分是类型检查。编译器检查每个运算符是否具有匹配的运算分量，比如数组的下标要求必须是一个整数，如果用浮点数作为数组下标，编译器就应该报错。")]),a._v(" "),s("h3",{attrs:{id:"_4-生成中间代码"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_4-生成中间代码"}},[a._v("#")]),a._v(" （4）生成中间代码")]),a._v(" "),s("p",[a._v("编译器的处理过程是从源程序到语法树，再到中间代码，再到目标代码，期间可能构造出一个或多个中间表示，且这些中间表示可以有多种形式。一种常见的中间代码是三地址码，也可以通过四元式、三元式或间接三元式的方式表示。")]),a._v(" "),s("ul",[s("li",[a._v("认识三址码")])]),a._v(" "),s("p",[a._v("对于三位址码，每一条赋值指令的右侧只能有一个操作符，总共最多有三个地址（等号右侧只能有一个操作符，比如t1=y+z,这里t1，y,z都是地址，它们指向了地址对应的内存数据）")]),a._v(" "),s("p",[a._v("比如高级语言代码：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("x = (y + z)*w\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("会转换成：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("t1 = y + z\nt2 = w * t1\nx = t2\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("HR",[s("p",[a._v("现在比较流行的一种编译器框架是 LLVM，我们可以大致看看编译前后的代码变化，感受一二。")]),a._v(" "),s("p",[a._v("编译前：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("   int a = 10;\n   int b = 11;\n   return a + b;\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br")])]),s("p",[a._v("编译后：")]),a._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[a._v("  %a = alloca i32, align 4\n  %b = alloca i32, align 4\n  store i32 0, i32* %retval, align 4\n  store i32 10, i32* %a, align 4\n  store i32 11, i32* %b, align 4\n  %0 = load i32, i32* %a, align 4\n  %1 = load i32, i32* %b, align 4\n  %add = add nsw i32 %0, %1\n  ret i32 %add\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br"),s("span",{staticClass:"line-number"},[a._v("9")]),s("br")])]),s("p",[a._v("小结：在本篇编译器原理前端部分浅析中，有一些关键字，比如语法分析树、符号表、三地址码，这些还能拓展很多，后面有机会再做深入⑧")]),a._v(" "),s("hr"),a._v(" "),s("blockquote",[s("p",[a._v("OK，以上便是本篇分享。点赞关注评论，为好文助力👍")]),a._v(" "),s("p",[a._v("我是掘金安东尼 🤠 100 万人气前端技术博主 💥 INFP 写作人格坚持 1000 日更文 ✍ 关注我，安东尼陪你一起度过漫长编程岁月 🌏")])])])],1)}),[],!1,null,null,null);t.default=n.exports}}]);