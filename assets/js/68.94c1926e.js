(window.webpackJsonp=window.webpackJsonp||[]).push([[68],{564:function(s,e,n){"use strict";n.r(e);var t=n(2),a=Object(t.a)({},(function(){var s=this,e=s.$createElement,n=s._self._c||e;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("p",[s._v("本篇译自："),n("a",{attrs:{href:"https://javascript.plainenglish.io/how-to-make-your-js-fetch-not-look-so-ugly-f45c89f8bc3a",target:"_blank",rel:"noopener noreferrer"}},[s._v("javascript.plainenglish.io/how-to-make-your-js-fetch-not-look-so-ugly"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("上一篇介绍了啥叫“微卷不亏”，今天继续简单微卷一些小知识点：本篇带来《如何优化 Fetch 函数写法》，轻松拿下~")]),s._v(" "),n("p",[s._v("冲！")]),s._v(" "),n("hr"),s._v(" "),n("p",[s._v("常规 Fetch 是这样写的：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("fetch('http://example.com/movies.json')\n  .then(response => response.json())\n  .then(data => console.log(data));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("第一个 "),n("code",[s._v(".then")]),s._v(" 里面是一个匿名函数，将返回转换为 json 格式；")]),s._v(" "),n("p",[s._v("这样写，不那么可读，且不够 DRY（Don't repeat yourself）~ 因为匿名函数并没有告诉你函数功能，并且每次 Fetch 都要转换数据为 json 的话，为什么不抽出一个可被复用的函数？")]),s._v(" "),n("p",[s._v("事实上，我们总是需要对从后端拿回的数据进行处理的，所以将处理过程进行封装也是有必要的~")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function getResponse(response)\n{ return response.json() }\n\n\nfetch('http://example.com/movies.json')\n  .then(getResponse)\n  .then(data => console.log(data));\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[s._v("以，同样的道理，将第二个 "),n("code",[s._v(".then")]),s._v(" 内部的匿名函数进行封装：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function processJSON(json)\n{\n  for(let i = 0; i < json.length; i++)\n  {\n    console.log(json[i])\n  }\n}\n\nfetch('http://example.com/movies.json')\n  .then(getResponse)\n  .then(processJSON);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("p",[s._v("Wow! 现在 fetch 函数看起来清晰多了！fetch => 处理响应 => 处理 JSON 数据；语义化的代码，所见即所是！")]),s._v(" "),n("p",[s._v("PS：其实，这个思想和函数式编程也是一致的，减少使用匿名函数，将处理过程用函数封装，封装函数的函数名都是有具体含义的，让它们来处理数据流，这才是正真可读的代码~")]),s._v(" "),n("p",[s._v("上述代码，处理还能更进一步：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("const moviesPath = 'http://example.com/movies.json'\n\nfetch(moviesPath)\n  .then(getResponse)\n  .then(processJSON); \n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br")])]),n("p",[s._v("这就是 Fetch 函数清爽干净的样子！")]),s._v(" "),n("p",[s._v("再举个栗子🌰")]),s._v(" "),n("ul",[n("li",[s._v("POST 写法")])]),s._v(" "),n("p",[s._v("// 优化前")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("fetch('https://example.com/profile', {\n  method: 'POST', // or 'PUT'\n  headers: {\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify(data),\n})\n.then(response => response.json())\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("// 优化后")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function writeServer(action, data={})\n{ return { method: action, headers: { 'Content-Type': 'application/json' }, body: JSON.stringify(data) } }\n\n\nfetch(moviesPath, writeServer(\"POST\", newMovie))\n  .then(getResponse)\n  .then(processJSON);\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("p",[n("strong",[s._v("这就是 DRY！这就是声明式代码！这就是更可读的代码！")])]),s._v(" "),n("p",[n("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/3124025c174e41cbade1bd6517c034f9~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),s._v(" "),n("p",[s._v("看到这里，我们也知道了，这种优化思路（封装、声明式、数据流）不仅仅限于 Fetch 函数中，其它数据处理的过程都可以应用~ 从细节着手！")]),s._v(" "),n("p",[s._v("OK，以上便是本篇分享；撰文不易，点赞鼓励👍👍👍")]),s._v(" "),n("blockquote",[n("p",[s._v("我是掘金安东尼，公众号同名，日拱一卒、日掘一金，再会~~")])])])}),[],!1,null,null,null);e.default=a.exports}}]);