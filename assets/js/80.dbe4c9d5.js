(window.webpackJsonp=window.webpackJsonp||[]).push([[80],{578:function(t,_,v){"use strict";v.r(_);var e=v(2),r=Object(e.a)({},(function(){var t=this,_=t.$createElement,v=t._self._c||_;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("p",[t._v("不知道前端小伙伴们都了解“红黑树”吗？本瓜，之前听是听过，但是它到底是干嘛的，并不十分清楚。在认识了平衡二叉树、AVL 树之后，现在已经来到了这个节点，必须来看下“红黑树”了！")]),t._v(" "),v("p",[t._v("今天也不是植树节，却依旧要来种树！🌳🌳🌳")]),t._v(" "),v("p",[t._v("闲言少叙，冲！(ง •_•)ง")]),t._v(" "),v("p",[v("a",{attrs:{href:"https://juejin.cn/column/7026262697683451917",target:"_blank",rel:"noopener noreferrer"}},[t._v("算法专栏"),v("OutboundLink")],1),t._v(" 关于树的文章传送门：")]),t._v(" "),v("ul",[v("li",[v("a",{attrs:{href:"https://juejin.cn/post/7035089797664210952",target:"_blank",rel:"noopener noreferrer"}},[t._v("《日拱算法之判断平衡二叉树》"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.cn/post/7034656546441297951",target:"_blank",rel:"noopener noreferrer"}},[t._v("《AVL 树旋转及 JS 实现，平衡树支棱起来~》"),v("OutboundLink")],1)]),t._v(" "),v("li",[v("a",{attrs:{href:"https://juejin.cn/post/7034323334611353630",target:"_blank",rel:"noopener noreferrer"}},[t._v("《大小堆解决【数据流中位数】问题，nice 图解~》"),v("OutboundLink")],1)])]),t._v(" "),v("hr"),t._v(" "),v("p",[t._v("先来看下"),v("strong",[t._v("二叉查找树")]),t._v("是为什么而诞生的！")]),t._v(" "),v("p",[t._v("我们都知道：数组适合查询这种静态操作(O(1))，不合适删除与插入这种动态操作(O(n)),而链表则是适合删除与插入，而查询效率则就比较慢了；")]),t._v(" "),v("p",[t._v("二叉查找树就是为了"),v("strong",[t._v("平衡这种静态操作（数组）与动态操作（链表）的差距")]),t._v("而诞生的~")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/332d9e10108943bf846d982bf8bb6552~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),v("p",[t._v("特性：")]),t._v(" "),v("ul",[v("li",[t._v("任意节点左子树不为空,则左子树的值均小于根节点的值；")]),t._v(" "),v("li",[t._v("任意节点右子树不为空,则右子树的值均大于于根节点的值；")]),t._v(" "),v("li",[t._v("任意节点的左右子树也分别是二叉查找树；")]),t._v(" "),v("li",[t._v("没有键值相等的节点；")])]),t._v(" "),v("p",[t._v("为了避免如下图极端情况出现：")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/cae6cbc37e88477ea8143dc2d18fe31e~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),v("p",[t._v("二叉查找树必须“平衡”，以防止单边层数过深；")]),t._v(" "),v("p",[t._v("于是就诞生了 "),v("strong",[t._v("AVL 树")]),t._v("（平衡二叉树）！")]),t._v(" "),v("p",[t._v("实践复杂度被提升到 O(log2"),v("sup",[t._v("n")]),t._v(")；")]),t._v(" "),v("p",[t._v("AVL树是带有平衡条件的二叉查找树，左右子树树高不超过1，它是严格的平衡二叉树；")]),t._v(" "),v("p",[t._v("不管我们是执行插入还是删除操作，只要不满足上面的条件，就要通过旋转来保持平衡，而 "),v("strong",[t._v("旋转是非常耗时的")]),t._v("；")]),t._v(" "),v("p",[t._v("由此我们可以知道AVL树适合用于插入删除次数比较少，但查找多的情况。")]),t._v(" "),v("p",[t._v("为了权衡“平衡”和“旋转耗时”这两个特性，于是 "),v("strong",[t._v("“红黑树”")]),t._v(" 诞生了！！")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/637db34b0fb14ddb834f3fa2945ac662~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),v("p",[t._v("红黑树是一种"),v("strong",[t._v("弱平衡二叉树")]),t._v("！通过对任何一条从根到叶子的路径上各个节点着色的方式的限制确保：没有一条路径会比其它路径长出两倍；")]),t._v(" "),v("p",[t._v("相对于要求严格的AVL树来说,它的旋转次数变少；与之对应的，旋转带来的耗时也更小；")]),t._v(" "),v("p",[t._v("红黑树有很广泛的应用：")]),t._v(" "),v("ul",[v("li",[t._v("C++的STL中,map和set都是用红黑树实现的；")]),t._v(" "),v("li",[t._v("著名的linux进程调度Completely Fair Scheduler,用红黑树管理进程控制块,进程的虚拟内存区域都存储在一颗红黑树上,每个虚拟地址区域都对应红黑树的一个节点,左指针指向相邻的地址虚拟存储区域,右指针指向相邻的高地址虚拟地址空间；")]),t._v(" "),v("li",[t._v("IO多路复用epoll的实现采用红黑树组织管理sockfd，以支持快速的增删改查；")]),t._v(" "),v("li",[t._v("ngnix中,用红黑树管理timer,因为红黑树是有序的,可以很快的得到距离当前最小的定时器.")]),t._v(" "),v("li",[t._v("java中TreeMap的实现；")])]),t._v(" "),v("p",[t._v("红黑是用非严格的平衡来换取增删节点时候旋转次数的降低，任何不平衡都会在三次旋转之内解决~~")]),t._v(" "),v("p",[t._v("欲了解更多，推荐阅读 "),v("a",{attrs:{href:"https://www.zhihu.com/question/19856999",target:"_blank",rel:"noopener noreferrer"}},[t._v("b乎上的回答"),v("OutboundLink")],1),t._v("：")]),t._v(" "),v("p",[v("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/582beb008a8d457aa3d107f03524f6ad~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),t._v(" "),v("hr"),t._v(" "),v("p",[t._v("OK，本篇仅分享红黑树诞生的渊源、以及一些概念上的东西，后续带来在 JS 中的实现等等；")]),t._v(" "),v("p",[t._v("其实，空间换时间的概念在很多地方都可以见到，函数式编程更耗费内存，也是空间换时间；神奇~~")])])}),[],!1,null,null,null);_.default=r.exports}}]);