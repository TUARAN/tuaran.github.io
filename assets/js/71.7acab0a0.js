(window.webpackJsonp=window.webpackJsonp||[]).push([[71],{566:function(s,n,e){"use strict";e.r(n);var a=e(2),r=Object(a.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("本篇译自："),e("a",{attrs:{href:"https://blog.bitsrc.io/5-common-mistakes-in-using-promises-bfcc4d62657f",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://blog.bitsrc.io/5-common-mistakes-in-using-promises"),e("OutboundLink")],1)]),s._v(" "),e("p",[e("strong",[s._v("本瓜一直觉得 Promise 就是咱 JS 人的浪漫，没错，Promise　天天见，但或许越熟悉越陌生，我们在一直用的过程中会形成一些定式，这导致难免会漏掉一些定式以外的要点；")])]),s._v(" "),e("p",[e("strong",[s._v("本篇带来　Promise 5 个避免，以供自查！！")])]),s._v(" "),e("h2",{attrs:{id:"_1-避免回调地狱"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-避免回调地狱"}},[s._v("#")]),s._v(" 1. 避免回调地狱")]),s._v(" "),e("p",[s._v("啥？Promise 就是来解决回调地狱的，如果还写成这个样子，那一切还有什么意义？")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("userLogin('user').then(function(user){\n    getArticle(user).then(function(articles){\n        showArticle(articles).then(function(){\n            //Your code goes here...\n        });\n    });\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("p",[s._v("正确写法如下：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("userLogin('user')\n  .then(getArticle)\n  .then(showArticle)\n  .then(function(){\n       //Your code goes here...\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br")])]),e("p",[s._v("当然，如果处理函数包含异步过程，记得是返回 Promise 对象：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("new Promise(function(resolve, reject) {\n\n  setTimeout(() => resolve(1), 1000);\n\n}).then(function(result) {\n\n  alert(result); // 1\n\n  return new Promise((resolve, reject) => { // (*)\n    setTimeout(() => resolve(result * 2), 1000);\n  });\n\n}).then(function(result) { // (**)\n\n  alert(result); // 2\n\n  return new Promise((resolve, reject) => {\n    setTimeout(() => resolve(result * 2), 1000);\n  });\n\n}).then(function(result) {\n\n  alert(result); // 4\n\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br"),e("span",{staticClass:"line-number"},[s._v("25")]),e("br")])]),e("h2",{attrs:{id:"_2-避免-promise-中-try-catch"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-避免-promise-中-try-catch"}},[s._v("#")]),s._v(" 2. 避免 Promise 中 try catch")]),s._v(" "),e("p",[s._v("在 Promise 中使用 "),e("code",[s._v("try...catch...")]),s._v("，如果出现错误将不会走到 "),e("code",[s._v("Promise.catch()")]),s._v("，所以，要避免在 Promise 中 try catch；")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("new Promise((resolve, reject) => {\n  try {\n    const data = doThis();\n    // do something\n    resolve();\n  } catch (e) {\n    reject(e);\n  }\n})\n  .then(data => console.log(data))\n  .catch(error => console.log(error));\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br")])]),e("p",[s._v("Promise 本身可以在没有 try/catch 块的情况下捕获其范围内的所有错误（甚至是错别字）：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("new Promise((resolve, reject) => {\n  const data = doThis();\n  // do something\n  resolve()\n})\n  .then(data => console.log(data))\n  .catch(error => console.log(error));\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br")])]),e("h2",{attrs:{id:"_3-避免错误使用-async-await"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-避免错误使用-async-await"}},[s._v("#")]),s._v(" 3. 避免错误使用 async await")]),s._v(" "),e("p",[s._v("Async/Await 是一种更高级的语法，用于处理同步代码中的多个 Promise。当我们在函数声明之前使用 async 关键字时，它会返回一个 Promise，我们可以使用 await 关键字来停止代码，直到正在等待的 Promise 得以解决或拒绝；")]),s._v(" "),e("p",[s._v("但是将 Async 函数放入 Promise 中，它会产生一些副作用！")]),s._v(" "),e("p",[s._v("比如以下代码将不会捕捉到错误：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("// This code can't handle the error\nnew Promise(async () => {\n  throw new Error('message');\n}).catch(e => console.log(e.message));\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("正确写法：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v(" \n(async () => {\n  try {\n    await new Promise(async () => {\n      throw new Error('message');\n    });\n  } catch (e) {\n    console.log(e.message);\n  }\n})();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("在某些情况下，可能需要在 Promise 中实现 "),e("code",[s._v("async")]),s._v("，此时，只能使用 try/catch 手动管理它：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("new Promise(async (resolve, reject) => {\n  try {\n    throw new Error('message');\n  } catch (error) {\n    reject(error);\n  }\n}).catch(e => console.log(e.message));\n\n\n//using async/await\n(async () => {\n  try {\n    await new Promise(async (resolve, reject) => {\n      try {\n        throw new Error('message');\n      } catch (error) {\n        reject(error);\n      }\n    });\n  } catch (e) {\n    console.log(e.message);\n  }\n})();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br")])]),e("h2",{attrs:{id:"_4-避免声明即运行"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-避免声明即运行"}},[s._v("#")]),s._v(" 4. 避免声明即运行")]),s._v(" "),e("p",[s._v("当我们写出以下代码，内部请求将会立即执行；")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const myPromise = new Promise(resolve => {\n  // code to make HTTP request\n  resolve(result);\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("但是我们的期望是，调起它的时候才执行，所以我们在外部封装一层函数；")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const createMyPromise = () => new Promise(resolve => {\n  // HTTP request\n  resolve(result);\n});\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br")])]),e("p",[s._v("这样做的好处就是，当用它的时候，它才执行，而不是我声明它的时候，就执行了~")]),s._v(" "),e("p",[s._v("将 Promise 惰性处理✔ 没错，又是函数式编程中惰性求值的思想！！")]),s._v(" "),e("h2",{attrs:{id:"_5-避免遗漏使用-promise-all"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-避免遗漏使用-promise-all"}},[s._v("#")]),s._v(" 5. 避免遗漏使用 Promise.all()")]),s._v(" "),e("p",[s._v("没使用 "),e("code",[s._v("Promise.all()")]),s._v(" 是这样的：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("const { promisify } = require('util');\nconst sleep = promisify(setTimeout);\n\nasync function f1() {\n  await sleep(1000);\n}\n\nasync function f2() {\n  await sleep(2000);\n}\n\nasync function f3() {\n  await sleep(3000);\n}\n\n(async () => {\n  console.time('sequential');\n  await f1();\n  await f2();\n  await f3();\n  console.timeEnd('sequential');  \n})();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br")])]),e("p",[s._v("使用  "),e("code",[s._v("Promise.all()")]),s._v(" 是这样的：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("(async () => {\n    console.time('concurrent');\n    await Promise.all([f1(), f2(), f3()]);\n    console.timeEnd('concurrent'); \n  })();\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("高下立见！Promise 提供的衍生的一些 API 就是拿来用的（Promise.all、Promise.race、Promise.finally 等待），该用就用，别客气~")]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("OK，以上就是本篇分享啦~")]),s._v(" "),e("p",[s._v("撰文不易，点赞鼓励👍👍👍👍👍👍")]),s._v(" "),e("blockquote",[e("p",[s._v("我是掘金安东尼，公众号同名，日拱一卒、日掘一金，再会~")])])])}),[],!1,null,null,null);n.default=r.exports}}]);