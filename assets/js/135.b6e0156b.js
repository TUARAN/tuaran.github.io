(window.webpackJsonp=window.webpackJsonp||[]).push([[135],{632:function(n,e,s){"use strict";s.r(e);var a=s(2),t=Object(a.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("blockquote",[s("p",[n._v("首发在我的博客 "),s("a",{attrs:{href:"https://tuaran.github.io/views/2021/vue3vdom.html",target:"_blank",rel:"noopener noreferrer"}},[n._v("深入 Vue3 虚拟 DOM"),s("OutboundLink")],1)]),n._v(" "),s("p",[n._v("译自："),s("a",{attrs:{href:"https://medium.com/js-dojo/diving-into-the-vue-3s-virtual-dom-a6b4744032ec",target:"_blank",rel:"noopener noreferrer"}},[n._v("diving-into-the-vue-3s-virtual-dom-medium"),s("OutboundLink")],1)]),n._v(" "),s("p",[n._v("作者："),s("a",{attrs:{href:"https://medium.com/@lachlanmiller_52885",target:"_blank",rel:"noopener noreferrer"}},[n._v("Lachlan Miller"),s("OutboundLink")],1)])]),n._v(" "),s("h2",{attrs:{id:"序言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#序言"}},[n._v("#")]),n._v(" 序言")]),n._v(" "),s("p",[n._v("此篇我们将深入 Vue3 虚拟 DOM，以及了解它是如何遍历找到对应 vnode 的。")]),n._v(" "),s("p",[n._v("多数情况下我们不需要考虑 Vue 组件内部是如何构成的。但有一些库会帮助我们理解，比如 Vue Test Utils 的 "),s("strong",[n._v("findComponent 函数")]),n._v("。还有一个我们都应该很熟悉的 Vue 开发工具 —— Vue DevTools，它显示了应用的组件层次结构，并且我们可以对它进行编辑操作等。")]),n._v(" "),s("p",[s("img",{attrs:{src:"/assets/img/2021/vue3dom/vuedevtool.png",alt:""}})]),n._v(" "),s("p",[n._v("我们本篇要做的是：实现 Vue Test Utils API 的一部分，即 "),s("code",[n._v("findComponent")]),n._v(" 函数。")]),n._v(" "),s("h2",{attrs:{id:"设计-findcomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设计-findcomponent"}},[n._v("#")]),n._v(" 设计 findComponent")]),n._v(" "),s("p",[n._v("首先，我们都知道"),s("strong",[n._v("虚拟 DOM")]),n._v(" 是基于“提升性能”提出的，当数据发生变化时，Vue 会判断此是否需要进行更新、或进行表达式的计算、或进行最终的 DOM 更新。")]),n._v(" "),s("p",[n._v("比如这样：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("- div \n  - span (show: true) \n    - 'Visible'\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[n._v("它的内部层次关系是：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("HTMLDivElement -> HTMLSpanElement -> TextNode\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("如果 "),s("code",[n._v("show")]),n._v(" 属性变成 "),s("code",[n._v("false")]),n._v("。Vue 虚拟 DOM 会进行如下更新：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("- div \n  - span (show: false) \n    - 'Visible'\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[n._v("接着，Vue 会更新 DOM，移除"),s("code",[n._v("'span'")]),n._v(" 元素。")]),n._v(" "),s("p",[n._v("那么，我们设想一下，"),s("code",[n._v("findComponent")]),n._v(" 函数，它的调用可能会是类似这样的结构：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("const { createApp } = require('vue')\n\nconst App = {\n  template: `\n    <C>\n      <B>\n        <A />\n      </B>\n    </C>\n  `\n}\n\nconst app = createApp(App).mount('#app')\n\nconst component = findComponent(A, { within: app })\n\n// 我们通过 findComponent 方法找到了 <A/> 标签。\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br")])]),s("h2",{attrs:{id:"打印-findcomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#打印-findcomponent"}},[n._v("#")]),n._v(" 打印 findComponent")]),n._v(" "),s("p",[n._v("接着，我们先写几个简单组件，如下：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("// import jsdom-global. We need a global `document` for this to work.\nrequire('jsdom-global')()\nconst { createApp, h } = require('vue')\n\n// some components\nconst A = { \n  name: 'A',\n  data() {\n    return { msg: 'msg' }\n  },\n  render() {\n    return h('div', 'A')\n  }\n}\n\nconst B = { \n  name: 'B',\n  render() {\n    return h('span', h(A))\n  }\n}\n\nconst C = { \n  name: 'C',\n  data() {\n    return { foo: 'bar' }\n  },\n  render() {\n    return h('p', { id: 'a', foo: this.foo }, h(B))\n  }\n}\n\n// mount the app!\nconst app = createApp(C).mount(document.createElement('div'))\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br"),s("span",{staticClass:"line-number"},[n._v("22")]),s("br"),s("span",{staticClass:"line-number"},[n._v("23")]),s("br"),s("span",{staticClass:"line-number"},[n._v("24")]),s("br"),s("span",{staticClass:"line-number"},[n._v("25")]),s("br"),s("span",{staticClass:"line-number"},[n._v("26")]),s("br"),s("span",{staticClass:"line-number"},[n._v("27")]),s("br"),s("span",{staticClass:"line-number"},[n._v("28")]),s("br"),s("span",{staticClass:"line-number"},[n._v("29")]),s("br"),s("span",{staticClass:"line-number"},[n._v("30")]),s("br"),s("span",{staticClass:"line-number"},[n._v("31")]),s("br"),s("span",{staticClass:"line-number"},[n._v("32")]),s("br"),s("span",{staticClass:"line-number"},[n._v("33")]),s("br"),s("span",{staticClass:"line-number"},[n._v("34")]),s("br")])]),s("ul",[s("li",[n._v("我们需要在 Node.js v14+ 环境，因为我们要用到 "),s("a",{attrs:{href:"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Optional_chaining",target:"_blank",rel:"noopener noreferrer"}},[n._v("可选链"),s("OutboundLink")],1),n._v("。且需要安装 Vue、jsdom 和 jsdom-global。")])]),n._v(" "),s("p",[n._v("我们可以看到 A , B , C 三个组件，其中 A , C 组件有 data 属性，它会帮助我们深入研究 VDOM。")]),n._v(" "),s("p",[n._v("你可以打印试试：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log(app)\nconsole.log(Object.keys(app))\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br")])]),s("p",[n._v("结果为 "),s("code",[n._v("{}")]),n._v("，因为 "),s("code",[n._v("Object.keys")]),n._v(" 只会显示可枚举的属性。")]),n._v(" "),s("p",[n._v("我们可以尝试打印"),s("strong",[n._v("隐藏的不可枚举的属性")]),n._v("：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log(app.$)\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("可以得到大量输出信息：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("<ref *1> { \n  uid: 0, \n  vnode: {\n    __v_isVNode: true, \n    __v_skip: true, \n    type: { \n      name: 'C', \n      data: [Function: data], \n      render: [Function: render], \n      __props: [] \n  }, // hundreds of lines ...\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br")])]),s("p",[n._v("再打印：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log(Object.keys(app.$))\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("输出：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("Press ENTER or type command to continue \n[ \n'uid', 'vnode', 'type', 'parent', 'appContext', 'root', 'next', 'subTree', 'update', 'render', 'proxy', 'withProxy', 'effects', 'provides', 'accessCache', 'renderCache', 'ctx', 'data', 'props', 'attrs', 'slots', 'refs', 'setupState', 'setupContext', 'suspense', 'asyncDep', 'asyncResolved', 'isMounted', 'isUnmounted', 'isDeactivated', 'bc', 'c', 'bm', 'm', 'bu', 'u', 'um', 'bum', 'da', 'a', 'rtg', 'rtc', 'ec', 'emit', 'emitted' \n]\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("我们可以看到一些很熟悉的属性：比如 "),s("code",[n._v("slots")]),n._v("、"),s("code",[n._v("data")]),n._v("，"),s("code",[n._v("suspense")]),n._v(" 是一个新特性，"),s("code",[n._v("emit")]),n._v(" 无需多言。还有比如 "),s("code",[n._v("attrs")]),n._v("、"),s("code",[n._v("bc")]),n._v("、 "),s("code",[n._v("c")]),n._v("、"),s("code",[n._v("bm")]),n._v(" 这些是生命周期钩子："),s("code",[n._v("bc")]),n._v(" 是 "),s("code",[n._v("beforeCreate")]),n._v(", "),s("code",[n._v("c")]),n._v(" 是 "),s("code",[n._v("created")]),n._v("。也有一些内部唯一的生命周期钩子，如 "),s("code",[n._v("rtg")]),n._v("，也就是 "),s("code",[n._v("renderTriggered")]),n._v(", 当 "),s("code",[n._v("props")]),n._v(" 或 "),s("code",[n._v("data")]),n._v(" 发生变化时，用于更新操作，从而再渲染。")]),n._v(" "),s("blockquote",[s("p",[n._v("本篇我们需要特别关注的是："),s("code",[n._v("vnode")]),n._v("、"),s("code",[n._v("subTree")]),n._v("、"),s("code",[n._v("component")]),n._v("、"),s("code",[n._v("type")]),n._v(" 和 "),s("code",[n._v("children")]),n._v("。")])]),n._v(" "),s("h2",{attrs:{id:"匹配-findcomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#匹配-findcomponent"}},[n._v("#")]),n._v(" 匹配 findComponent")]),n._v(" "),s("p",[n._v("来先看 "),s("code",[n._v("vnode")]),n._v("，它有很多属性，我们需要关注的是 "),s("code",[n._v("type")]),n._v(" 和 "),s("code",[n._v("component")]),n._v(" 这两个。")]),n._v(" "),s("p",[n._v("// 打印 console.log(app.$.vnode.component)")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log(app.$.vnode.component) \n<ref *1> { \n  uid: 0, \n  vnode: { \n    __v_isVNode: true, \n    __v_skip: true, \n    type: { \n      name: 'C', \n      data: [Function: data], \n      render: [Function: render], \n      __props: [] \n  }, // ... many more things ... } }\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br")])]),s("p",[s("code",[n._v("type")]),n._v(" 很有意思！它与我们之前定义的 "),s("code",[n._v("C")]),n._v(" 组件一样，我们可以看到它也有 "),s("code",[n._v("[Function: data]")]),n._v("（我们在前面定义了一个 "),s("code",[n._v("msg")]),n._v(" 数据是我们的查找目标）。实际上我们尝试可以作以下打印：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log(C === app.$.vnode.component.type) //=> true\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("天呐！二者竟然是相等的！😮")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log(C === app.$.vnode.type) //=> true\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br")])]),s("p",[n._v("这样也是相等的！😮")]),n._v(" "),s("p",[n._v("（你是否会疑问这两个属性为什么会指向同一个对象？这里先暂且按下不表、自行探索。）")]),n._v(" "),s("p",[n._v("无论如何，我们算是得到了寻找到组件的途径。")]),n._v(" "),s("p",[n._v("通过这里的找寻过程，我们还能再进一步得到以下相等关系：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("console.log( \n  app.$\n  .subTree.children[0].component\n  .subTree.children[0].component.type === A) //=> true\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("在本例中，"),s("code",[n._v("div")]),n._v(" 节点的 "),s("code",[n._v("subTree.children")]),n._v(" 数组长度是 2 。我们知道了虚拟 DOM 的递归机制，就可以沿着这个方向："),s("code",[n._v("subTree -> children -> component")]),n._v(" 来给出我们的递归解决方案。")]),n._v(" "),s("h2",{attrs:{id:"实现-findcomponent"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现-findcomponent"}},[n._v("#")]),n._v(" 实现 findComponent")]),n._v(" "),s("p",[n._v("我们首先实现 "),s("code",[n._v("matches")]),n._v(" 函数，用于判断是当前 vnode 节点和目标是否相等。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function matches(vnode, target) { \n  return vnode?.type === target\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[n._v("然后是 "),s("code",[n._v("findComponent")]),n._v(" 函数，它是我们调用并查找内部递归函数的公共 API。")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function findComponent(comp, { within }) { \n  const result = find([within.$], comp) \n  if (result) { \n    return result \n  } \n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])]),s("p",[s("strong",[n._v("此处的 "),s("code",[n._v("find")]),n._v(" 方法的实现是我们要重点讨论的")]),n._v("。")]),n._v(" "),s("p",[n._v("我们知道写递归，最重要的是判断什么时候结束 loop，所以 find 函数应该先是这样的：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function find(vnodes, target) { \n  if (!Array.isArray(vnodes)) { \n    return \n  } \n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br")])]),s("p",[n._v("然后，在遍历 vnode 时，如果找到匹配的组件，则将其返回。如果找不到匹配的组件，则可能需要检查 vnode.subTree.children 是否已定义，从而更深层次的查询及匹配。最后，如果都没有，我们则返回累加器 acc。所以，代码如下：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function find(vnodes, target) {\n  if (!Array.isArray(vnodes)) {\n    return \n  }\n\n  return vnodes.reduce((acc, vnode) => {\n    if (matches(vnode, target)) {\n      return vnode\n    }\n\n    if (vnode?.subTree?.children) {\n      return find(vnode.subTree.children, target)\n    }\n\n    return acc\n  }, {})\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br")])]),s("p",[n._v("如果你在 "),s("code",[n._v("if (vnode?.subTree?.children) {")]),n._v(" 这里进行一个打印 "),s("code",[n._v("console.log")]),n._v("，你能找到 "),s("code",[n._v("B")]),n._v(" 组件，但是我们的目标 "),s("code",[n._v("A")]),n._v(" 组件的路径如下：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("app.$ \n  .subTree.children[0].component \n  .subTree.children[0].component.type === A) //=> true\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[n._v("所以我们再次调用了 "),s("code",[n._v("find")]),n._v(" 方法："),s("code",[n._v("find(vnode.subTree.children, target)")]),n._v("，在下一次迭代中查找的第一个参数将是"),s("code",[n._v("app.$.subTree.children")]),n._v("，它是 vnode 的数组。我们不仅需要检查"),s("code",[n._v("vnode.subTree.children")]),n._v("，还需要检查"),s("code",[n._v("vnode.component.subTree")]),n._v("。")]),n._v(" "),s("p",[n._v("所以，最后 find 方法如下：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("function find(vnodes, target) {\n  if (!Array.isArray(vnodes)) {\n    return \n  }\n\n  return vnodes.reduce((acc, vnode) => {\n    if (matches(vnode, target)) {\n      return vnode\n    }\n\n    if (vnode?.subTree?.children) {\n      return find(vnode.subTree.children, target)\n    }\n\n    if (vnode?.component?.subTree) {\n      return find(vnode.component.subTree.children, target)\n    }\n\n    return acc\n  }, {})\n}\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br"),s("span",{staticClass:"line-number"},[n._v("18")]),s("br"),s("span",{staticClass:"line-number"},[n._v("19")]),s("br"),s("span",{staticClass:"line-number"},[n._v("20")]),s("br"),s("span",{staticClass:"line-number"},[n._v("21")]),s("br")])]),s("p",[n._v("然后我们再调用它：")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("const result = findComponent(A, { within: app })\n\nconsole.log( result.component.proxy.msg ) // => 'msg'\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br")])]),s("p",[n._v("我们成功了！通过 "),s("code",[n._v("findComponent")]),n._v("，找到了 "),s("code",[n._v("msg")]),n._v("!")]),n._v(" "),s("p",[n._v("如果你以前使用过 Vue Test Utils，可能见过类似的东西 "),s("code",[n._v("wrapper.vm.msg")]),n._v("，它实际上是在内部访问 "),s("code",[n._v("proxy")]),n._v("（对于Vue 3）或 "),s("code",[n._v("vm")]),n._v("（对于Vue 2）。")]),n._v(" "),s("h2",{attrs:{id:"小结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#小结"}},[n._v("#")]),n._v(" 小结")]),n._v(" "),s("p",[n._v("本篇的实现并非完美，现实实现上还需要执行更多检查。例如，如果使用 "),s("code",[n._v("template")]),n._v("或 "),s("code",[n._v("Suspense")]),n._v("组件时，需要作更多判断。不过这些你可以在 Vue Test Utils "),s("a",{attrs:{href:"https://github.com/vuejs/vue-test-utils-next/blob/master/src/utils/find.ts",target:"_blank",rel:"noopener noreferrer"}},[n._v("源码"),s("OutboundLink")],1),n._v(" 中可以看到，希望能帮助你进一步理解虚拟 DOM。")]),n._v(" "),s("p",[n._v("本篇 "),s("a",{attrs:{href:"https://github.com/lmiller1990/vdom-traverse-article",target:"_blank",rel:"noopener noreferrer"}},[n._v("源码地址"),s("OutboundLink")],1),n._v("，小手一动、一下就懂~")]),n._v(" "),s("p",[n._v("好啦，以上就是本次分享~")]),n._v(" "),s("p",[n._v("如果喜欢，点赞关注👍👍👍~我是掘金安东尼，关注公众号【掘金安东尼】，持续输出ing！")])])}),[],!1,null,null,null);e.default=t.exports}}]);