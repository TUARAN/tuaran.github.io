(window.webpackJsonp=window.webpackJsonp||[]).push([[165],{657:function(n,s,a){"use strict";a.r(s);var e=a(2),t=Object(e.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("p",[n._v("「这是我参与2022首次更文挑战的第15天，活动详情查看："),a("a",{attrs:{href:"https://juejin.cn/post/7052884569032392740",target:"_blank",rel:"noopener noreferrer"}},[n._v("2022首次更文挑战"),a("OutboundLink")],1),n._v("」\n")]),a("hr"),a("p"),n._v(" "),a("p",[a("strong",[n._v("题：")])]),n._v(" "),a("p",[n._v("存在一个不含 0 的 环形 数组 nums ，每个 nums[i] 都表示位于下标 i 的角色应该向前或向后移动的下标个数：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("如果 nums[i] 是正数，向前（下标递增方向）移动 |nums[i]| 步")])]),n._v(" "),a("li",[a("p",[n._v("如果 nums[i] 是负数，向后（下标递减方向）移动 |nums[i]| 步")])])]),n._v(" "),a("p",[n._v("因为数组是 环形 的，所以可以假设从最后一个元素向前移动一步会到达第一个元素，而第一个元素向后移动一步会到达最后一个元素。")]),n._v(" "),a("p",[n._v("数组中的 循环 由长度为 k 的下标序列 seq 标识：")]),n._v(" "),a("ul",[a("li",[a("p",[n._v("遵循上述移动规则将导致一组重复下标序列 seq[0] -> seq[1] -> ... -> seq[k - 1] -> seq[0] -> ...")])]),n._v(" "),a("li",[a("p",[n._v("所有 nums[seq[j]] 应当不是 全正 就是 全负")])]),n._v(" "),a("li",[a("p",[n._v("k > 1")])])]),n._v(" "),a("p",[n._v("如果 nums 中存在循环，返回 true ；否则，返回 false 。")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("示例 1：\n\n输入：nums = [2,-1,1,2,2]\n输出：true\n解释：存在循环，按下标 0 -> 2 -> 3 -> 0 。循环长度为 3 。\n\n示例 2：\n\n输入：nums = [-1,2]\n输出：false\n解释：按下标 1 -> 1 -> 1 ... 的运动无法构成循环，因为循环的长度为 1 。根据定义，循环的长度必须大于 1 。\n\n示例 3:\n\n输入：nums = [-2,1,-1,-2,-2]\n输出：false\n解释：按下标 1 -> 2 -> 1 -> ... 的运动无法构成循环，因为 nums[1] 是正数，而 nums[2] 是负数。\n所有 nums[seq[j]] 应当不是全正就是全负。\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br")])]),a("p",[n._v("注：")]),n._v(" "),a("ul",[a("li",[n._v("1 <= nums.length <= 5000")]),n._v(" "),a("li",[n._v("-1000 <= nums[i] <= 1000")]),n._v(" "),a("li",[n._v("nums[i] != 0")])]),n._v(" "),a("p",[a("strong",[n._v("解题思路：")])]),n._v(" "),a("p",[n._v("今天的题目意思比较难懂，不懂题目的朋友可以看一下本节的题意分析。")]),n._v(" "),a("p",[n._v("首先，要理解题目中的「环形数组」是什么。「环形数组」就是在逻辑上首尾相接的数组，即最后一个元素和第一个元素在逻辑上是相邻的（在物理存储上仍然是个普通的数组）。")]),n._v(" "),a("p",[n._v("那么环形数组中存在循环是什么意思呢？这就是说，在环形数组中，每个位置存储的元素表示当前位置应该向前/向后移动的步数。如果在环形数组中绕了一圈又回到了原地，那么说明数组中存在循环。")]),n._v(" "),a("p",[n._v("举个例子，在环形数组 [2, -1, 1, 2, 2] 中，存在循环，同时，题目约定了循环的条件：所有 "),a("code",[n._v("nums[seq[j]]")]),n._v(" 应当不是 "),a("strong",[n._v("全正")]),n._v(" 就是 "),a("strong",[n._v("全负")]),n._v("，即只能沿着一个方向走；"),a("code",[n._v("k > 1")]),n._v("，即要求环的大小 > 1。")]),n._v(" "),a("p",[n._v("做过「判断链表中是否有环」题目的知道，这两题的思路是一致的，常见的思路就是快慢指针，在链表问题中，快指针每次走 2 步，慢指针每次走 1 步。当快慢指针相遇的时候，说明存在环。")]),n._v(" "),a("p",[n._v("在每次循环的过程中，必须保证所经历过的所有数字都是同号的。")]),n._v(" "),a("p",[n._v("那么，在快指针经历过的每个位置都要判断一下和出发点的数字是不是相同的符号。")]),n._v(" "),a("p",[n._v("当快慢指针相遇的时候，还要判断环的大小不是 1。")]),n._v(" "),a("p",[n._v("所以，找到相遇点的位置后，如果再走 1 步，判断是不是自己。")]),n._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://leetcode-cn.com/problems/circular-array-loop/solution/fu-xue-ming-zhu-dong-hua-ti-jie-kuai-man-ju4g/",target:"_blank",rel:"noopener noreferrer"}},[n._v("来源"),a("OutboundLink")],1)])]),n._v(" "),a("p",[a("strong",[n._v("JavaScript 实现：")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("var circularArrayLoop = function(nums) {\n    const n = nums.length;\n    for (let i = 0; i < n; i++) {\n        if (nums[i] === 0) {\n            continue;\n        }\n        let slow = i, fast = next(nums, i);\n        // 判断非零且方向相同\n        while (nums[slow] * nums[fast] > 0 && nums[slow] * nums[next(nums, fast)] > 0) {\n            if (slow === fast) {\n                if (slow !== next(nums, slow)) {\n                    return true;\n                } else {\n                    break;\n                }\n            }\n            slow = next(nums, slow);\n            fast = next(nums, next(nums, fast));\n        }\n        let add = i;\n        while (nums[add] * nums[next(nums, add)] > 0) {\n            const tmp = add;\n            add = next(nums, add);\n            nums[tmp] = 0;\n        }\n    }\n    return false;\n}\n\nconst next = (nums, cur) => {\n    const n = nums.length;\n    return ((cur + nums[cur]) % n + n) % n; // 保证返回值在 [0,n) 中\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br"),a("span",{staticClass:"line-number"},[n._v("24")]),a("br"),a("span",{staticClass:"line-number"},[n._v("25")]),a("br"),a("span",{staticClass:"line-number"},[n._v("26")]),a("br"),a("span",{staticClass:"line-number"},[n._v("27")]),a("br"),a("span",{staticClass:"line-number"},[n._v("28")]),a("br"),a("span",{staticClass:"line-number"},[n._v("29")]),a("br"),a("span",{staticClass:"line-number"},[n._v("30")]),a("br"),a("span",{staticClass:"line-number"},[n._v("31")]),a("br"),a("span",{staticClass:"line-number"},[n._v("32")]),a("br"),a("span",{staticClass:"line-number"},[n._v("33")]),a("br")])]),a("blockquote",[a("p",[n._v("我是掘金安东尼，输出暴露输入，技术洞见生活，再会~")])])])}),[],!1,null,null,null);s.default=t.exports}}]);