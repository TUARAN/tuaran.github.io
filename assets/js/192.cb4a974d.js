(window.webpackJsonp=window.webpackJsonp||[]).push([[192],{687:function(n,e,s){"use strict";s.r(e);var t=s(2),a=Object(t.a)({},(function(){var n=this,e=n.$createElement,s=n._self._c||e;return s("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[s("p",[n._v("一起养成写作习惯！这是我参与「掘金日新计划 · 4 月更文挑战」的第3天，"),s("a",{attrs:{href:"https://juejin.cn/post/7080800226365145118",title:"https://juejin.cn/post/7080800226365145118",target:"_blank",rel:"noopener noreferrer"}},[n._v("点击查看活动详情"),s("OutboundLink")],1),n._v("。")]),n._v(" "),s("hr"),n._v(" "),s("p",[n._v("清明假期第 1 天，日日新更文继续 ^_^")]),n._v(" "),s("p",[n._v("天气正好，树木繁茂，不如来道二叉树的 —— "),s("a",{attrs:{href:"https://leetcode-cn.com/problems/binary-tree-pruning/",target:"_blank",rel:"noopener noreferrer"}},[n._v("二叉树剪枝"),s("OutboundLink")],1),n._v(" 题~🐶")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/6d6bc79d226d4f69b219d69815ec8bc2~tplv-k3u1fbpfcp-watermark.image?",alt:"18a0d46f5c8a41acee068890f05f854.jpg"}})]),n._v(" "),s("p",[n._v("题：")]),n._v(" "),s("p",[n._v("给你二叉树的根结点 root ，此外树的每个结点的值要么是 0 ，要么是 1 。")]),n._v(" "),s("p",[n._v("返回移除了所有不包含 1 的子树的原二叉树。")]),n._v(" "),s("p",[n._v("节点 node 的子树为 node 本身加上所有 node 的后代。")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://p3-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/d1c9361878a2416d82ea824813904f20~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("示例 1：\n\n输入：root = [1,null,0,0,1]\n输出：[1,null,0,null,1]\n解释：\n只有红色节点满足条件“所有不包含 1 的子树”。 右图为返回的答案。\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/aeeb9dc3c3e24243b94b64288e914186~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("示例 2：\n\n输入：root = [1,0,1,0,0,0,1]\n输出：[1,null,1,null,1]\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://p1-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/b14f97e10ac2472e978d65ec282a55ec~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("示例 3：\n\n输入：root = [1,1,0,1,1,0,1,0]\n输出：[1,1,0,1,1,null,1]\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br")])]),s("p",[n._v("【解题思路】")]),n._v(" "),s("p",[n._v("题目要求剪除二叉树中所有节点的值为 0 的子树，那么怎么知道当前二叉树所有节点的值为0，使用后序遍历无疑了；\n递归只需要考虑当前节点需要做什么事情，当前节点能否被剪枝取决于左右子树及当前节点的值；")]),n._v(" "),s("p",[n._v("这道题的难点在于要一直剪枝，直到没有值为 0 的叶子节点为止，只有从后序遍历位置自底向上处理才能获得最高的效率。")]),n._v(" "),s("p",[n._v("【JS 实现】")]),n._v(" "),s("div",{staticClass:"language- line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[n._v("/**\n * @param {TreeNode} root\n * @return {TreeNode}\n */\nvar pruneTree = function(root) {\n  // 判断非空情况\n  if (root == null) {\n    return root;\n  }\n  root.left = pruneTree(root.left);\n  root.right = pruneTree(root.right);\n  // 当左右节点都为空且当前节点的值为0的情况下，即可剪枝\n  if (!root.left && !root.right && root.val == 0) {\n    return null;\n  }\n  return root;\n};\n")])]),n._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[n._v("1")]),s("br"),s("span",{staticClass:"line-number"},[n._v("2")]),s("br"),s("span",{staticClass:"line-number"},[n._v("3")]),s("br"),s("span",{staticClass:"line-number"},[n._v("4")]),s("br"),s("span",{staticClass:"line-number"},[n._v("5")]),s("br"),s("span",{staticClass:"line-number"},[n._v("6")]),s("br"),s("span",{staticClass:"line-number"},[n._v("7")]),s("br"),s("span",{staticClass:"line-number"},[n._v("8")]),s("br"),s("span",{staticClass:"line-number"},[n._v("9")]),s("br"),s("span",{staticClass:"line-number"},[n._v("10")]),s("br"),s("span",{staticClass:"line-number"},[n._v("11")]),s("br"),s("span",{staticClass:"line-number"},[n._v("12")]),s("br"),s("span",{staticClass:"line-number"},[n._v("13")]),s("br"),s("span",{staticClass:"line-number"},[n._v("14")]),s("br"),s("span",{staticClass:"line-number"},[n._v("15")]),s("br"),s("span",{staticClass:"line-number"},[n._v("16")]),s("br"),s("span",{staticClass:"line-number"},[n._v("17")]),s("br")])]),s("p",[n._v("【验证】")]),n._v(" "),s("p",[s("img",{attrs:{src:"https://p6-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/687235b8b8074c01b28fb6caf2f73f4a~tplv-k3u1fbpfcp-watermark.image?",alt:"image.png"}})]),n._v(" "),s("hr"),n._v(" "),s("p",[n._v("后序遍历+递归，简单实现，赞👍")])])}),[],!1,null,null,null);e.default=a.exports}}]);