(window.webpackJsonp=window.webpackJsonp||[]).push([[241],{738:function(n,s,e){"use strict";e.r(s);var a=e(2),t=Object(a.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("携手创作，共同成长！这是我参与「掘金日新计划 · 8 月更文挑战」的第18天，"),e("a",{attrs:{href:"https://juejin.cn/post/7123120819437322247",title:"https://juejin.cn/post/7123120819437322247",target:"_blank",rel:"noopener noreferrer"}},[n._v("点击查看活动详情"),e("OutboundLink")],1)]),n._v(" "),e("hr"),n._v(" "),e("p",[n._v("降低阅读负担，启发创作心智，轻松学习 JavaScript 技巧，日拱一卒，jym，冲~")]),n._v(" "),e("p",[e("img",{attrs:{src:"https://p9-juejin.byteimg.com/tos-cn-i-k3u1fbpfcp/5baeb2f877364de68cd24b2c62fdca1f~tplv-k3u1fbpfcp-watermark.image?",alt:"take-it-easy-relax.gif"}})]),n._v(" "),e("p",[e("strong",[n._v("本篇带来 Thunk 理解，这也是本瓜最津津乐道的 JS 函数式编程中延迟处理的思想核心之一！")])]),n._v(" "),e("hr"),n._v(" "),e("p",[n._v("什么是 Thunk ？")]),n._v(" "),e("p",[n._v("简单理解：在计算机编程中，Thunk 就是一种实现延迟执行的手段。")]),n._v(" "),e("p",[n._v("举个栗子🌰🌰🌰")]),n._v(" "),e("p",[n._v("我要计算 99 的 9 次方，然后再把它打印出来，你会怎么写？")]),n._v(" "),e("p",[n._v("大聪明肯定是直接一句话：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("console.log(Math.pow(99, 9)) // 913517247483640800\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br")])]),e("p",[n._v("有点想法的同学肯定想封装一个函数，因为后续还可能要 88 的 8 次方、77 的 7 次方等等：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const power = (base, exponent) => {\n  return Math.pow(base, exponent);\n};\n\nconsole.log(power(99, 9)); // 913517247483640800\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("p",[n._v("如果还有更多想法，可能会考虑：")]),n._v(" "),e("p",[n._v("今天你让我 console 打印结果，明天如果让我 alert 弹窗提醒结果怎么办？后天又让我  handleXXX 处理结果，又该怎么办？")]),n._v(" "),e("p",[n._v("所以，这里可以设计一个（可自定义的）回调函数来处理这个运算结果：")]),n._v(" "),e("p",[n._v("于是代码演进为：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const power = (base, exponent,callback) => {\n  return callback(Math.pow(base, exponent))\n};\n\nconst powerThunk = (callback) => {\n  return function () {\n    power(99, 9, callback);\n  };\n};\n\nconst calculatePower = powerThunk((result) => console.log(result));\n\ncalculatePower(); // 913517247483640800\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br")])]),e("p",[n._v("在这个例子中，调用"),e("code",[n._v("powerThunk()")]),n._v(" 并不会马上执行 "),e("code",[n._v("power()")]),n._v(" 运算，这就是所谓的延迟执行。")]),n._v(" "),e("p",[n._v("并且 "),e("code",[n._v("powerThunk()")]),n._v(" 只用再传一个回调函数进去就行了，不用再传 base 99 和 exponent 9 这两个参数了。")]),n._v(" "),e("p",[n._v("在某种意义上来讲，thunk 也是一个已经固定某些参数的一个函数，上例中 power 要传 3 个参数，而 powerThunk 只用传一个参数就行了。这感觉就有点像柯里化。")]),n._v(" "),e("p",[n._v("可能有同学问了：")]),n._v(" "),e("blockquote",[e("p",[n._v("“我就喜欢直接修改，不喜欢封装，行吗？”")])]),n._v(" "),e("blockquote",[e("p",[n._v("“行呀，咋不行，即使自己不做封装，你也在无时无刻地用这种封装。Promise 就是基于 Thunk。”")])]),n._v(" "),e("p",[n._v("继续上面的例子讲：")]),n._v(" "),e("p",[n._v("上面的例子是同步的，我们改造成异步的：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v('const fetchCurrenciesData = (callback) => {\n  fetch("https://cdn.jsdelivr.net/gh/fawazahmed0/currency-api@1/latest/currencies.json")\n  .then(res => res.json())\n  .then(res => callback(res));\n}\n\n// This is an async thunk\nconst asyncThunk = (callback) => {\n  return function () {\n    fetchCurrenciesData(callback);\n  }\n}\n\n// This async thunk now returns a function that \n// can be called later on to fetch data from the API.\nconst fetchCurrencies = asyncThunk((res) => console.log(res));\nfetchCurrencies();\n')])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br"),e("span",{staticClass:"line-number"},[n._v("10")]),e("br"),e("span",{staticClass:"line-number"},[n._v("11")]),e("br"),e("span",{staticClass:"line-number"},[n._v("12")]),e("br"),e("span",{staticClass:"line-number"},[n._v("13")]),e("br"),e("span",{staticClass:"line-number"},[n._v("14")]),e("br"),e("span",{staticClass:"line-number"},[n._v("15")]),e("br"),e("span",{staticClass:"line-number"},[n._v("16")]),e("br"),e("span",{staticClass:"line-number"},[n._v("17")]),e("br")])]),e("p",[n._v("当我们调用"),e("code",[n._v("fetchCurrencies()")]),n._v(" 时，会执行 "),e("code",[n._v("fetchCurrenciesData((res) => console.log(res))()")])]),n._v(" "),e("p",[n._v("就会按序执行 fetch 方法，然后走 .then 处理成 json，然后打印。")]),n._v(" "),e("p",[n._v("一套嵌一套，母猪带熊罩。所以，我们可以写出一个 toThunk 工具函数：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function toThunk(asyncFn) {\n  return (...args) => {\n    return (callback) => {\n      asyncFn(...args, callback);\n    };\n  };\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br")])]),e("p",[n._v("可以将任何函数处理做成上述的逻辑：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("let thunk = toThunk(readFile); // readFile 是异步函数\nthunk = thunk('./foo');\nthunk((err, data) => /* do sth. */))\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[n._v("thunk 的两步执行，第一步传入参数，第二步是传入回调函数，这就是 Promise 的 then 的方法思路！！")]),n._v(" "),e("p",[n._v("thunk 还可以搭配 es6 生成器使用，本篇就不作展开。")]),n._v(" "),e("p",[n._v("JavaScript 中「Thunk」怎么理解，你 get 到了吗？\n")]),e("hr"),e("p"),n._v(" "),e("blockquote",[e("p",[n._v("OK，以上便是本篇分享。点赞关注评论，为好文助力👍")]),n._v(" "),e("p",[n._v("我是掘金安东尼 🤠 100 万人气前端技术博主 💥 INFP 写作人格坚持 1000 日更文 ✍ 关注我，安东尼陪你一起度过漫长编程岁月 🌏")])])])}),[],!1,null,null,null);s.default=t.exports}}]);