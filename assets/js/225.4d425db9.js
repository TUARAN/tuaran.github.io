(window.webpackJsonp=window.webpackJsonp||[]).push([[225],{719:function(n,s,e){"use strict";e.r(s);var t=e(2),a=Object(t.a)({},(function(){var n=this,s=n.$createElement,e=n._self._c||s;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("p",[n._v("持续创作，加速成长！这是我参与「掘金日新计划 · 6 月更文挑战」的第10天，"),e("a",{attrs:{href:"https://juejin.cn/post/7099702781094674468",title:"https://juejin.cn/post/7099702781094674468",target:"_blank",rel:"noopener noreferrer"}},[n._v("点击查看活动详情"),e("OutboundLink")],1)]),n._v(" "),e("hr"),n._v(" "),e("p",[n._v("经历过一些列的函数式编程思想的学习总结，一些重要的高阶函数的学习，以及前一段时间关于 RxJS 的学习。")]),n._v(" "),e("p",[n._v("我们再回看一次 —— 组合函数 compose")]),n._v(" "),e("p",[e("strong",[n._v("本瓜越来越觉得，【易读】的代码应该是将声明和调用分开来的。根据不同的流程，用函数组合的方式、也可以说它是管道、或者说是链式调用，将声明的函数组合起来，再等待时机进行调用。")])]),n._v(" "),e("p",[n._v("如果没有组合函数 compose，函数连续调用将会是嵌套的：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const multi10 = function(x) { return x * 10; }\n\nconst toStr = function(x) { return `${x}`; }\n\nconst compute = function(x){ \n    return toStr(multi10(x))\n}\n\ncompute(8)\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br"),e("span",{staticClass:"line-number"},[n._v("6")]),e("br"),e("span",{staticClass:"line-number"},[n._v("7")]),e("br"),e("span",{staticClass:"line-number"},[n._v("8")]),e("br"),e("span",{staticClass:"line-number"},[n._v("9")]),e("br")])]),e("p",[e("code",[n._v("fn3(fn2(fn1(fn0(x))))")]),n._v("，层层嵌套是很容易看错的；")]),n._v(" "),e("p",[n._v("所以，必须尝试将调用层级扁平化！")]),n._v(" "),e("p",[n._v("compose 应运而生，它大概就会是这样：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const compose = function(f,g) { \n    return function(x) { \n        return f(g(x))\n    }\n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br"),e("span",{staticClass:"line-number"},[n._v("4")]),e("br"),e("span",{staticClass:"line-number"},[n._v("5")]),e("br")])]),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("let compute = compose(toStr, multi10)\n\ncompute(8)\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[n._v("通过使用"),e("code",[n._v("compose")]),n._v("函数我们可以把两个函数组合成一个函数，这让代码从右往左执行，而不是层层计算某个函数的结果作为另一个函数的参数，这样代码也更加直观。")]),n._v(" "),e("p",[n._v("当然，我们不能让 compose 限制于只能处理连续调用两个函数，于是支持任意参数版本的 compose 将是这样的：")]),n._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("function compose(...funs){ \n    return (x) =>funs.reduce((acc, fun) => fun(acc), x) \n}\n")])]),n._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[n._v("1")]),e("br"),e("span",{staticClass:"line-number"},[n._v("2")]),e("br"),e("span",{staticClass:"line-number"},[n._v("3")]),e("br")])]),e("p",[n._v("通过函数组合，我们可以可以声明式地指定函数间的关系，代码的可读性也大大提高，也方便我们后续对代码进行扩展跟重构；")]),n._v(" "),e("p",[n._v("而且在"),e("code",[n._v("React")]),n._v("里面，当我们的高阶组件变多的时候，一个套着一个就很难看，我们就可以通过类似的方式来让我们的高阶组件层级扁平化；")]),n._v(" "),e("p",[n._v("这就是最最原始的 compose，以及它被提出的原始动机~~")]),n._v(" "),e("hr"),n._v(" "),e("blockquote",[e("p",[n._v("OK，以上便是本篇分享。点赞关注评论，为好文助力👍")]),n._v(" "),e("p",[n._v("我是掘金安东尼 🤠 100 万阅读量人气前端技术博主 💥 INFP 写作人格坚持 1000 日更文 ✍ 陪你一起度过漫长岁月 🌏")])])])}),[],!1,null,null,null);s.default=a.exports}}]);