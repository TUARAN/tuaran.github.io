(window.webpackJsonp=window.webpackJsonp||[]).push([[222],{717:function(t,a,r){"use strict";r.r(a);var v=r(2),e=Object(v.a)({},(function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("p",[t._v("持续创作，加速成长！这是我参与「掘金日新计划 · 6 月更文挑战」的第29天，"),r("a",{attrs:{href:"https://juejin.cn/post/7099702781094674468",title:"https://juejin.cn/post/7099702781094674468",target:"_blank",rel:"noopener noreferrer"}},[t._v("点击查看活动详情"),r("OutboundLink")],1)]),t._v(" "),r("blockquote",[r("p",[t._v("本篇参考：https://medium.com/javascript-scene/10-interview-questions-every-javascript-developer-should-know-6fa6bdf5ad95")]),t._v(" "),r("p",[t._v("作者："),r("a",{attrs:{href:"https://medium.com/@_ericelliott",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eric Elliott"),r("OutboundLink")],1)]),r("hr"),r("p")]),t._v(" "),r("p",[t._v("咱就是说，经常看技术博客的同学应该熟悉 "),r("a",{attrs:{href:"https://medium.com/@_ericelliott",target:"_blank",rel:"noopener noreferrer"}},[t._v("Eric Elliott"),r("OutboundLink")],1),t._v(" 这位老哥，他致力于 JavaScript 编程、区块链领域的技术博文输出，在 medium 平台上有 10w+ 粉丝。")]),t._v(" "),r("p",[t._v("本瓜发现，对于 JS 编程，这老哥有以下 2 个特点：")]),t._v(" "),r("ol",[r("li",[t._v("青睐函数式编程；")]),t._v(" "),r("li",[t._v("排斥 class 类继承，青睐基于原型继承；")])]),t._v(" "),r("p",[t._v("对于技术偏好，需辩证的看待。本篇就从他原本 10 个基础面试问题中抽取其中 4 个还不错的问题来看看~")]),t._v(" "),r("p",[t._v("按需所取，冲冲冲ヾ(◍°∇°◍)ﾉﾞ")]),t._v(" "),r("h2",{attrs:{id:"一、你能说出-javascript-的编程范式吗"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一、你能说出-javascript-的编程范式吗"}},[t._v("#")]),t._v(" 一、你能说出 JavaScript 的编程范式吗？")]),t._v(" "),r("h3",{attrs:{id:"好的回答"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#好的回答"}},[t._v("#")]),t._v(" 好的回答")]),t._v(" "),r("p",[t._v("首先要说出："),r("strong",[t._v("JavaScript 是一门多范式语言！支持面向过程（命令式）、面向对象（OOP）和函数式编程（声明式）。")])]),t._v(" "),r("p",[t._v("其次，最重要的是说出："),r("strong",[t._v("JavaScript 是通过原型继承（OLOO-对象委托）来实现面向对象（OOP）的；")])]),t._v(" "),r("p",[t._v("如果还能说出以下，就更棒了："),r("strong",[t._v("JavaScript 通过闭包、函数是一等公民、lambda 运算来实现函数式编程的。")])]),t._v(" "),r("p",[t._v("如果再进一步，回答出 JavaScript 演进历史，就直接称绝叫好了："),r("strong",[t._v("JavaScript的语言设计主要受到了Self（一种基于原型的编程语言）和Scheme（一门函数式编程语言）的影响。在语法结构上它又与C语言有很多相似。")])]),t._v(" "),r("blockquote",[r("ul",[r("li",[t._v("Self 语言 => 基于原型 => JavaScript 用原型实现面向对象编程；")]),t._v(" "),r("li",[t._v("Scheme 语言 => 函数式编程语言 => JavaScript 函数式编程；")]),t._v(" "),r("li",[t._v("C 语言 => 面向过程 => JavaScript 面向过程编程；")])])]),t._v(" "),r("p",[t._v("推荐 Eric Elliott 的另外两篇文章，JavaScript 的两大支柱：")]),t._v(" "),r("ol",[r("li",[r("a",{attrs:{href:"https://medium.com/javascript-scene/the-two-pillars-of-javascript-ee6f3281e7f3",target:"_blank",rel:"noopener noreferrer"}},[t._v("基于原型的继承"),r("OutboundLink")],1)]),t._v(" "),r("li",[r("a",{attrs:{href:"https://medium.com/javascript-scene/the-two-pillars-of-javascript-pt-2-functional-programming-a63aa53a41a4",target:"_blank",rel:"noopener noreferrer"}},[t._v("函数式编程"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"差的回答"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#差的回答"}},[t._v("#")]),t._v(" 差的回答")]),t._v(" "),r("p",[t._v("不知道编程范式是什么、或者没有提到通过原型实现面向对象、或者没有提到函数式编程；")]),t._v(" "),r("h2",{attrs:{id:"二、什么是函数式编程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#二、什么是函数式编程"}},[t._v("#")]),t._v(" 二、什么是函数式编程？")]),t._v(" "),r("h3",{attrs:{id:"好的回答-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#好的回答-2"}},[t._v("#")]),t._v(" 好的回答")]),t._v(" "),r("p",[t._v("函数式编程是最早出现的编程范式，通过组合运算函数来生成程序。有一些重要的概念：")]),t._v(" "),r("ul",[r("li",[t._v("纯函数")]),t._v(" "),r("li",[t._v("避免副作用")]),t._v(" "),r("li",[t._v("函数组合")]),t._v(" "),r("li",[t._v("高阶函数（闭包）")]),t._v(" "),r("li",[t._v("函数组合")]),t._v(" "),r("li",[t._v("其它函数式编程语言，比如 Lisp、Haskell")])]),t._v(" "),r("p",[r("strong",[t._v("本瓜觉得这里最 nb 就是能提到 monad 和延迟执行了~")])]),t._v(" "),r("h3",{attrs:{id:"差的回答-2"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#差的回答-2"}},[t._v("#")]),t._v(" 差的回答")]),t._v(" "),r("p",[t._v("没听说过函数式编程，或者没有提到纯函数、不知道副作用（隐式、显示输出）、更不可能知道高阶函数、闭包的应用、函数封装、函数组合这些了；")]),t._v(" "),r("h2",{attrs:{id:"三、类继承和原型继承有什么区别"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三、类继承和原型继承有什么区别"}},[t._v("#")]),t._v(" 三、类继承和原型继承有什么区别？")]),t._v(" "),r("h3",{attrs:{id:"好的回答-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#好的回答-3"}},[t._v("#")]),t._v(" 好的回答")]),t._v(" "),r("p",[t._v("类继承，通过构造函数实现（ "),r("code",[t._v("new")]),t._v(" 关键字）；tips：即使不用 ES6 class，也能实现类继承；")]),t._v(" "),r("p",[t._v("原型继承，实例直接从其他对象继承，工厂函数或 "),r("code",[t._v("Object.create()")]),t._v(";")]),t._v(" "),r("p",[t._v("本瓜这里觉得能答出以下就很棒了：")]),t._v(" "),r("p",[r("strong",[t._v("类继承：基于对象复制；")])]),t._v(" "),r("p",[r("strong",[t._v("原型继承：基于对象委托；")])]),t._v(" "),r("p",[t._v("推荐阅读：")]),t._v(" "),r("ul",[r("li",[r("a",{attrs:{href:"https://medium.com/javascript-scene/common-misconceptions-about-inheritance-in-javascript-d5d9bab29b0a",target:"_blank",rel:"noopener noreferrer"}},[t._v("JavaScript 继承中常见的误解"),r("OutboundLink")],1)])]),t._v(" "),r("h3",{attrs:{id:"差的回答-3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#差的回答-3"}},[t._v("#")]),t._v(" 差的回答")]),t._v(" "),r("p",[t._v("类继承和原型继承没有什么差别。")]),t._v(" "),r("h2",{attrs:{id:"四、面向对象和函数式的优缺点"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四、面向对象和函数式的优缺点"}},[t._v("#")]),t._v(" 四、面向对象和函数式的优缺点")]),t._v(" "),r("h3",{attrs:{id:"好的回答-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#好的回答-4"}},[t._v("#")]),t._v(" 好的回答")]),t._v(" "),r("p",[t._v("面向对象优点：对象的概念容易理解，方法调用灵活；")]),t._v(" "),r("p",[t._v("面向对象缺点：对象可在多个函数中共享状态、被修改，"),r("strong",[t._v("极有可能会产生“竞争”的情况")]),t._v("（多处修改同一对象）；")]),t._v(" "),r("p",[t._v("函数式优点：避免变量的共享、修改，纯函数不产生副作用；声明式代码风格更易阅读，更易代码重组、复用；")]),t._v(" "),r("p",[t._v("函数式缺点：过度抽象，可读性降低；学习难度更大，比如 Monad；")]),t._v(" "),r("h3",{attrs:{id:"差的回答-4"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#差的回答-4"}},[t._v("#")]),t._v(" 差的回答")]),t._v(" "),r("p",[t._v("对二者的优缺点不熟悉；")]),t._v(" "),r("blockquote",[r("p",[t._v("OK，以上便是本篇分享。点赞关注评论，为好文助力👍")]),t._v(" "),r("p",[t._v("我是掘金安东尼 🤠 100 万阅读量人气前端技术博主 💥 INFP 写作人格坚持 1000 日更文 ✍ 关注我，陪你一起度过漫长编程岁月 🌏")])])])}),[],!1,null,null,null);a.default=e.exports}}]);