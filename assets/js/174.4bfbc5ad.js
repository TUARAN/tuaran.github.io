(window.webpackJsonp=window.webpackJsonp||[]).push([[174],{673:function(s,n,e){"use strict";e.r(n);var l=e(2),a=Object(l.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("p",[s._v("「这是我参与2022首次更文挑战的第18天，活动详情查看："),e("a",{attrs:{href:"https://juejin.cn/post/7052884569032392740",target:"_blank",rel:"noopener noreferrer"}},[s._v("2022首次更文挑战"),e("OutboundLink")],1),s._v("」")]),s._v(" "),e("hr"),s._v(" "),e("p",[s._v("本篇带来算法题：“情感丰富的文字”")]),s._v(" "),e("ul",[e("li",[s._v("什么是“情感丰富的文字”？")])]),s._v(" "),e("p",[s._v('有时候人们会用重复写一些字母来表示额外的感受，比如 "hello" -> "heeellooo", "hi" -> "hiii"。我们将相邻字母都相同的一串字符定义为相同字母组，例如："h", "eee", "ll", "ooo"。')]),s._v(" "),e("p",[s._v("对于一个给定的字符串 S ，如果另一个单词能够通过将一些字母组扩张从而使其和 S 相同，我们将这个单词定义为可扩张的（stretchy）。")]),s._v(" "),e("p",[s._v("扩张操作定义如下：选择一个字母组（包含字母 c ），然后往其中添加相同的字母 c 使其长度达到 3 或以上。")]),s._v(" "),e("p",[s._v('例如，以 "hello" 为例，我们可以对字母组 "o" 扩张得到 "hellooo"，但是无法以同样的方法得到 "helloo" 因为字母组 "oo" 长度小于 3。')]),s._v(" "),e("p",[s._v('此外，我们可以进行另一种扩张 "ll" -> "lllll" 以获得 "helllllooo"。如果 S = "helllllooo"，那么查询词 "hello" 是可扩张的，因为可以对它执行这两种扩张操作使得 query = "hello" -> "hellooo" -> "helllllooo" = S。')]),s._v(" "),e("p",[s._v("输入一组查询单词，输出其中可扩张的单词数量。")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('示例：\n\n输入： \nS = "heeellooo"\nwords = ["hello", "hi", "helo"]\n输出：1\n解释：\n我们能通过扩张 "hello" 的 "e" 和 "o" 来得到 "heeellooo"。\n我们不能通过扩张 "helo" 来得到 "heeellooo" 因为 "ll" 的长度小于 3 。\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br")])]),e("p",[s._v("提示：")]),s._v(" "),e("ul",[e("li",[s._v("0 <= len(S) <= 100。")]),s._v(" "),e("li",[s._v("0 <= len(words) <= 100。")]),s._v(" "),e("li",[s._v("0 <= len(words[i]) <= 100。")]),s._v(" "),e("li",[s._v("S 和所有在 words 中的单词都只由小写字母组成。")])]),s._v(" "),e("p",[e("strong",[s._v("JavaScript 实现：")])]),s._v(" "),e("p",[s._v("采用双指针的解法思路：")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("var expressiveWords = function (s, words) {\n    let ans = 0;\n    for (const w of words) if (check(s, w)) ans++;\n    return ans;\n};\n\nfunction check(s1, s2) {\n    let i = s1.length - 1, j = s2.length - 1;\n    while (i >= 0 && j >= 0) {\n        // 字符不相同 不符合要求\n        if (s1[i] !== s2[j]) return false;\n        // 算出s1[i]的重复字符数\n        let k = i, cnt1 = 0;\n        while (s1[i] === s1[k]) i--, cnt1++;\n        // 算出s2[j]的重复字符数\n        let h = j, cnt2 = 0;\n        while (s2[j] === s2[h]) j--, cnt2++;\n        // s2[j]的重复字符数大于s1[i]的重复字符数 不符合要求\n        if (cnt2 > cnt1) return false;\n        // s1[i]的重复字符数为2且s2[j]的重复字符数为1 不能扩展到3\n        if (cnt1 === 2 && cnt2 === 1) return false;\n    }\n    return i === j;\n}\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br"),e("span",{staticClass:"line-number"},[s._v("17")]),e("br"),e("span",{staticClass:"line-number"},[s._v("18")]),e("br"),e("span",{staticClass:"line-number"},[s._v("19")]),e("br"),e("span",{staticClass:"line-number"},[s._v("20")]),e("br"),e("span",{staticClass:"line-number"},[s._v("21")]),e("br"),e("span",{staticClass:"line-number"},[s._v("22")]),e("br"),e("span",{staticClass:"line-number"},[s._v("23")]),e("br"),e("span",{staticClass:"line-number"},[s._v("24")]),e("br")])]),e("hr"),s._v(" "),e("blockquote",[e("p",[s._v("我是掘金安东尼，输出暴露输入，技术洞见生活，再会~")])])])}),[],!1,null,null,null);n.default=a.exports}}]);